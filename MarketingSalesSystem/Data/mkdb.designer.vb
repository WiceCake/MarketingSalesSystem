'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="MKDB")>  _
Partial Public Class mkdbDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub Inserttrans_CatchActivity(instance As trans_CatchActivity)
    End Sub
  Partial Private Sub Updatetrans_CatchActivity(instance As trans_CatchActivity)
    End Sub
  Partial Private Sub Deletetrans_CatchActivity(instance As trans_CatchActivity)
    End Sub
  Partial Private Sub Inserttrans_WeightSlipDetail(instance As trans_WeightSlipDetail)
    End Sub
  Partial Private Sub Updatetrans_WeightSlipDetail(instance As trans_WeightSlipDetail)
    End Sub
  Partial Private Sub Deletetrans_WeightSlipDetail(instance As trans_WeightSlipDetail)
    End Sub
  Partial Private Sub Inserttrans_CatchActivityDetail(instance As trans_CatchActivityDetail)
    End Sub
  Partial Private Sub Updatetrans_CatchActivityDetail(instance As trans_CatchActivityDetail)
    End Sub
  Partial Private Sub Deletetrans_CatchActivityDetail(instance As trans_CatchActivityDetail)
    End Sub
  Partial Private Sub Inserttrans_CatchMethod(instance As trans_CatchMethod)
    End Sub
  Partial Private Sub Updatetrans_CatchMethod(instance As trans_CatchMethod)
    End Sub
  Partial Private Sub Deletetrans_CatchMethod(instance As trans_CatchMethod)
    End Sub
  Partial Private Sub Inserttrans_SalesBuyerCatch(instance As trans_SalesBuyerCatch)
    End Sub
  Partial Private Sub Updatetrans_SalesBuyerCatch(instance As trans_SalesBuyerCatch)
    End Sub
  Partial Private Sub Deletetrans_SalesBuyerCatch(instance As trans_SalesBuyerCatch)
    End Sub
  Partial Private Sub Inserttrans_SalesInvoiceBuyer(instance As trans_SalesInvoiceBuyer)
    End Sub
  Partial Private Sub Updatetrans_SalesInvoiceBuyer(instance As trans_SalesInvoiceBuyer)
    End Sub
  Partial Private Sub Deletetrans_SalesInvoiceBuyer(instance As trans_SalesInvoiceBuyer)
    End Sub
  Partial Private Sub Inserttrans_SalesReport(instance As trans_SalesReport)
    End Sub
  Partial Private Sub Updatetrans_SalesReport(instance As trans_SalesReport)
    End Sub
  Partial Private Sub Deletetrans_SalesReport(instance As trans_SalesReport)
    End Sub
  Partial Private Sub Inserttrans_SalesReportBuyer(instance As trans_SalesReportBuyer)
    End Sub
  Partial Private Sub Updatetrans_SalesReportBuyer(instance As trans_SalesReportBuyer)
    End Sub
  Partial Private Sub Deletetrans_SalesReportBuyer(instance As trans_SalesReportBuyer)
    End Sub
  Partial Private Sub Inserttrans_SalesReportCatcher(instance As trans_SalesReportCatcher)
    End Sub
  Partial Private Sub Updatetrans_SalesReportCatcher(instance As trans_SalesReportCatcher)
    End Sub
  Partial Private Sub Deletetrans_SalesReportCatcher(instance As trans_SalesReportCatcher)
    End Sub
  Partial Private Sub Inserttrans_SalesReportPrice(instance As trans_SalesReportPrice)
    End Sub
  Partial Private Sub Updatetrans_SalesReportPrice(instance As trans_SalesReportPrice)
    End Sub
  Partial Private Sub Deletetrans_SalesReportPrice(instance As trans_SalesReportPrice)
    End Sub
  Partial Private Sub Inserttrans_SalesReportSummary(instance As trans_SalesReportSummary)
    End Sub
  Partial Private Sub Updatetrans_SalesReportSummary(instance As trans_SalesReportSummary)
    End Sub
  Partial Private Sub Deletetrans_SalesReportSummary(instance As trans_SalesReportSummary)
    End Sub
  Partial Private Sub Inserttrans_SalesReportWeightSlip(instance As trans_SalesReportWeightSlip)
    End Sub
  Partial Private Sub Updatetrans_SalesReportWeightSlip(instance As trans_SalesReportWeightSlip)
    End Sub
  Partial Private Sub Deletetrans_SalesReportWeightSlip(instance As trans_SalesReportWeightSlip)
    End Sub
  Partial Private Sub Inserttrans_SalesUnloaded(instance As trans_SalesUnloaded)
    End Sub
  Partial Private Sub Updatetrans_SalesUnloaded(instance As trans_SalesUnloaded)
    End Sub
  Partial Private Sub Deletetrans_SalesUnloaded(instance As trans_SalesUnloaded)
    End Sub
  Partial Private Sub Inserttrans_WeightSlip(instance As trans_WeightSlip)
    End Sub
  Partial Private Sub Updatetrans_WeightSlip(instance As trans_WeightSlip)
    End Sub
  Partial Private Sub Deletetrans_WeightSlip(instance As trans_WeightSlip)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.MarketingSalesSystem.Settings.Default.MKDBConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property trans_CatchActivities() As System.Data.Linq.Table(Of trans_CatchActivity)
		Get
			Return Me.GetTable(Of trans_CatchActivity)
		End Get
	End Property
	
	Public ReadOnly Property trans_WeightSlipDetails() As System.Data.Linq.Table(Of trans_WeightSlipDetail)
		Get
			Return Me.GetTable(Of trans_WeightSlipDetail)
		End Get
	End Property
	
	Public ReadOnly Property trans_CatchActivityDetails() As System.Data.Linq.Table(Of trans_CatchActivityDetail)
		Get
			Return Me.GetTable(Of trans_CatchActivityDetail)
		End Get
	End Property
	
	Public ReadOnly Property trans_CatchMethods() As System.Data.Linq.Table(Of trans_CatchMethod)
		Get
			Return Me.GetTable(Of trans_CatchMethod)
		End Get
	End Property
	
	Public ReadOnly Property trans_SalesBuyerCatches() As System.Data.Linq.Table(Of trans_SalesBuyerCatch)
		Get
			Return Me.GetTable(Of trans_SalesBuyerCatch)
		End Get
	End Property
	
	Public ReadOnly Property trans_SalesInvoiceBuyers() As System.Data.Linq.Table(Of trans_SalesInvoiceBuyer)
		Get
			Return Me.GetTable(Of trans_SalesInvoiceBuyer)
		End Get
	End Property
	
	Public ReadOnly Property trans_SalesReports() As System.Data.Linq.Table(Of trans_SalesReport)
		Get
			Return Me.GetTable(Of trans_SalesReport)
		End Get
	End Property
	
	Public ReadOnly Property trans_SalesReportBuyers() As System.Data.Linq.Table(Of trans_SalesReportBuyer)
		Get
			Return Me.GetTable(Of trans_SalesReportBuyer)
		End Get
	End Property
	
	Public ReadOnly Property trans_SalesReportCatchers() As System.Data.Linq.Table(Of trans_SalesReportCatcher)
		Get
			Return Me.GetTable(Of trans_SalesReportCatcher)
		End Get
	End Property
	
	Public ReadOnly Property trans_SalesReportPrices() As System.Data.Linq.Table(Of trans_SalesReportPrice)
		Get
			Return Me.GetTable(Of trans_SalesReportPrice)
		End Get
	End Property
	
	Public ReadOnly Property trans_SalesReportSummaries() As System.Data.Linq.Table(Of trans_SalesReportSummary)
		Get
			Return Me.GetTable(Of trans_SalesReportSummary)
		End Get
	End Property
	
	Public ReadOnly Property trans_SalesReportWeightSlips() As System.Data.Linq.Table(Of trans_SalesReportWeightSlip)
		Get
			Return Me.GetTable(Of trans_SalesReportWeightSlip)
		End Get
	End Property
	
	Public ReadOnly Property trans_SalesUnloadeds() As System.Data.Linq.Table(Of trans_SalesUnloaded)
		Get
			Return Me.GetTable(Of trans_SalesUnloaded)
		End Get
	End Property
	
	Public ReadOnly Property trans_WeightSlips() As System.Data.Linq.Table(Of trans_WeightSlip)
		Get
			Return Me.GetTable(Of trans_WeightSlip)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.trans_CatchActivities")>  _
Partial Public Class trans_CatchActivity
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _catchActivity_ID As Integer
	
	Private _catchDate As Date
	
	Private _method_ID As Integer
	
	Private _longitude As Decimal
	
	Private _latitude As Decimal
	
	Private _catchReferenceNum As String
	
	Private _approvalStatus As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OncatchActivity_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OncatchActivity_IDChanged()
    End Sub
    Partial Private Sub OncatchDateChanging(value As Date)
    End Sub
    Partial Private Sub OncatchDateChanged()
    End Sub
    Partial Private Sub Onmethod_IDChanging(value As Integer)
    End Sub
    Partial Private Sub Onmethod_IDChanged()
    End Sub
    Partial Private Sub OnlongitudeChanging(value As Decimal)
    End Sub
    Partial Private Sub OnlongitudeChanged()
    End Sub
    Partial Private Sub OnlatitudeChanging(value As Decimal)
    End Sub
    Partial Private Sub OnlatitudeChanged()
    End Sub
    Partial Private Sub OncatchReferenceNumChanging(value As String)
    End Sub
    Partial Private Sub OncatchReferenceNumChanged()
    End Sub
    Partial Private Sub OnapprovalStatusChanging(value As Integer)
    End Sub
    Partial Private Sub OnapprovalStatusChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_catchActivity_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property catchActivity_ID() As Integer
		Get
			Return Me._catchActivity_ID
		End Get
		Set
			If ((Me._catchActivity_ID = value)  _
						= false) Then
				Me.OncatchActivity_IDChanging(value)
				Me.SendPropertyChanging
				Me._catchActivity_ID = value
				Me.SendPropertyChanged("catchActivity_ID")
				Me.OncatchActivity_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_catchDate", DbType:="DateTime NOT NULL")>  _
	Public Property catchDate() As Date
		Get
			Return Me._catchDate
		End Get
		Set
			If ((Me._catchDate = value)  _
						= false) Then
				Me.OncatchDateChanging(value)
				Me.SendPropertyChanging
				Me._catchDate = value
				Me.SendPropertyChanged("catchDate")
				Me.OncatchDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_method_ID", DbType:="Int NOT NULL")>  _
	Public Property method_ID() As Integer
		Get
			Return Me._method_ID
		End Get
		Set
			If ((Me._method_ID = value)  _
						= false) Then
				Me.Onmethod_IDChanging(value)
				Me.SendPropertyChanging
				Me._method_ID = value
				Me.SendPropertyChanged("method_ID")
				Me.Onmethod_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_longitude", DbType:="Decimal(9,6) NOT NULL")>  _
	Public Property longitude() As Decimal
		Get
			Return Me._longitude
		End Get
		Set
			If ((Me._longitude = value)  _
						= false) Then
				Me.OnlongitudeChanging(value)
				Me.SendPropertyChanging
				Me._longitude = value
				Me.SendPropertyChanged("longitude")
				Me.OnlongitudeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_latitude", DbType:="Decimal(9,6) NOT NULL")>  _
	Public Property latitude() As Decimal
		Get
			Return Me._latitude
		End Get
		Set
			If ((Me._latitude = value)  _
						= false) Then
				Me.OnlatitudeChanging(value)
				Me.SendPropertyChanging
				Me._latitude = value
				Me.SendPropertyChanged("latitude")
				Me.OnlatitudeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_catchReferenceNum", DbType:="VarChar(13) NOT NULL", CanBeNull:=false)>  _
	Public Property catchReferenceNum() As String
		Get
			Return Me._catchReferenceNum
		End Get
		Set
			If (String.Equals(Me._catchReferenceNum, value) = false) Then
				Me.OncatchReferenceNumChanging(value)
				Me.SendPropertyChanging
				Me._catchReferenceNum = value
				Me.SendPropertyChanged("catchReferenceNum")
				Me.OncatchReferenceNumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_approvalStatus", DbType:="Int NOT NULL")>  _
	Public Property approvalStatus() As Integer
		Get
			Return Me._approvalStatus
		End Get
		Set
			If ((Me._approvalStatus = value)  _
						= false) Then
				Me.OnapprovalStatusChanging(value)
				Me.SendPropertyChanging
				Me._approvalStatus = value
				Me.SendPropertyChanged("approvalStatus")
				Me.OnapprovalStatusChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.trans_WeightSlipDetails")>  _
Partial Public Class trans_WeightSlipDetail
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _weightSlipDetail_ID As Integer
	
	Private _weightSlip_ID As System.Nullable(Of Integer)
	
	Private _weightSlipDetailDate As System.Nullable(Of Date)
	
	Private _weigslipFormNum As String
	
	Private _batchNum As String
	
	Private _lotNum As String
	
	Private _plateNum As String
	
	Private _skipjack0_200To0_299 As System.Nullable(Of Decimal)
	
	Private _skipjack0_300To0_499 As System.Nullable(Of Decimal)
	
	Private _skipjack0_500To0_999 As System.Nullable(Of Decimal)
	
	Private _skipjack1_0To1_39 As System.Nullable(Of Decimal)
	
	Private _skipjack1_4To1_79 As System.Nullable(Of Decimal)
	
	Private _skipjack1_8To2_49 As System.Nullable(Of Decimal)
	
	Private _skipjack2_5To3_49 As System.Nullable(Of Decimal)
	
	Private _skipjack3_5AndUP As System.Nullable(Of Decimal)
	
	Private _yelllowfin0_300To0_499 As System.Nullable(Of Decimal)
	
	Private _yellowfin0_500To0_999 As System.Nullable(Of Decimal)
	
	Private _yellowfin1_0To1_49 As System.Nullable(Of Decimal)
	
	Private _yellowfin1_5To2_49 As System.Nullable(Of Decimal)
	
	Private _yellowfin2_5To3_49 As System.Nullable(Of Decimal)
	
	Private _yellowfin3_5To4_99 As System.Nullable(Of Decimal)
	
	Private _yellowfin5_0To9_99 As System.Nullable(Of Decimal)
	
	Private _yellowfin10AndUP As System.Nullable(Of Decimal)
	
	Private _bigeye0_300To0_499 As System.Nullable(Of Decimal)
	
	Private _bigeye0_500To0_999 As System.Nullable(Of Decimal)
	
	Private _bigeye1_0To1_49 As System.Nullable(Of Decimal)
	
	Private _bigeye1_5To2_49 As System.Nullable(Of Decimal)
	
	Private _bigeye2_5To3_49 As System.Nullable(Of Decimal)
	
	Private _bigeye3_5To4_99 As System.Nullable(Of Decimal)
	
	Private _bigeye5_0To9_99 As System.Nullable(Of Decimal)
	
	Private _bigeye10AndUP As System.Nullable(Of Decimal)
	
	Private _bonito0_300To0_499 As System.Nullable(Of Decimal)
	
	Private _bonito0_500AndUP As System.Nullable(Of Decimal)
	
	Private _fishmeal As System.Nullable(Of Decimal)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnweightSlipDetail_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnweightSlipDetail_IDChanged()
    End Sub
    Partial Private Sub OnweightSlip_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnweightSlip_IDChanged()
    End Sub
    Partial Private Sub OnweightSlipDetailDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnweightSlipDetailDateChanged()
    End Sub
    Partial Private Sub OnweigslipFormNumChanging(value As String)
    End Sub
    Partial Private Sub OnweigslipFormNumChanged()
    End Sub
    Partial Private Sub OnbatchNumChanging(value As String)
    End Sub
    Partial Private Sub OnbatchNumChanged()
    End Sub
    Partial Private Sub OnlotNumChanging(value As String)
    End Sub
    Partial Private Sub OnlotNumChanged()
    End Sub
    Partial Private Sub OnplateNumChanging(value As String)
    End Sub
    Partial Private Sub OnplateNumChanged()
    End Sub
    Partial Private Sub Onskipjack0_200To0_299Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onskipjack0_200To0_299Changed()
    End Sub
    Partial Private Sub Onskipjack0_300To0_499Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onskipjack0_300To0_499Changed()
    End Sub
    Partial Private Sub Onskipjack0_500To0_999Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onskipjack0_500To0_999Changed()
    End Sub
    Partial Private Sub Onskipjack1_0To1_39Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onskipjack1_0To1_39Changed()
    End Sub
    Partial Private Sub Onskipjack1_4To1_79Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onskipjack1_4To1_79Changed()
    End Sub
    Partial Private Sub Onskipjack1_8To2_49Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onskipjack1_8To2_49Changed()
    End Sub
    Partial Private Sub Onskipjack2_5To3_49Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onskipjack2_5To3_49Changed()
    End Sub
    Partial Private Sub Onskipjack3_5AndUPChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onskipjack3_5AndUPChanged()
    End Sub
    Partial Private Sub Onyelllowfin0_300To0_499Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onyelllowfin0_300To0_499Changed()
    End Sub
    Partial Private Sub Onyellowfin0_500To0_999Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onyellowfin0_500To0_999Changed()
    End Sub
    Partial Private Sub Onyellowfin1_0To1_49Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onyellowfin1_0To1_49Changed()
    End Sub
    Partial Private Sub Onyellowfin1_5To2_49Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onyellowfin1_5To2_49Changed()
    End Sub
    Partial Private Sub Onyellowfin2_5To3_49Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onyellowfin2_5To3_49Changed()
    End Sub
    Partial Private Sub Onyellowfin3_5To4_99Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onyellowfin3_5To4_99Changed()
    End Sub
    Partial Private Sub Onyellowfin5_0To9_99Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onyellowfin5_0To9_99Changed()
    End Sub
    Partial Private Sub Onyellowfin10AndUPChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onyellowfin10AndUPChanged()
    End Sub
    Partial Private Sub Onbigeye0_300To0_499Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onbigeye0_300To0_499Changed()
    End Sub
    Partial Private Sub Onbigeye0_500To0_999Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onbigeye0_500To0_999Changed()
    End Sub
    Partial Private Sub Onbigeye1_0To1_49Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onbigeye1_0To1_49Changed()
    End Sub
    Partial Private Sub Onbigeye1_5To2_49Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onbigeye1_5To2_49Changed()
    End Sub
    Partial Private Sub Onbigeye2_5To3_49Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onbigeye2_5To3_49Changed()
    End Sub
    Partial Private Sub Onbigeye3_5To4_99Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onbigeye3_5To4_99Changed()
    End Sub
    Partial Private Sub Onbigeye5_0To9_99Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onbigeye5_0To9_99Changed()
    End Sub
    Partial Private Sub Onbigeye10AndUPChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onbigeye10AndUPChanged()
    End Sub
    Partial Private Sub Onbonito0_300To0_499Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onbonito0_300To0_499Changed()
    End Sub
    Partial Private Sub Onbonito0_500AndUPChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onbonito0_500AndUPChanged()
    End Sub
    Partial Private Sub OnfishmealChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnfishmealChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weightSlipDetail_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property weightSlipDetail_ID() As Integer
		Get
			Return Me._weightSlipDetail_ID
		End Get
		Set
			If ((Me._weightSlipDetail_ID = value)  _
						= false) Then
				Me.OnweightSlipDetail_IDChanging(value)
				Me.SendPropertyChanging
				Me._weightSlipDetail_ID = value
				Me.SendPropertyChanged("weightSlipDetail_ID")
				Me.OnweightSlipDetail_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weightSlip_ID", DbType:="Int")>  _
	Public Property weightSlip_ID() As System.Nullable(Of Integer)
		Get
			Return Me._weightSlip_ID
		End Get
		Set
			If (Me._weightSlip_ID.Equals(value) = false) Then
				Me.OnweightSlip_IDChanging(value)
				Me.SendPropertyChanging
				Me._weightSlip_ID = value
				Me.SendPropertyChanged("weightSlip_ID")
				Me.OnweightSlip_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weightSlipDetailDate", DbType:="Date")>  _
	Public Property weightSlipDetailDate() As System.Nullable(Of Date)
		Get
			Return Me._weightSlipDetailDate
		End Get
		Set
			If (Me._weightSlipDetailDate.Equals(value) = false) Then
				Me.OnweightSlipDetailDateChanging(value)
				Me.SendPropertyChanging
				Me._weightSlipDetailDate = value
				Me.SendPropertyChanged("weightSlipDetailDate")
				Me.OnweightSlipDetailDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weigslipFormNum", DbType:="VarChar(20)")>  _
	Public Property weigslipFormNum() As String
		Get
			Return Me._weigslipFormNum
		End Get
		Set
			If (String.Equals(Me._weigslipFormNum, value) = false) Then
				Me.OnweigslipFormNumChanging(value)
				Me.SendPropertyChanging
				Me._weigslipFormNum = value
				Me.SendPropertyChanged("weigslipFormNum")
				Me.OnweigslipFormNumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_batchNum", DbType:="VarChar(20)")>  _
	Public Property batchNum() As String
		Get
			Return Me._batchNum
		End Get
		Set
			If (String.Equals(Me._batchNum, value) = false) Then
				Me.OnbatchNumChanging(value)
				Me.SendPropertyChanging
				Me._batchNum = value
				Me.SendPropertyChanged("batchNum")
				Me.OnbatchNumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lotNum", DbType:="VarChar(20)")>  _
	Public Property lotNum() As String
		Get
			Return Me._lotNum
		End Get
		Set
			If (String.Equals(Me._lotNum, value) = false) Then
				Me.OnlotNumChanging(value)
				Me.SendPropertyChanging
				Me._lotNum = value
				Me.SendPropertyChanged("lotNum")
				Me.OnlotNumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_plateNum", DbType:="VarChar(20)")>  _
	Public Property plateNum() As String
		Get
			Return Me._plateNum
		End Get
		Set
			If (String.Equals(Me._plateNum, value) = false) Then
				Me.OnplateNumChanging(value)
				Me.SendPropertyChanging
				Me._plateNum = value
				Me.SendPropertyChanged("plateNum")
				Me.OnplateNumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_skipjack0_200To0_299", DbType:="Decimal(10,5)")>  _
	Public Property skipjack0_200To0_299() As System.Nullable(Of Decimal)
		Get
			Return Me._skipjack0_200To0_299
		End Get
		Set
			If (Me._skipjack0_200To0_299.Equals(value) = false) Then
				Me.Onskipjack0_200To0_299Changing(value)
				Me.SendPropertyChanging
				Me._skipjack0_200To0_299 = value
				Me.SendPropertyChanged("skipjack0_200To0_299")
				Me.Onskipjack0_200To0_299Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_skipjack0_300To0_499", DbType:="Decimal(10,5)")>  _
	Public Property skipjack0_300To0_499() As System.Nullable(Of Decimal)
		Get
			Return Me._skipjack0_300To0_499
		End Get
		Set
			If (Me._skipjack0_300To0_499.Equals(value) = false) Then
				Me.Onskipjack0_300To0_499Changing(value)
				Me.SendPropertyChanging
				Me._skipjack0_300To0_499 = value
				Me.SendPropertyChanged("skipjack0_300To0_499")
				Me.Onskipjack0_300To0_499Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_skipjack0_500To0_999", DbType:="Decimal(10,5)")>  _
	Public Property skipjack0_500To0_999() As System.Nullable(Of Decimal)
		Get
			Return Me._skipjack0_500To0_999
		End Get
		Set
			If (Me._skipjack0_500To0_999.Equals(value) = false) Then
				Me.Onskipjack0_500To0_999Changing(value)
				Me.SendPropertyChanging
				Me._skipjack0_500To0_999 = value
				Me.SendPropertyChanged("skipjack0_500To0_999")
				Me.Onskipjack0_500To0_999Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_skipjack1_0To1_39", DbType:="Decimal(10,5)")>  _
	Public Property skipjack1_0To1_39() As System.Nullable(Of Decimal)
		Get
			Return Me._skipjack1_0To1_39
		End Get
		Set
			If (Me._skipjack1_0To1_39.Equals(value) = false) Then
				Me.Onskipjack1_0To1_39Changing(value)
				Me.SendPropertyChanging
				Me._skipjack1_0To1_39 = value
				Me.SendPropertyChanged("skipjack1_0To1_39")
				Me.Onskipjack1_0To1_39Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_skipjack1_4To1_79", DbType:="Decimal(10,5)")>  _
	Public Property skipjack1_4To1_79() As System.Nullable(Of Decimal)
		Get
			Return Me._skipjack1_4To1_79
		End Get
		Set
			If (Me._skipjack1_4To1_79.Equals(value) = false) Then
				Me.Onskipjack1_4To1_79Changing(value)
				Me.SendPropertyChanging
				Me._skipjack1_4To1_79 = value
				Me.SendPropertyChanged("skipjack1_4To1_79")
				Me.Onskipjack1_4To1_79Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_skipjack1_8To2_49", DbType:="Decimal(10,5)")>  _
	Public Property skipjack1_8To2_49() As System.Nullable(Of Decimal)
		Get
			Return Me._skipjack1_8To2_49
		End Get
		Set
			If (Me._skipjack1_8To2_49.Equals(value) = false) Then
				Me.Onskipjack1_8To2_49Changing(value)
				Me.SendPropertyChanging
				Me._skipjack1_8To2_49 = value
				Me.SendPropertyChanged("skipjack1_8To2_49")
				Me.Onskipjack1_8To2_49Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_skipjack2_5To3_49", DbType:="Decimal(10,5)")>  _
	Public Property skipjack2_5To3_49() As System.Nullable(Of Decimal)
		Get
			Return Me._skipjack2_5To3_49
		End Get
		Set
			If (Me._skipjack2_5To3_49.Equals(value) = false) Then
				Me.Onskipjack2_5To3_49Changing(value)
				Me.SendPropertyChanging
				Me._skipjack2_5To3_49 = value
				Me.SendPropertyChanged("skipjack2_5To3_49")
				Me.Onskipjack2_5To3_49Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_skipjack3_5AndUP", DbType:="Decimal(10,5)")>  _
	Public Property skipjack3_5AndUP() As System.Nullable(Of Decimal)
		Get
			Return Me._skipjack3_5AndUP
		End Get
		Set
			If (Me._skipjack3_5AndUP.Equals(value) = false) Then
				Me.Onskipjack3_5AndUPChanging(value)
				Me.SendPropertyChanging
				Me._skipjack3_5AndUP = value
				Me.SendPropertyChanged("skipjack3_5AndUP")
				Me.Onskipjack3_5AndUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yelllowfin0_300To0_499", DbType:="Decimal(10,5)")>  _
	Public Property yelllowfin0_300To0_499() As System.Nullable(Of Decimal)
		Get
			Return Me._yelllowfin0_300To0_499
		End Get
		Set
			If (Me._yelllowfin0_300To0_499.Equals(value) = false) Then
				Me.Onyelllowfin0_300To0_499Changing(value)
				Me.SendPropertyChanging
				Me._yelllowfin0_300To0_499 = value
				Me.SendPropertyChanged("yelllowfin0_300To0_499")
				Me.Onyelllowfin0_300To0_499Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin0_500To0_999", DbType:="Decimal(10,5)")>  _
	Public Property yellowfin0_500To0_999() As System.Nullable(Of Decimal)
		Get
			Return Me._yellowfin0_500To0_999
		End Get
		Set
			If (Me._yellowfin0_500To0_999.Equals(value) = false) Then
				Me.Onyellowfin0_500To0_999Changing(value)
				Me.SendPropertyChanging
				Me._yellowfin0_500To0_999 = value
				Me.SendPropertyChanged("yellowfin0_500To0_999")
				Me.Onyellowfin0_500To0_999Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin1_0To1_49", DbType:="Decimal(10,5)")>  _
	Public Property yellowfin1_0To1_49() As System.Nullable(Of Decimal)
		Get
			Return Me._yellowfin1_0To1_49
		End Get
		Set
			If (Me._yellowfin1_0To1_49.Equals(value) = false) Then
				Me.Onyellowfin1_0To1_49Changing(value)
				Me.SendPropertyChanging
				Me._yellowfin1_0To1_49 = value
				Me.SendPropertyChanged("yellowfin1_0To1_49")
				Me.Onyellowfin1_0To1_49Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin1_5To2_49", DbType:="Decimal(10,5)")>  _
	Public Property yellowfin1_5To2_49() As System.Nullable(Of Decimal)
		Get
			Return Me._yellowfin1_5To2_49
		End Get
		Set
			If (Me._yellowfin1_5To2_49.Equals(value) = false) Then
				Me.Onyellowfin1_5To2_49Changing(value)
				Me.SendPropertyChanging
				Me._yellowfin1_5To2_49 = value
				Me.SendPropertyChanged("yellowfin1_5To2_49")
				Me.Onyellowfin1_5To2_49Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin2_5To3_49", DbType:="Decimal(10,5)")>  _
	Public Property yellowfin2_5To3_49() As System.Nullable(Of Decimal)
		Get
			Return Me._yellowfin2_5To3_49
		End Get
		Set
			If (Me._yellowfin2_5To3_49.Equals(value) = false) Then
				Me.Onyellowfin2_5To3_49Changing(value)
				Me.SendPropertyChanging
				Me._yellowfin2_5To3_49 = value
				Me.SendPropertyChanged("yellowfin2_5To3_49")
				Me.Onyellowfin2_5To3_49Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin3_5To4_99", DbType:="Decimal(10,5)")>  _
	Public Property yellowfin3_5To4_99() As System.Nullable(Of Decimal)
		Get
			Return Me._yellowfin3_5To4_99
		End Get
		Set
			If (Me._yellowfin3_5To4_99.Equals(value) = false) Then
				Me.Onyellowfin3_5To4_99Changing(value)
				Me.SendPropertyChanging
				Me._yellowfin3_5To4_99 = value
				Me.SendPropertyChanged("yellowfin3_5To4_99")
				Me.Onyellowfin3_5To4_99Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin5_0To9_99", DbType:="Decimal(10,5)")>  _
	Public Property yellowfin5_0To9_99() As System.Nullable(Of Decimal)
		Get
			Return Me._yellowfin5_0To9_99
		End Get
		Set
			If (Me._yellowfin5_0To9_99.Equals(value) = false) Then
				Me.Onyellowfin5_0To9_99Changing(value)
				Me.SendPropertyChanging
				Me._yellowfin5_0To9_99 = value
				Me.SendPropertyChanged("yellowfin5_0To9_99")
				Me.Onyellowfin5_0To9_99Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin10AndUP", DbType:="Decimal(10,5)")>  _
	Public Property yellowfin10AndUP() As System.Nullable(Of Decimal)
		Get
			Return Me._yellowfin10AndUP
		End Get
		Set
			If (Me._yellowfin10AndUP.Equals(value) = false) Then
				Me.Onyellowfin10AndUPChanging(value)
				Me.SendPropertyChanging
				Me._yellowfin10AndUP = value
				Me.SendPropertyChanged("yellowfin10AndUP")
				Me.Onyellowfin10AndUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bigeye0_300To0_499", DbType:="Decimal(10,5)")>  _
	Public Property bigeye0_300To0_499() As System.Nullable(Of Decimal)
		Get
			Return Me._bigeye0_300To0_499
		End Get
		Set
			If (Me._bigeye0_300To0_499.Equals(value) = false) Then
				Me.Onbigeye0_300To0_499Changing(value)
				Me.SendPropertyChanging
				Me._bigeye0_300To0_499 = value
				Me.SendPropertyChanged("bigeye0_300To0_499")
				Me.Onbigeye0_300To0_499Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bigeye0_500To0_999", DbType:="Decimal(10,5)")>  _
	Public Property bigeye0_500To0_999() As System.Nullable(Of Decimal)
		Get
			Return Me._bigeye0_500To0_999
		End Get
		Set
			If (Me._bigeye0_500To0_999.Equals(value) = false) Then
				Me.Onbigeye0_500To0_999Changing(value)
				Me.SendPropertyChanging
				Me._bigeye0_500To0_999 = value
				Me.SendPropertyChanged("bigeye0_500To0_999")
				Me.Onbigeye0_500To0_999Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bigeye1_0To1_49", DbType:="Decimal(10,5)")>  _
	Public Property bigeye1_0To1_49() As System.Nullable(Of Decimal)
		Get
			Return Me._bigeye1_0To1_49
		End Get
		Set
			If (Me._bigeye1_0To1_49.Equals(value) = false) Then
				Me.Onbigeye1_0To1_49Changing(value)
				Me.SendPropertyChanging
				Me._bigeye1_0To1_49 = value
				Me.SendPropertyChanged("bigeye1_0To1_49")
				Me.Onbigeye1_0To1_49Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bigeye1_5To2_49", DbType:="Decimal(10,5)")>  _
	Public Property bigeye1_5To2_49() As System.Nullable(Of Decimal)
		Get
			Return Me._bigeye1_5To2_49
		End Get
		Set
			If (Me._bigeye1_5To2_49.Equals(value) = false) Then
				Me.Onbigeye1_5To2_49Changing(value)
				Me.SendPropertyChanging
				Me._bigeye1_5To2_49 = value
				Me.SendPropertyChanged("bigeye1_5To2_49")
				Me.Onbigeye1_5To2_49Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bigeye2_5To3_49", DbType:="Decimal(10,5)")>  _
	Public Property bigeye2_5To3_49() As System.Nullable(Of Decimal)
		Get
			Return Me._bigeye2_5To3_49
		End Get
		Set
			If (Me._bigeye2_5To3_49.Equals(value) = false) Then
				Me.Onbigeye2_5To3_49Changing(value)
				Me.SendPropertyChanging
				Me._bigeye2_5To3_49 = value
				Me.SendPropertyChanged("bigeye2_5To3_49")
				Me.Onbigeye2_5To3_49Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bigeye3_5To4_99", DbType:="Decimal(10,5)")>  _
	Public Property bigeye3_5To4_99() As System.Nullable(Of Decimal)
		Get
			Return Me._bigeye3_5To4_99
		End Get
		Set
			If (Me._bigeye3_5To4_99.Equals(value) = false) Then
				Me.Onbigeye3_5To4_99Changing(value)
				Me.SendPropertyChanging
				Me._bigeye3_5To4_99 = value
				Me.SendPropertyChanged("bigeye3_5To4_99")
				Me.Onbigeye3_5To4_99Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bigeye5_0To9_99", DbType:="Decimal(10,5)")>  _
	Public Property bigeye5_0To9_99() As System.Nullable(Of Decimal)
		Get
			Return Me._bigeye5_0To9_99
		End Get
		Set
			If (Me._bigeye5_0To9_99.Equals(value) = false) Then
				Me.Onbigeye5_0To9_99Changing(value)
				Me.SendPropertyChanging
				Me._bigeye5_0To9_99 = value
				Me.SendPropertyChanged("bigeye5_0To9_99")
				Me.Onbigeye5_0To9_99Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bigeye10AndUP", DbType:="Decimal(10,5)")>  _
	Public Property bigeye10AndUP() As System.Nullable(Of Decimal)
		Get
			Return Me._bigeye10AndUP
		End Get
		Set
			If (Me._bigeye10AndUP.Equals(value) = false) Then
				Me.Onbigeye10AndUPChanging(value)
				Me.SendPropertyChanging
				Me._bigeye10AndUP = value
				Me.SendPropertyChanged("bigeye10AndUP")
				Me.Onbigeye10AndUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bonito0_300To0_499", DbType:="Decimal(10,5)")>  _
	Public Property bonito0_300To0_499() As System.Nullable(Of Decimal)
		Get
			Return Me._bonito0_300To0_499
		End Get
		Set
			If (Me._bonito0_300To0_499.Equals(value) = false) Then
				Me.Onbonito0_300To0_499Changing(value)
				Me.SendPropertyChanging
				Me._bonito0_300To0_499 = value
				Me.SendPropertyChanged("bonito0_300To0_499")
				Me.Onbonito0_300To0_499Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bonito0_500AndUP", DbType:="Decimal(10,5)")>  _
	Public Property bonito0_500AndUP() As System.Nullable(Of Decimal)
		Get
			Return Me._bonito0_500AndUP
		End Get
		Set
			If (Me._bonito0_500AndUP.Equals(value) = false) Then
				Me.Onbonito0_500AndUPChanging(value)
				Me.SendPropertyChanging
				Me._bonito0_500AndUP = value
				Me.SendPropertyChanged("bonito0_500AndUP")
				Me.Onbonito0_500AndUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fishmeal", DbType:="Decimal(10,5)")>  _
	Public Property fishmeal() As System.Nullable(Of Decimal)
		Get
			Return Me._fishmeal
		End Get
		Set
			If (Me._fishmeal.Equals(value) = false) Then
				Me.OnfishmealChanging(value)
				Me.SendPropertyChanging
				Me._fishmeal = value
				Me.SendPropertyChanged("fishmeal")
				Me.OnfishmealChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.trans_CatchActivityDetails")>  _
Partial Public Class trans_CatchActivityDetail
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _catchActivityDetail_ID As Integer
	
	Private _catchActivity_ID As Integer
	
	Private _vessel_ID As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OncatchActivityDetail_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OncatchActivityDetail_IDChanged()
    End Sub
    Partial Private Sub OncatchActivity_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OncatchActivity_IDChanged()
    End Sub
    Partial Private Sub Onvessel_IDChanging(value As Integer)
    End Sub
    Partial Private Sub Onvessel_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_catchActivityDetail_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property catchActivityDetail_ID() As Integer
		Get
			Return Me._catchActivityDetail_ID
		End Get
		Set
			If ((Me._catchActivityDetail_ID = value)  _
						= false) Then
				Me.OncatchActivityDetail_IDChanging(value)
				Me.SendPropertyChanging
				Me._catchActivityDetail_ID = value
				Me.SendPropertyChanged("catchActivityDetail_ID")
				Me.OncatchActivityDetail_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_catchActivity_ID", DbType:="Int NOT NULL")>  _
	Public Property catchActivity_ID() As Integer
		Get
			Return Me._catchActivity_ID
		End Get
		Set
			If ((Me._catchActivity_ID = value)  _
						= false) Then
				Me.OncatchActivity_IDChanging(value)
				Me.SendPropertyChanging
				Me._catchActivity_ID = value
				Me.SendPropertyChanged("catchActivity_ID")
				Me.OncatchActivity_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_vessel_ID", DbType:="Int NOT NULL")>  _
	Public Property vessel_ID() As Integer
		Get
			Return Me._vessel_ID
		End Get
		Set
			If ((Me._vessel_ID = value)  _
						= false) Then
				Me.Onvessel_IDChanging(value)
				Me.SendPropertyChanging
				Me._vessel_ID = value
				Me.SendPropertyChanged("vessel_ID")
				Me.Onvessel_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.trans_CatchMethod")>  _
Partial Public Class trans_CatchMethod
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _catchMethod_ID As Integer
	
	Private _catchMethod As String
	
	Private _active As System.Nullable(Of Boolean)
	
	Private _modifiedDate As System.Nullable(Of Date)
	
	Private _modifiedBy As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OncatchMethod_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OncatchMethod_IDChanged()
    End Sub
    Partial Private Sub OncatchMethodChanging(value As String)
    End Sub
    Partial Private Sub OncatchMethodChanged()
    End Sub
    Partial Private Sub OnactiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnactiveChanged()
    End Sub
    Partial Private Sub OnmodifiedDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnmodifiedDateChanged()
    End Sub
    Partial Private Sub OnmodifiedByChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnmodifiedByChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_catchMethod_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property catchMethod_ID() As Integer
		Get
			Return Me._catchMethod_ID
		End Get
		Set
			If ((Me._catchMethod_ID = value)  _
						= false) Then
				Me.OncatchMethod_IDChanging(value)
				Me.SendPropertyChanging
				Me._catchMethod_ID = value
				Me.SendPropertyChanged("catchMethod_ID")
				Me.OncatchMethod_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_catchMethod", DbType:="VarChar(255) NOT NULL", CanBeNull:=false)>  _
	Public Property catchMethod() As String
		Get
			Return Me._catchMethod
		End Get
		Set
			If (String.Equals(Me._catchMethod, value) = false) Then
				Me.OncatchMethodChanging(value)
				Me.SendPropertyChanging
				Me._catchMethod = value
				Me.SendPropertyChanged("catchMethod")
				Me.OncatchMethodChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_active", DbType:="Bit")>  _
	Public Property active() As System.Nullable(Of Boolean)
		Get
			Return Me._active
		End Get
		Set
			If (Me._active.Equals(value) = false) Then
				Me.OnactiveChanging(value)
				Me.SendPropertyChanging
				Me._active = value
				Me.SendPropertyChanged("active")
				Me.OnactiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modifiedDate", DbType:="DateTime")>  _
	Public Property modifiedDate() As System.Nullable(Of Date)
		Get
			Return Me._modifiedDate
		End Get
		Set
			If (Me._modifiedDate.Equals(value) = false) Then
				Me.OnmodifiedDateChanging(value)
				Me.SendPropertyChanging
				Me._modifiedDate = value
				Me.SendPropertyChanged("modifiedDate")
				Me.OnmodifiedDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modifiedBy", DbType:="DateTime")>  _
	Public Property modifiedBy() As System.Nullable(Of Date)
		Get
			Return Me._modifiedBy
		End Get
		Set
			If (Me._modifiedBy.Equals(value) = false) Then
				Me.OnmodifiedByChanging(value)
				Me.SendPropertyChanging
				Me._modifiedBy = value
				Me.SendPropertyChanged("modifiedBy")
				Me.OnmodifiedByChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.trans_SalesBuyerCatch")>  _
Partial Public Class trans_SalesBuyerCatch
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _salesBuyerCatchID As Integer
	
	Private _salesInvoiceBuyerID As Integer
	
	Private _salesInvoiceID As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnsalesBuyerCatchIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnsalesBuyerCatchIDChanged()
    End Sub
    Partial Private Sub OnsalesInvoiceBuyerIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnsalesInvoiceBuyerIDChanged()
    End Sub
    Partial Private Sub OnsalesInvoiceIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnsalesInvoiceIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_salesBuyerCatchID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property salesBuyerCatchID() As Integer
		Get
			Return Me._salesBuyerCatchID
		End Get
		Set
			If ((Me._salesBuyerCatchID = value)  _
						= false) Then
				Me.OnsalesBuyerCatchIDChanging(value)
				Me.SendPropertyChanging
				Me._salesBuyerCatchID = value
				Me.SendPropertyChanged("salesBuyerCatchID")
				Me.OnsalesBuyerCatchIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_salesInvoiceBuyerID", DbType:="Int NOT NULL")>  _
	Public Property salesInvoiceBuyerID() As Integer
		Get
			Return Me._salesInvoiceBuyerID
		End Get
		Set
			If ((Me._salesInvoiceBuyerID = value)  _
						= false) Then
				Me.OnsalesInvoiceBuyerIDChanging(value)
				Me.SendPropertyChanging
				Me._salesInvoiceBuyerID = value
				Me.SendPropertyChanged("salesInvoiceBuyerID")
				Me.OnsalesInvoiceBuyerIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_salesInvoiceID", DbType:="Int NOT NULL")>  _
	Public Property salesInvoiceID() As Integer
		Get
			Return Me._salesInvoiceID
		End Get
		Set
			If ((Me._salesInvoiceID = value)  _
						= false) Then
				Me.OnsalesInvoiceIDChanging(value)
				Me.SendPropertyChanging
				Me._salesInvoiceID = value
				Me.SendPropertyChanged("salesInvoiceID")
				Me.OnsalesInvoiceIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.trans_SalesInvoiceBuyer")>  _
Partial Public Class trans_SalesInvoiceBuyer
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _salesInvoiceBuyerID As Integer
	
	Private _salesInvoiceID As Integer
	
	Private _setNum As String
	
	Private _paidAmount As System.Nullable(Of Decimal)
	
	Private _adjustmentsAmount As System.Nullable(Of Decimal)
	
	Private _referenceNum As String
	
	Private _buyerName As String
	
	Private _sellerType As String
	
	Private _approvalStatus As Integer
	
	Private _encodedOn As Date
	
	Private _encodedBy As String
	
	Private _dateCreated As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnsalesInvoiceBuyerIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnsalesInvoiceBuyerIDChanged()
    End Sub
    Partial Private Sub OnsalesInvoiceIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnsalesInvoiceIDChanged()
    End Sub
    Partial Private Sub OnsetNumChanging(value As String)
    End Sub
    Partial Private Sub OnsetNumChanged()
    End Sub
    Partial Private Sub OnpaidAmountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnpaidAmountChanged()
    End Sub
    Partial Private Sub OnadjustmentsAmountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnadjustmentsAmountChanged()
    End Sub
    Partial Private Sub OnreferenceNumChanging(value As String)
    End Sub
    Partial Private Sub OnreferenceNumChanged()
    End Sub
    Partial Private Sub OnbuyerNameChanging(value As String)
    End Sub
    Partial Private Sub OnbuyerNameChanged()
    End Sub
    Partial Private Sub OnsellerTypeChanging(value As String)
    End Sub
    Partial Private Sub OnsellerTypeChanged()
    End Sub
    Partial Private Sub OnapprovalStatusChanging(value As Integer)
    End Sub
    Partial Private Sub OnapprovalStatusChanged()
    End Sub
    Partial Private Sub OnencodedOnChanging(value As Date)
    End Sub
    Partial Private Sub OnencodedOnChanged()
    End Sub
    Partial Private Sub OnencodedByChanging(value As String)
    End Sub
    Partial Private Sub OnencodedByChanged()
    End Sub
    Partial Private Sub OndateCreatedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndateCreatedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_salesInvoiceBuyerID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property salesInvoiceBuyerID() As Integer
		Get
			Return Me._salesInvoiceBuyerID
		End Get
		Set
			If ((Me._salesInvoiceBuyerID = value)  _
						= false) Then
				Me.OnsalesInvoiceBuyerIDChanging(value)
				Me.SendPropertyChanging
				Me._salesInvoiceBuyerID = value
				Me.SendPropertyChanged("salesInvoiceBuyerID")
				Me.OnsalesInvoiceBuyerIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_salesInvoiceID", DbType:="Int NOT NULL")>  _
	Public Property salesInvoiceID() As Integer
		Get
			Return Me._salesInvoiceID
		End Get
		Set
			If ((Me._salesInvoiceID = value)  _
						= false) Then
				Me.OnsalesInvoiceIDChanging(value)
				Me.SendPropertyChanging
				Me._salesInvoiceID = value
				Me.SendPropertyChanged("salesInvoiceID")
				Me.OnsalesInvoiceIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_setNum", DbType:="VarChar(6)")>  _
	Public Property setNum() As String
		Get
			Return Me._setNum
		End Get
		Set
			If (String.Equals(Me._setNum, value) = false) Then
				Me.OnsetNumChanging(value)
				Me.SendPropertyChanging
				Me._setNum = value
				Me.SendPropertyChanged("setNum")
				Me.OnsetNumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_paidAmount", DbType:="Decimal(18,2)")>  _
	Public Property paidAmount() As System.Nullable(Of Decimal)
		Get
			Return Me._paidAmount
		End Get
		Set
			If (Me._paidAmount.Equals(value) = false) Then
				Me.OnpaidAmountChanging(value)
				Me.SendPropertyChanging
				Me._paidAmount = value
				Me.SendPropertyChanged("paidAmount")
				Me.OnpaidAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_adjustmentsAmount", DbType:="Decimal(18,2)")>  _
	Public Property adjustmentsAmount() As System.Nullable(Of Decimal)
		Get
			Return Me._adjustmentsAmount
		End Get
		Set
			If (Me._adjustmentsAmount.Equals(value) = false) Then
				Me.OnadjustmentsAmountChanging(value)
				Me.SendPropertyChanging
				Me._adjustmentsAmount = value
				Me.SendPropertyChanged("adjustmentsAmount")
				Me.OnadjustmentsAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_referenceNum", DbType:="VarChar(14)")>  _
	Public Property referenceNum() As String
		Get
			Return Me._referenceNum
		End Get
		Set
			If (String.Equals(Me._referenceNum, value) = false) Then
				Me.OnreferenceNumChanging(value)
				Me.SendPropertyChanging
				Me._referenceNum = value
				Me.SendPropertyChanged("referenceNum")
				Me.OnreferenceNumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_buyerName", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property buyerName() As String
		Get
			Return Me._buyerName
		End Get
		Set
			If (String.Equals(Me._buyerName, value) = false) Then
				Me.OnbuyerNameChanging(value)
				Me.SendPropertyChanging
				Me._buyerName = value
				Me.SendPropertyChanged("buyerName")
				Me.OnbuyerNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sellerType", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property sellerType() As String
		Get
			Return Me._sellerType
		End Get
		Set
			If (String.Equals(Me._sellerType, value) = false) Then
				Me.OnsellerTypeChanging(value)
				Me.SendPropertyChanging
				Me._sellerType = value
				Me.SendPropertyChanged("sellerType")
				Me.OnsellerTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_approvalStatus", DbType:="Int NOT NULL")>  _
	Public Property approvalStatus() As Integer
		Get
			Return Me._approvalStatus
		End Get
		Set
			If ((Me._approvalStatus = value)  _
						= false) Then
				Me.OnapprovalStatusChanging(value)
				Me.SendPropertyChanging
				Me._approvalStatus = value
				Me.SendPropertyChanged("approvalStatus")
				Me.OnapprovalStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_encodedOn", DbType:="DateTime NOT NULL")>  _
	Public Property encodedOn() As Date
		Get
			Return Me._encodedOn
		End Get
		Set
			If ((Me._encodedOn = value)  _
						= false) Then
				Me.OnencodedOnChanging(value)
				Me.SendPropertyChanging
				Me._encodedOn = value
				Me.SendPropertyChanged("encodedOn")
				Me.OnencodedOnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_encodedBy", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property encodedBy() As String
		Get
			Return Me._encodedBy
		End Get
		Set
			If (String.Equals(Me._encodedBy, value) = false) Then
				Me.OnencodedByChanging(value)
				Me.SendPropertyChanging
				Me._encodedBy = value
				Me.SendPropertyChanged("encodedBy")
				Me.OnencodedByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dateCreated", DbType:="DateTime", IsDbGenerated:=true)>  _
	Public Property dateCreated() As System.Nullable(Of Date)
		Get
			Return Me._dateCreated
		End Get
		Set
			If (Me._dateCreated.Equals(value) = false) Then
				Me.OndateCreatedChanging(value)
				Me.SendPropertyChanging
				Me._dateCreated = value
				Me.SendPropertyChanged("dateCreated")
				Me.OndateCreatedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.trans_SalesReport")>  _
Partial Public Class trans_SalesReport
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _salesReport_ID As Integer
	
	Private _invoiceNum As String
	
	Private _referenceNum As String
	
	Private _salesDate As Date
	
	Private _salesNum As String
	
	Private _sellingType As String
	
	Private _unloadingType As String
	
	Private _unloadingVessel_ID As String
	
	Private _unloadingForeignVessel As String
	
	Private _buyer As String
	
	Private _catchtDeliveryNum As String
	
	Private _usdRate As Decimal
	
	Private _contractNum As String
	
	Private _remarks As String
	
	Private _encodedBy As Integer
	
	Private _encodedOn As Date
	
	Private _approvalStatus As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnsalesReport_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnsalesReport_IDChanged()
    End Sub
    Partial Private Sub OninvoiceNumChanging(value As String)
    End Sub
    Partial Private Sub OninvoiceNumChanged()
    End Sub
    Partial Private Sub OnreferenceNumChanging(value As String)
    End Sub
    Partial Private Sub OnreferenceNumChanged()
    End Sub
    Partial Private Sub OnsalesDateChanging(value As Date)
    End Sub
    Partial Private Sub OnsalesDateChanged()
    End Sub
    Partial Private Sub OnsalesNumChanging(value As String)
    End Sub
    Partial Private Sub OnsalesNumChanged()
    End Sub
    Partial Private Sub OnsellingTypeChanging(value As String)
    End Sub
    Partial Private Sub OnsellingTypeChanged()
    End Sub
    Partial Private Sub OnunloadingTypeChanging(value As String)
    End Sub
    Partial Private Sub OnunloadingTypeChanged()
    End Sub
    Partial Private Sub OnunloadingVessel_IDChanging(value As String)
    End Sub
    Partial Private Sub OnunloadingVessel_IDChanged()
    End Sub
    Partial Private Sub OnunloadingForeignVesselChanging(value As String)
    End Sub
    Partial Private Sub OnunloadingForeignVesselChanged()
    End Sub
    Partial Private Sub OnbuyerChanging(value As String)
    End Sub
    Partial Private Sub OnbuyerChanged()
    End Sub
    Partial Private Sub OncatchtDeliveryNumChanging(value As String)
    End Sub
    Partial Private Sub OncatchtDeliveryNumChanged()
    End Sub
    Partial Private Sub OnusdRateChanging(value As Decimal)
    End Sub
    Partial Private Sub OnusdRateChanged()
    End Sub
    Partial Private Sub OncontractNumChanging(value As String)
    End Sub
    Partial Private Sub OncontractNumChanged()
    End Sub
    Partial Private Sub OnremarksChanging(value As String)
    End Sub
    Partial Private Sub OnremarksChanged()
    End Sub
    Partial Private Sub OnencodedByChanging(value As Integer)
    End Sub
    Partial Private Sub OnencodedByChanged()
    End Sub
    Partial Private Sub OnencodedOnChanging(value As Date)
    End Sub
    Partial Private Sub OnencodedOnChanged()
    End Sub
    Partial Private Sub OnapprovalStatusChanging(value As Integer)
    End Sub
    Partial Private Sub OnapprovalStatusChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_salesReport_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property salesReport_ID() As Integer
		Get
			Return Me._salesReport_ID
		End Get
		Set
			If ((Me._salesReport_ID = value)  _
						= false) Then
				Me.OnsalesReport_IDChanging(value)
				Me.SendPropertyChanging
				Me._salesReport_ID = value
				Me.SendPropertyChanged("salesReport_ID")
				Me.OnsalesReport_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_invoiceNum", DbType:="VarChar(100)")>  _
	Public Property invoiceNum() As String
		Get
			Return Me._invoiceNum
		End Get
		Set
			If (String.Equals(Me._invoiceNum, value) = false) Then
				Me.OninvoiceNumChanging(value)
				Me.SendPropertyChanging
				Me._invoiceNum = value
				Me.SendPropertyChanged("invoiceNum")
				Me.OninvoiceNumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_referenceNum", DbType:="VarChar(13) NOT NULL", CanBeNull:=false)>  _
	Public Property referenceNum() As String
		Get
			Return Me._referenceNum
		End Get
		Set
			If (String.Equals(Me._referenceNum, value) = false) Then
				Me.OnreferenceNumChanging(value)
				Me.SendPropertyChanging
				Me._referenceNum = value
				Me.SendPropertyChanged("referenceNum")
				Me.OnreferenceNumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_salesDate", DbType:="Date NOT NULL")>  _
	Public Property salesDate() As Date
		Get
			Return Me._salesDate
		End Get
		Set
			If ((Me._salesDate = value)  _
						= false) Then
				Me.OnsalesDateChanging(value)
				Me.SendPropertyChanging
				Me._salesDate = value
				Me.SendPropertyChanged("salesDate")
				Me.OnsalesDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_salesNum", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property salesNum() As String
		Get
			Return Me._salesNum
		End Get
		Set
			If (String.Equals(Me._salesNum, value) = false) Then
				Me.OnsalesNumChanging(value)
				Me.SendPropertyChanging
				Me._salesNum = value
				Me.SendPropertyChanged("salesNum")
				Me.OnsalesNumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sellingType", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property sellingType() As String
		Get
			Return Me._sellingType
		End Get
		Set
			If (String.Equals(Me._sellingType, value) = false) Then
				Me.OnsellingTypeChanging(value)
				Me.SendPropertyChanging
				Me._sellingType = value
				Me.SendPropertyChanged("sellingType")
				Me.OnsellingTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unloadingType", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property unloadingType() As String
		Get
			Return Me._unloadingType
		End Get
		Set
			If (String.Equals(Me._unloadingType, value) = false) Then
				Me.OnunloadingTypeChanging(value)
				Me.SendPropertyChanging
				Me._unloadingType = value
				Me.SendPropertyChanged("unloadingType")
				Me.OnunloadingTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unloadingVessel_ID", DbType:="VarChar(140)")>  _
	Public Property unloadingVessel_ID() As String
		Get
			Return Me._unloadingVessel_ID
		End Get
		Set
			If (String.Equals(Me._unloadingVessel_ID, value) = false) Then
				Me.OnunloadingVessel_IDChanging(value)
				Me.SendPropertyChanging
				Me._unloadingVessel_ID = value
				Me.SendPropertyChanged("unloadingVessel_ID")
				Me.OnunloadingVessel_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unloadingForeignVessel", DbType:="VarChar(140)")>  _
	Public Property unloadingForeignVessel() As String
		Get
			Return Me._unloadingForeignVessel
		End Get
		Set
			If (String.Equals(Me._unloadingForeignVessel, value) = false) Then
				Me.OnunloadingForeignVesselChanging(value)
				Me.SendPropertyChanging
				Me._unloadingForeignVessel = value
				Me.SendPropertyChanged("unloadingForeignVessel")
				Me.OnunloadingForeignVesselChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_buyer", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property buyer() As String
		Get
			Return Me._buyer
		End Get
		Set
			If (String.Equals(Me._buyer, value) = false) Then
				Me.OnbuyerChanging(value)
				Me.SendPropertyChanging
				Me._buyer = value
				Me.SendPropertyChanged("buyer")
				Me.OnbuyerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_catchtDeliveryNum", DbType:="VarChar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property catchtDeliveryNum() As String
		Get
			Return Me._catchtDeliveryNum
		End Get
		Set
			If (String.Equals(Me._catchtDeliveryNum, value) = false) Then
				Me.OncatchtDeliveryNumChanging(value)
				Me.SendPropertyChanging
				Me._catchtDeliveryNum = value
				Me.SendPropertyChanged("catchtDeliveryNum")
				Me.OncatchtDeliveryNumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usdRate", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property usdRate() As Decimal
		Get
			Return Me._usdRate
		End Get
		Set
			If ((Me._usdRate = value)  _
						= false) Then
				Me.OnusdRateChanging(value)
				Me.SendPropertyChanging
				Me._usdRate = value
				Me.SendPropertyChanged("usdRate")
				Me.OnusdRateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_contractNum", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property contractNum() As String
		Get
			Return Me._contractNum
		End Get
		Set
			If (String.Equals(Me._contractNum, value) = false) Then
				Me.OncontractNumChanging(value)
				Me.SendPropertyChanging
				Me._contractNum = value
				Me.SendPropertyChanged("contractNum")
				Me.OncontractNumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_remarks", DbType:="VarChar(300)")>  _
	Public Property remarks() As String
		Get
			Return Me._remarks
		End Get
		Set
			If (String.Equals(Me._remarks, value) = false) Then
				Me.OnremarksChanging(value)
				Me.SendPropertyChanging
				Me._remarks = value
				Me.SendPropertyChanged("remarks")
				Me.OnremarksChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_encodedBy", DbType:="Int NOT NULL")>  _
	Public Property encodedBy() As Integer
		Get
			Return Me._encodedBy
		End Get
		Set
			If ((Me._encodedBy = value)  _
						= false) Then
				Me.OnencodedByChanging(value)
				Me.SendPropertyChanging
				Me._encodedBy = value
				Me.SendPropertyChanged("encodedBy")
				Me.OnencodedByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_encodedOn", DbType:="DateTime NOT NULL")>  _
	Public Property encodedOn() As Date
		Get
			Return Me._encodedOn
		End Get
		Set
			If ((Me._encodedOn = value)  _
						= false) Then
				Me.OnencodedOnChanging(value)
				Me.SendPropertyChanging
				Me._encodedOn = value
				Me.SendPropertyChanged("encodedOn")
				Me.OnencodedOnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_approvalStatus", DbType:="Int NOT NULL")>  _
	Public Property approvalStatus() As Integer
		Get
			Return Me._approvalStatus
		End Get
		Set
			If ((Me._approvalStatus = value)  _
						= false) Then
				Me.OnapprovalStatusChanging(value)
				Me.SendPropertyChanging
				Me._approvalStatus = value
				Me.SendPropertyChanged("approvalStatus")
				Me.OnapprovalStatusChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.trans_SalesReportBuyer")>  _
Partial Public Class trans_SalesReportBuyer
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _salesBuyerCatchID As Integer
	
	Private _salesInvoiceBuyerID As Integer
	
	Private _salesInvoiceID As Integer
	
	Private _skipjack0_300To0_499 As Decimal
	
	Private _skipjack0_500To0_999 As Decimal
	
	Private _skipjack1_0To1_39 As Decimal
	
	Private _skipjack1_4To1_79 As Decimal
	
	Private _skipjack1_8To2_49 As Decimal
	
	Private _skipjack2_5To3_49 As Decimal
	
	Private _skipjack3_5AndUP As Decimal
	
	Private _yellowfin0_300To0_499 As Decimal
	
	Private _yellowfin0_500To0_999 As Decimal
	
	Private _yellowfin1_0To1_49 As Decimal
	
	Private _yellowfin1_5To2_49 As Decimal
	
	Private _yellowfin2_5To3_49 As Decimal
	
	Private _yellowfin3_5To4_99 As Decimal
	
	Private _yellowfin5_0To9_99 As Decimal
	
	Private _yellowfin10AndUpGood As Decimal
	
	Private _yellowfin10AndUpDeformed As Decimal
	
	Private _bigeye0_500To0_999 As Decimal
	
	Private _bigeye1_0To1_49 As Decimal
	
	Private _bigeye1_5To2_49 As Decimal
	
	Private _bigeye2_5To3_49 As Decimal
	
	Private _bigeye3_5To4_99 As Decimal
	
	Private _bigeye5_0To9_99 As Decimal
	
	Private _bigeye10AndUP As Decimal
	
	Private _bonito As Decimal
	
	Private _fishmeal As Decimal
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnsalesBuyerCatchIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnsalesBuyerCatchIDChanged()
    End Sub
    Partial Private Sub OnsalesInvoiceBuyerIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnsalesInvoiceBuyerIDChanged()
    End Sub
    Partial Private Sub OnsalesInvoiceIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnsalesInvoiceIDChanged()
    End Sub
    Partial Private Sub Onskipjack0_300To0_499Changing(value As Decimal)
    End Sub
    Partial Private Sub Onskipjack0_300To0_499Changed()
    End Sub
    Partial Private Sub Onskipjack0_500To0_999Changing(value As Decimal)
    End Sub
    Partial Private Sub Onskipjack0_500To0_999Changed()
    End Sub
    Partial Private Sub Onskipjack1_0To1_39Changing(value As Decimal)
    End Sub
    Partial Private Sub Onskipjack1_0To1_39Changed()
    End Sub
    Partial Private Sub Onskipjack1_4To1_79Changing(value As Decimal)
    End Sub
    Partial Private Sub Onskipjack1_4To1_79Changed()
    End Sub
    Partial Private Sub Onskipjack1_8To2_49Changing(value As Decimal)
    End Sub
    Partial Private Sub Onskipjack1_8To2_49Changed()
    End Sub
    Partial Private Sub Onskipjack2_5To3_49Changing(value As Decimal)
    End Sub
    Partial Private Sub Onskipjack2_5To3_49Changed()
    End Sub
    Partial Private Sub Onskipjack3_5AndUPChanging(value As Decimal)
    End Sub
    Partial Private Sub Onskipjack3_5AndUPChanged()
    End Sub
    Partial Private Sub Onyellowfin0_300To0_499Changing(value As Decimal)
    End Sub
    Partial Private Sub Onyellowfin0_300To0_499Changed()
    End Sub
    Partial Private Sub Onyellowfin0_500To0_999Changing(value As Decimal)
    End Sub
    Partial Private Sub Onyellowfin0_500To0_999Changed()
    End Sub
    Partial Private Sub Onyellowfin1_0To1_49Changing(value As Decimal)
    End Sub
    Partial Private Sub Onyellowfin1_0To1_49Changed()
    End Sub
    Partial Private Sub Onyellowfin1_5To2_49Changing(value As Decimal)
    End Sub
    Partial Private Sub Onyellowfin1_5To2_49Changed()
    End Sub
    Partial Private Sub Onyellowfin2_5To3_49Changing(value As Decimal)
    End Sub
    Partial Private Sub Onyellowfin2_5To3_49Changed()
    End Sub
    Partial Private Sub Onyellowfin3_5To4_99Changing(value As Decimal)
    End Sub
    Partial Private Sub Onyellowfin3_5To4_99Changed()
    End Sub
    Partial Private Sub Onyellowfin5_0To9_99Changing(value As Decimal)
    End Sub
    Partial Private Sub Onyellowfin5_0To9_99Changed()
    End Sub
    Partial Private Sub Onyellowfin10AndUpGoodChanging(value As Decimal)
    End Sub
    Partial Private Sub Onyellowfin10AndUpGoodChanged()
    End Sub
    Partial Private Sub Onyellowfin10AndUpDeformedChanging(value As Decimal)
    End Sub
    Partial Private Sub Onyellowfin10AndUpDeformedChanged()
    End Sub
    Partial Private Sub Onbigeye0_500To0_999Changing(value As Decimal)
    End Sub
    Partial Private Sub Onbigeye0_500To0_999Changed()
    End Sub
    Partial Private Sub Onbigeye1_0To1_49Changing(value As Decimal)
    End Sub
    Partial Private Sub Onbigeye1_0To1_49Changed()
    End Sub
    Partial Private Sub Onbigeye1_5To2_49Changing(value As Decimal)
    End Sub
    Partial Private Sub Onbigeye1_5To2_49Changed()
    End Sub
    Partial Private Sub Onbigeye2_5To3_49Changing(value As Decimal)
    End Sub
    Partial Private Sub Onbigeye2_5To3_49Changed()
    End Sub
    Partial Private Sub Onbigeye3_5To4_99Changing(value As Decimal)
    End Sub
    Partial Private Sub Onbigeye3_5To4_99Changed()
    End Sub
    Partial Private Sub Onbigeye5_0To9_99Changing(value As Decimal)
    End Sub
    Partial Private Sub Onbigeye5_0To9_99Changed()
    End Sub
    Partial Private Sub Onbigeye10AndUPChanging(value As Decimal)
    End Sub
    Partial Private Sub Onbigeye10AndUPChanged()
    End Sub
    Partial Private Sub OnbonitoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnbonitoChanged()
    End Sub
    Partial Private Sub OnfishmealChanging(value As Decimal)
    End Sub
    Partial Private Sub OnfishmealChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_salesBuyerCatchID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property salesBuyerCatchID() As Integer
		Get
			Return Me._salesBuyerCatchID
		End Get
		Set
			If ((Me._salesBuyerCatchID = value)  _
						= false) Then
				Me.OnsalesBuyerCatchIDChanging(value)
				Me.SendPropertyChanging
				Me._salesBuyerCatchID = value
				Me.SendPropertyChanged("salesBuyerCatchID")
				Me.OnsalesBuyerCatchIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_salesInvoiceBuyerID", DbType:="Int NOT NULL")>  _
	Public Property salesInvoiceBuyerID() As Integer
		Get
			Return Me._salesInvoiceBuyerID
		End Get
		Set
			If ((Me._salesInvoiceBuyerID = value)  _
						= false) Then
				Me.OnsalesInvoiceBuyerIDChanging(value)
				Me.SendPropertyChanging
				Me._salesInvoiceBuyerID = value
				Me.SendPropertyChanged("salesInvoiceBuyerID")
				Me.OnsalesInvoiceBuyerIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_salesInvoiceID", DbType:="Int NOT NULL")>  _
	Public Property salesInvoiceID() As Integer
		Get
			Return Me._salesInvoiceID
		End Get
		Set
			If ((Me._salesInvoiceID = value)  _
						= false) Then
				Me.OnsalesInvoiceIDChanging(value)
				Me.SendPropertyChanging
				Me._salesInvoiceID = value
				Me.SendPropertyChanged("salesInvoiceID")
				Me.OnsalesInvoiceIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_skipjack0_300To0_499", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property skipjack0_300To0_499() As Decimal
		Get
			Return Me._skipjack0_300To0_499
		End Get
		Set
			If ((Me._skipjack0_300To0_499 = value)  _
						= false) Then
				Me.Onskipjack0_300To0_499Changing(value)
				Me.SendPropertyChanging
				Me._skipjack0_300To0_499 = value
				Me.SendPropertyChanged("skipjack0_300To0_499")
				Me.Onskipjack0_300To0_499Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_skipjack0_500To0_999", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property skipjack0_500To0_999() As Decimal
		Get
			Return Me._skipjack0_500To0_999
		End Get
		Set
			If ((Me._skipjack0_500To0_999 = value)  _
						= false) Then
				Me.Onskipjack0_500To0_999Changing(value)
				Me.SendPropertyChanging
				Me._skipjack0_500To0_999 = value
				Me.SendPropertyChanged("skipjack0_500To0_999")
				Me.Onskipjack0_500To0_999Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_skipjack1_0To1_39", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property skipjack1_0To1_39() As Decimal
		Get
			Return Me._skipjack1_0To1_39
		End Get
		Set
			If ((Me._skipjack1_0To1_39 = value)  _
						= false) Then
				Me.Onskipjack1_0To1_39Changing(value)
				Me.SendPropertyChanging
				Me._skipjack1_0To1_39 = value
				Me.SendPropertyChanged("skipjack1_0To1_39")
				Me.Onskipjack1_0To1_39Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_skipjack1_4To1_79", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property skipjack1_4To1_79() As Decimal
		Get
			Return Me._skipjack1_4To1_79
		End Get
		Set
			If ((Me._skipjack1_4To1_79 = value)  _
						= false) Then
				Me.Onskipjack1_4To1_79Changing(value)
				Me.SendPropertyChanging
				Me._skipjack1_4To1_79 = value
				Me.SendPropertyChanged("skipjack1_4To1_79")
				Me.Onskipjack1_4To1_79Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_skipjack1_8To2_49", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property skipjack1_8To2_49() As Decimal
		Get
			Return Me._skipjack1_8To2_49
		End Get
		Set
			If ((Me._skipjack1_8To2_49 = value)  _
						= false) Then
				Me.Onskipjack1_8To2_49Changing(value)
				Me.SendPropertyChanging
				Me._skipjack1_8To2_49 = value
				Me.SendPropertyChanged("skipjack1_8To2_49")
				Me.Onskipjack1_8To2_49Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_skipjack2_5To3_49", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property skipjack2_5To3_49() As Decimal
		Get
			Return Me._skipjack2_5To3_49
		End Get
		Set
			If ((Me._skipjack2_5To3_49 = value)  _
						= false) Then
				Me.Onskipjack2_5To3_49Changing(value)
				Me.SendPropertyChanging
				Me._skipjack2_5To3_49 = value
				Me.SendPropertyChanged("skipjack2_5To3_49")
				Me.Onskipjack2_5To3_49Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_skipjack3_5AndUP", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property skipjack3_5AndUP() As Decimal
		Get
			Return Me._skipjack3_5AndUP
		End Get
		Set
			If ((Me._skipjack3_5AndUP = value)  _
						= false) Then
				Me.Onskipjack3_5AndUPChanging(value)
				Me.SendPropertyChanging
				Me._skipjack3_5AndUP = value
				Me.SendPropertyChanged("skipjack3_5AndUP")
				Me.Onskipjack3_5AndUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin0_300To0_499", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property yellowfin0_300To0_499() As Decimal
		Get
			Return Me._yellowfin0_300To0_499
		End Get
		Set
			If ((Me._yellowfin0_300To0_499 = value)  _
						= false) Then
				Me.Onyellowfin0_300To0_499Changing(value)
				Me.SendPropertyChanging
				Me._yellowfin0_300To0_499 = value
				Me.SendPropertyChanged("yellowfin0_300To0_499")
				Me.Onyellowfin0_300To0_499Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin0_500To0_999", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property yellowfin0_500To0_999() As Decimal
		Get
			Return Me._yellowfin0_500To0_999
		End Get
		Set
			If ((Me._yellowfin0_500To0_999 = value)  _
						= false) Then
				Me.Onyellowfin0_500To0_999Changing(value)
				Me.SendPropertyChanging
				Me._yellowfin0_500To0_999 = value
				Me.SendPropertyChanged("yellowfin0_500To0_999")
				Me.Onyellowfin0_500To0_999Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin1_0To1_49", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property yellowfin1_0To1_49() As Decimal
		Get
			Return Me._yellowfin1_0To1_49
		End Get
		Set
			If ((Me._yellowfin1_0To1_49 = value)  _
						= false) Then
				Me.Onyellowfin1_0To1_49Changing(value)
				Me.SendPropertyChanging
				Me._yellowfin1_0To1_49 = value
				Me.SendPropertyChanged("yellowfin1_0To1_49")
				Me.Onyellowfin1_0To1_49Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin1_5To2_49", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property yellowfin1_5To2_49() As Decimal
		Get
			Return Me._yellowfin1_5To2_49
		End Get
		Set
			If ((Me._yellowfin1_5To2_49 = value)  _
						= false) Then
				Me.Onyellowfin1_5To2_49Changing(value)
				Me.SendPropertyChanging
				Me._yellowfin1_5To2_49 = value
				Me.SendPropertyChanged("yellowfin1_5To2_49")
				Me.Onyellowfin1_5To2_49Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin2_5To3_49", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property yellowfin2_5To3_49() As Decimal
		Get
			Return Me._yellowfin2_5To3_49
		End Get
		Set
			If ((Me._yellowfin2_5To3_49 = value)  _
						= false) Then
				Me.Onyellowfin2_5To3_49Changing(value)
				Me.SendPropertyChanging
				Me._yellowfin2_5To3_49 = value
				Me.SendPropertyChanged("yellowfin2_5To3_49")
				Me.Onyellowfin2_5To3_49Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin3_5To4_99", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property yellowfin3_5To4_99() As Decimal
		Get
			Return Me._yellowfin3_5To4_99
		End Get
		Set
			If ((Me._yellowfin3_5To4_99 = value)  _
						= false) Then
				Me.Onyellowfin3_5To4_99Changing(value)
				Me.SendPropertyChanging
				Me._yellowfin3_5To4_99 = value
				Me.SendPropertyChanged("yellowfin3_5To4_99")
				Me.Onyellowfin3_5To4_99Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin5_0To9_99", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property yellowfin5_0To9_99() As Decimal
		Get
			Return Me._yellowfin5_0To9_99
		End Get
		Set
			If ((Me._yellowfin5_0To9_99 = value)  _
						= false) Then
				Me.Onyellowfin5_0To9_99Changing(value)
				Me.SendPropertyChanging
				Me._yellowfin5_0To9_99 = value
				Me.SendPropertyChanged("yellowfin5_0To9_99")
				Me.Onyellowfin5_0To9_99Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin10AndUpGood", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property yellowfin10AndUpGood() As Decimal
		Get
			Return Me._yellowfin10AndUpGood
		End Get
		Set
			If ((Me._yellowfin10AndUpGood = value)  _
						= false) Then
				Me.Onyellowfin10AndUpGoodChanging(value)
				Me.SendPropertyChanging
				Me._yellowfin10AndUpGood = value
				Me.SendPropertyChanged("yellowfin10AndUpGood")
				Me.Onyellowfin10AndUpGoodChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin10AndUpDeformed", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property yellowfin10AndUpDeformed() As Decimal
		Get
			Return Me._yellowfin10AndUpDeformed
		End Get
		Set
			If ((Me._yellowfin10AndUpDeformed = value)  _
						= false) Then
				Me.Onyellowfin10AndUpDeformedChanging(value)
				Me.SendPropertyChanging
				Me._yellowfin10AndUpDeformed = value
				Me.SendPropertyChanged("yellowfin10AndUpDeformed")
				Me.Onyellowfin10AndUpDeformedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bigeye0_500To0_999", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property bigeye0_500To0_999() As Decimal
		Get
			Return Me._bigeye0_500To0_999
		End Get
		Set
			If ((Me._bigeye0_500To0_999 = value)  _
						= false) Then
				Me.Onbigeye0_500To0_999Changing(value)
				Me.SendPropertyChanging
				Me._bigeye0_500To0_999 = value
				Me.SendPropertyChanged("bigeye0_500To0_999")
				Me.Onbigeye0_500To0_999Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bigeye1_0To1_49", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property bigeye1_0To1_49() As Decimal
		Get
			Return Me._bigeye1_0To1_49
		End Get
		Set
			If ((Me._bigeye1_0To1_49 = value)  _
						= false) Then
				Me.Onbigeye1_0To1_49Changing(value)
				Me.SendPropertyChanging
				Me._bigeye1_0To1_49 = value
				Me.SendPropertyChanged("bigeye1_0To1_49")
				Me.Onbigeye1_0To1_49Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bigeye1_5To2_49", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property bigeye1_5To2_49() As Decimal
		Get
			Return Me._bigeye1_5To2_49
		End Get
		Set
			If ((Me._bigeye1_5To2_49 = value)  _
						= false) Then
				Me.Onbigeye1_5To2_49Changing(value)
				Me.SendPropertyChanging
				Me._bigeye1_5To2_49 = value
				Me.SendPropertyChanged("bigeye1_5To2_49")
				Me.Onbigeye1_5To2_49Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bigeye2_5To3_49", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property bigeye2_5To3_49() As Decimal
		Get
			Return Me._bigeye2_5To3_49
		End Get
		Set
			If ((Me._bigeye2_5To3_49 = value)  _
						= false) Then
				Me.Onbigeye2_5To3_49Changing(value)
				Me.SendPropertyChanging
				Me._bigeye2_5To3_49 = value
				Me.SendPropertyChanged("bigeye2_5To3_49")
				Me.Onbigeye2_5To3_49Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bigeye3_5To4_99", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property bigeye3_5To4_99() As Decimal
		Get
			Return Me._bigeye3_5To4_99
		End Get
		Set
			If ((Me._bigeye3_5To4_99 = value)  _
						= false) Then
				Me.Onbigeye3_5To4_99Changing(value)
				Me.SendPropertyChanging
				Me._bigeye3_5To4_99 = value
				Me.SendPropertyChanged("bigeye3_5To4_99")
				Me.Onbigeye3_5To4_99Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bigeye5_0To9_99", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property bigeye5_0To9_99() As Decimal
		Get
			Return Me._bigeye5_0To9_99
		End Get
		Set
			If ((Me._bigeye5_0To9_99 = value)  _
						= false) Then
				Me.Onbigeye5_0To9_99Changing(value)
				Me.SendPropertyChanging
				Me._bigeye5_0To9_99 = value
				Me.SendPropertyChanged("bigeye5_0To9_99")
				Me.Onbigeye5_0To9_99Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bigeye10AndUP", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property bigeye10AndUP() As Decimal
		Get
			Return Me._bigeye10AndUP
		End Get
		Set
			If ((Me._bigeye10AndUP = value)  _
						= false) Then
				Me.Onbigeye10AndUPChanging(value)
				Me.SendPropertyChanging
				Me._bigeye10AndUP = value
				Me.SendPropertyChanged("bigeye10AndUP")
				Me.Onbigeye10AndUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bonito", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property bonito() As Decimal
		Get
			Return Me._bonito
		End Get
		Set
			If ((Me._bonito = value)  _
						= false) Then
				Me.OnbonitoChanging(value)
				Me.SendPropertyChanging
				Me._bonito = value
				Me.SendPropertyChanged("bonito")
				Me.OnbonitoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fishmeal", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property fishmeal() As Decimal
		Get
			Return Me._fishmeal
		End Get
		Set
			If ((Me._fishmeal = value)  _
						= false) Then
				Me.OnfishmealChanging(value)
				Me.SendPropertyChanging
				Me._fishmeal = value
				Me.SendPropertyChanged("fishmeal")
				Me.OnfishmealChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.trans_SalesReportCatcher")>  _
Partial Public Class trans_SalesReportCatcher
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _salesReportCatcher_ID As Integer
	
	Private _salesReport_ID As Integer
	
	Private _catchActivityDetail_ID As Integer
	
	Private _skipjack0_300To0_499 As Decimal
	
	Private _skipjack0_500To0_999 As Decimal
	
	Private _skipjack1_0To1_39 As Decimal
	
	Private _skipjack1_4To1_79 As Decimal
	
	Private _skipjack1_8To2_49 As Decimal
	
	Private _skipjack2_5To3_49 As Decimal
	
	Private _skipjack3_5AndUP As Decimal
	
	Private _yellowfin0_300To0_499 As Decimal
	
	Private _yellowfin0_500To0_999 As Decimal
	
	Private _yellowfin1_0To1_49 As Decimal
	
	Private _yellowfin1_5To2_49 As Decimal
	
	Private _yellowfin2_5To3_49 As Decimal
	
	Private _yellowfin3_5To4_99 As Decimal
	
	Private _yellowfin5_0To9_99 As Decimal
	
	Private _yellowfin10AndUpGood As Decimal
	
	Private _yellowfin10AndUpDeformed As Decimal
	
	Private _bigeye0_500To0_999 As Decimal
	
	Private _bigeye1_0To1_49 As Decimal
	
	Private _bigeye1_5To2_49 As Decimal
	
	Private _bigeye2_5To3_49 As Decimal
	
	Private _bigeye3_5To4_99 As Decimal
	
	Private _bigeye5_0To9_99 As Decimal
	
	Private _bigeye10AndUP As Decimal
	
	Private _bonito As Decimal
	
	Private _fishmeal As Decimal
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnsalesReportCatcher_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnsalesReportCatcher_IDChanged()
    End Sub
    Partial Private Sub OnsalesReport_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnsalesReport_IDChanged()
    End Sub
    Partial Private Sub OncatchActivityDetail_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OncatchActivityDetail_IDChanged()
    End Sub
    Partial Private Sub Onskipjack0_300To0_499Changing(value As Decimal)
    End Sub
    Partial Private Sub Onskipjack0_300To0_499Changed()
    End Sub
    Partial Private Sub Onskipjack0_500To0_999Changing(value As Decimal)
    End Sub
    Partial Private Sub Onskipjack0_500To0_999Changed()
    End Sub
    Partial Private Sub Onskipjack1_0To1_39Changing(value As Decimal)
    End Sub
    Partial Private Sub Onskipjack1_0To1_39Changed()
    End Sub
    Partial Private Sub Onskipjack1_4To1_79Changing(value As Decimal)
    End Sub
    Partial Private Sub Onskipjack1_4To1_79Changed()
    End Sub
    Partial Private Sub Onskipjack1_8To2_49Changing(value As Decimal)
    End Sub
    Partial Private Sub Onskipjack1_8To2_49Changed()
    End Sub
    Partial Private Sub Onskipjack2_5To3_49Changing(value As Decimal)
    End Sub
    Partial Private Sub Onskipjack2_5To3_49Changed()
    End Sub
    Partial Private Sub Onskipjack3_5AndUPChanging(value As Decimal)
    End Sub
    Partial Private Sub Onskipjack3_5AndUPChanged()
    End Sub
    Partial Private Sub Onyellowfin0_300To0_499Changing(value As Decimal)
    End Sub
    Partial Private Sub Onyellowfin0_300To0_499Changed()
    End Sub
    Partial Private Sub Onyellowfin0_500To0_999Changing(value As Decimal)
    End Sub
    Partial Private Sub Onyellowfin0_500To0_999Changed()
    End Sub
    Partial Private Sub Onyellowfin1_0To1_49Changing(value As Decimal)
    End Sub
    Partial Private Sub Onyellowfin1_0To1_49Changed()
    End Sub
    Partial Private Sub Onyellowfin1_5To2_49Changing(value As Decimal)
    End Sub
    Partial Private Sub Onyellowfin1_5To2_49Changed()
    End Sub
    Partial Private Sub Onyellowfin2_5To3_49Changing(value As Decimal)
    End Sub
    Partial Private Sub Onyellowfin2_5To3_49Changed()
    End Sub
    Partial Private Sub Onyellowfin3_5To4_99Changing(value As Decimal)
    End Sub
    Partial Private Sub Onyellowfin3_5To4_99Changed()
    End Sub
    Partial Private Sub Onyellowfin5_0To9_99Changing(value As Decimal)
    End Sub
    Partial Private Sub Onyellowfin5_0To9_99Changed()
    End Sub
    Partial Private Sub Onyellowfin10AndUpGoodChanging(value As Decimal)
    End Sub
    Partial Private Sub Onyellowfin10AndUpGoodChanged()
    End Sub
    Partial Private Sub Onyellowfin10AndUpDeformedChanging(value As Decimal)
    End Sub
    Partial Private Sub Onyellowfin10AndUpDeformedChanged()
    End Sub
    Partial Private Sub Onbigeye0_500To0_999Changing(value As Decimal)
    End Sub
    Partial Private Sub Onbigeye0_500To0_999Changed()
    End Sub
    Partial Private Sub Onbigeye1_0To1_49Changing(value As Decimal)
    End Sub
    Partial Private Sub Onbigeye1_0To1_49Changed()
    End Sub
    Partial Private Sub Onbigeye1_5To2_49Changing(value As Decimal)
    End Sub
    Partial Private Sub Onbigeye1_5To2_49Changed()
    End Sub
    Partial Private Sub Onbigeye2_5To3_49Changing(value As Decimal)
    End Sub
    Partial Private Sub Onbigeye2_5To3_49Changed()
    End Sub
    Partial Private Sub Onbigeye3_5To4_99Changing(value As Decimal)
    End Sub
    Partial Private Sub Onbigeye3_5To4_99Changed()
    End Sub
    Partial Private Sub Onbigeye5_0To9_99Changing(value As Decimal)
    End Sub
    Partial Private Sub Onbigeye5_0To9_99Changed()
    End Sub
    Partial Private Sub Onbigeye10AndUPChanging(value As Decimal)
    End Sub
    Partial Private Sub Onbigeye10AndUPChanged()
    End Sub
    Partial Private Sub OnbonitoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnbonitoChanged()
    End Sub
    Partial Private Sub OnfishmealChanging(value As Decimal)
    End Sub
    Partial Private Sub OnfishmealChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_salesReportCatcher_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property salesReportCatcher_ID() As Integer
		Get
			Return Me._salesReportCatcher_ID
		End Get
		Set
			If ((Me._salesReportCatcher_ID = value)  _
						= false) Then
				Me.OnsalesReportCatcher_IDChanging(value)
				Me.SendPropertyChanging
				Me._salesReportCatcher_ID = value
				Me.SendPropertyChanged("salesReportCatcher_ID")
				Me.OnsalesReportCatcher_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_salesReport_ID", DbType:="Int NOT NULL")>  _
	Public Property salesReport_ID() As Integer
		Get
			Return Me._salesReport_ID
		End Get
		Set
			If ((Me._salesReport_ID = value)  _
						= false) Then
				Me.OnsalesReport_IDChanging(value)
				Me.SendPropertyChanging
				Me._salesReport_ID = value
				Me.SendPropertyChanged("salesReport_ID")
				Me.OnsalesReport_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_catchActivityDetail_ID", DbType:="Int NOT NULL")>  _
	Public Property catchActivityDetail_ID() As Integer
		Get
			Return Me._catchActivityDetail_ID
		End Get
		Set
			If ((Me._catchActivityDetail_ID = value)  _
						= false) Then
				Me.OncatchActivityDetail_IDChanging(value)
				Me.SendPropertyChanging
				Me._catchActivityDetail_ID = value
				Me.SendPropertyChanged("catchActivityDetail_ID")
				Me.OncatchActivityDetail_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_skipjack0_300To0_499", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property skipjack0_300To0_499() As Decimal
		Get
			Return Me._skipjack0_300To0_499
		End Get
		Set
			If ((Me._skipjack0_300To0_499 = value)  _
						= false) Then
				Me.Onskipjack0_300To0_499Changing(value)
				Me.SendPropertyChanging
				Me._skipjack0_300To0_499 = value
				Me.SendPropertyChanged("skipjack0_300To0_499")
				Me.Onskipjack0_300To0_499Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_skipjack0_500To0_999", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property skipjack0_500To0_999() As Decimal
		Get
			Return Me._skipjack0_500To0_999
		End Get
		Set
			If ((Me._skipjack0_500To0_999 = value)  _
						= false) Then
				Me.Onskipjack0_500To0_999Changing(value)
				Me.SendPropertyChanging
				Me._skipjack0_500To0_999 = value
				Me.SendPropertyChanged("skipjack0_500To0_999")
				Me.Onskipjack0_500To0_999Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_skipjack1_0To1_39", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property skipjack1_0To1_39() As Decimal
		Get
			Return Me._skipjack1_0To1_39
		End Get
		Set
			If ((Me._skipjack1_0To1_39 = value)  _
						= false) Then
				Me.Onskipjack1_0To1_39Changing(value)
				Me.SendPropertyChanging
				Me._skipjack1_0To1_39 = value
				Me.SendPropertyChanged("skipjack1_0To1_39")
				Me.Onskipjack1_0To1_39Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_skipjack1_4To1_79", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property skipjack1_4To1_79() As Decimal
		Get
			Return Me._skipjack1_4To1_79
		End Get
		Set
			If ((Me._skipjack1_4To1_79 = value)  _
						= false) Then
				Me.Onskipjack1_4To1_79Changing(value)
				Me.SendPropertyChanging
				Me._skipjack1_4To1_79 = value
				Me.SendPropertyChanged("skipjack1_4To1_79")
				Me.Onskipjack1_4To1_79Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_skipjack1_8To2_49", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property skipjack1_8To2_49() As Decimal
		Get
			Return Me._skipjack1_8To2_49
		End Get
		Set
			If ((Me._skipjack1_8To2_49 = value)  _
						= false) Then
				Me.Onskipjack1_8To2_49Changing(value)
				Me.SendPropertyChanging
				Me._skipjack1_8To2_49 = value
				Me.SendPropertyChanged("skipjack1_8To2_49")
				Me.Onskipjack1_8To2_49Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_skipjack2_5To3_49", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property skipjack2_5To3_49() As Decimal
		Get
			Return Me._skipjack2_5To3_49
		End Get
		Set
			If ((Me._skipjack2_5To3_49 = value)  _
						= false) Then
				Me.Onskipjack2_5To3_49Changing(value)
				Me.SendPropertyChanging
				Me._skipjack2_5To3_49 = value
				Me.SendPropertyChanged("skipjack2_5To3_49")
				Me.Onskipjack2_5To3_49Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_skipjack3_5AndUP", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property skipjack3_5AndUP() As Decimal
		Get
			Return Me._skipjack3_5AndUP
		End Get
		Set
			If ((Me._skipjack3_5AndUP = value)  _
						= false) Then
				Me.Onskipjack3_5AndUPChanging(value)
				Me.SendPropertyChanging
				Me._skipjack3_5AndUP = value
				Me.SendPropertyChanged("skipjack3_5AndUP")
				Me.Onskipjack3_5AndUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin0_300To0_499", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property yellowfin0_300To0_499() As Decimal
		Get
			Return Me._yellowfin0_300To0_499
		End Get
		Set
			If ((Me._yellowfin0_300To0_499 = value)  _
						= false) Then
				Me.Onyellowfin0_300To0_499Changing(value)
				Me.SendPropertyChanging
				Me._yellowfin0_300To0_499 = value
				Me.SendPropertyChanged("yellowfin0_300To0_499")
				Me.Onyellowfin0_300To0_499Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin0_500To0_999", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property yellowfin0_500To0_999() As Decimal
		Get
			Return Me._yellowfin0_500To0_999
		End Get
		Set
			If ((Me._yellowfin0_500To0_999 = value)  _
						= false) Then
				Me.Onyellowfin0_500To0_999Changing(value)
				Me.SendPropertyChanging
				Me._yellowfin0_500To0_999 = value
				Me.SendPropertyChanged("yellowfin0_500To0_999")
				Me.Onyellowfin0_500To0_999Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin1_0To1_49", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property yellowfin1_0To1_49() As Decimal
		Get
			Return Me._yellowfin1_0To1_49
		End Get
		Set
			If ((Me._yellowfin1_0To1_49 = value)  _
						= false) Then
				Me.Onyellowfin1_0To1_49Changing(value)
				Me.SendPropertyChanging
				Me._yellowfin1_0To1_49 = value
				Me.SendPropertyChanged("yellowfin1_0To1_49")
				Me.Onyellowfin1_0To1_49Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin1_5To2_49", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property yellowfin1_5To2_49() As Decimal
		Get
			Return Me._yellowfin1_5To2_49
		End Get
		Set
			If ((Me._yellowfin1_5To2_49 = value)  _
						= false) Then
				Me.Onyellowfin1_5To2_49Changing(value)
				Me.SendPropertyChanging
				Me._yellowfin1_5To2_49 = value
				Me.SendPropertyChanged("yellowfin1_5To2_49")
				Me.Onyellowfin1_5To2_49Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin2_5To3_49", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property yellowfin2_5To3_49() As Decimal
		Get
			Return Me._yellowfin2_5To3_49
		End Get
		Set
			If ((Me._yellowfin2_5To3_49 = value)  _
						= false) Then
				Me.Onyellowfin2_5To3_49Changing(value)
				Me.SendPropertyChanging
				Me._yellowfin2_5To3_49 = value
				Me.SendPropertyChanged("yellowfin2_5To3_49")
				Me.Onyellowfin2_5To3_49Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin3_5To4_99", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property yellowfin3_5To4_99() As Decimal
		Get
			Return Me._yellowfin3_5To4_99
		End Get
		Set
			If ((Me._yellowfin3_5To4_99 = value)  _
						= false) Then
				Me.Onyellowfin3_5To4_99Changing(value)
				Me.SendPropertyChanging
				Me._yellowfin3_5To4_99 = value
				Me.SendPropertyChanged("yellowfin3_5To4_99")
				Me.Onyellowfin3_5To4_99Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin5_0To9_99", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property yellowfin5_0To9_99() As Decimal
		Get
			Return Me._yellowfin5_0To9_99
		End Get
		Set
			If ((Me._yellowfin5_0To9_99 = value)  _
						= false) Then
				Me.Onyellowfin5_0To9_99Changing(value)
				Me.SendPropertyChanging
				Me._yellowfin5_0To9_99 = value
				Me.SendPropertyChanged("yellowfin5_0To9_99")
				Me.Onyellowfin5_0To9_99Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin10AndUpGood", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property yellowfin10AndUpGood() As Decimal
		Get
			Return Me._yellowfin10AndUpGood
		End Get
		Set
			If ((Me._yellowfin10AndUpGood = value)  _
						= false) Then
				Me.Onyellowfin10AndUpGoodChanging(value)
				Me.SendPropertyChanging
				Me._yellowfin10AndUpGood = value
				Me.SendPropertyChanged("yellowfin10AndUpGood")
				Me.Onyellowfin10AndUpGoodChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin10AndUpDeformed", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property yellowfin10AndUpDeformed() As Decimal
		Get
			Return Me._yellowfin10AndUpDeformed
		End Get
		Set
			If ((Me._yellowfin10AndUpDeformed = value)  _
						= false) Then
				Me.Onyellowfin10AndUpDeformedChanging(value)
				Me.SendPropertyChanging
				Me._yellowfin10AndUpDeformed = value
				Me.SendPropertyChanged("yellowfin10AndUpDeformed")
				Me.Onyellowfin10AndUpDeformedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bigeye0_500To0_999", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property bigeye0_500To0_999() As Decimal
		Get
			Return Me._bigeye0_500To0_999
		End Get
		Set
			If ((Me._bigeye0_500To0_999 = value)  _
						= false) Then
				Me.Onbigeye0_500To0_999Changing(value)
				Me.SendPropertyChanging
				Me._bigeye0_500To0_999 = value
				Me.SendPropertyChanged("bigeye0_500To0_999")
				Me.Onbigeye0_500To0_999Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bigeye1_0To1_49", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property bigeye1_0To1_49() As Decimal
		Get
			Return Me._bigeye1_0To1_49
		End Get
		Set
			If ((Me._bigeye1_0To1_49 = value)  _
						= false) Then
				Me.Onbigeye1_0To1_49Changing(value)
				Me.SendPropertyChanging
				Me._bigeye1_0To1_49 = value
				Me.SendPropertyChanged("bigeye1_0To1_49")
				Me.Onbigeye1_0To1_49Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bigeye1_5To2_49", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property bigeye1_5To2_49() As Decimal
		Get
			Return Me._bigeye1_5To2_49
		End Get
		Set
			If ((Me._bigeye1_5To2_49 = value)  _
						= false) Then
				Me.Onbigeye1_5To2_49Changing(value)
				Me.SendPropertyChanging
				Me._bigeye1_5To2_49 = value
				Me.SendPropertyChanged("bigeye1_5To2_49")
				Me.Onbigeye1_5To2_49Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bigeye2_5To3_49", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property bigeye2_5To3_49() As Decimal
		Get
			Return Me._bigeye2_5To3_49
		End Get
		Set
			If ((Me._bigeye2_5To3_49 = value)  _
						= false) Then
				Me.Onbigeye2_5To3_49Changing(value)
				Me.SendPropertyChanging
				Me._bigeye2_5To3_49 = value
				Me.SendPropertyChanged("bigeye2_5To3_49")
				Me.Onbigeye2_5To3_49Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bigeye3_5To4_99", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property bigeye3_5To4_99() As Decimal
		Get
			Return Me._bigeye3_5To4_99
		End Get
		Set
			If ((Me._bigeye3_5To4_99 = value)  _
						= false) Then
				Me.Onbigeye3_5To4_99Changing(value)
				Me.SendPropertyChanging
				Me._bigeye3_5To4_99 = value
				Me.SendPropertyChanged("bigeye3_5To4_99")
				Me.Onbigeye3_5To4_99Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bigeye5_0To9_99", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property bigeye5_0To9_99() As Decimal
		Get
			Return Me._bigeye5_0To9_99
		End Get
		Set
			If ((Me._bigeye5_0To9_99 = value)  _
						= false) Then
				Me.Onbigeye5_0To9_99Changing(value)
				Me.SendPropertyChanging
				Me._bigeye5_0To9_99 = value
				Me.SendPropertyChanged("bigeye5_0To9_99")
				Me.Onbigeye5_0To9_99Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bigeye10AndUP", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property bigeye10AndUP() As Decimal
		Get
			Return Me._bigeye10AndUP
		End Get
		Set
			If ((Me._bigeye10AndUP = value)  _
						= false) Then
				Me.Onbigeye10AndUPChanging(value)
				Me.SendPropertyChanging
				Me._bigeye10AndUP = value
				Me.SendPropertyChanged("bigeye10AndUP")
				Me.Onbigeye10AndUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bonito", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property bonito() As Decimal
		Get
			Return Me._bonito
		End Get
		Set
			If ((Me._bonito = value)  _
						= false) Then
				Me.OnbonitoChanging(value)
				Me.SendPropertyChanging
				Me._bonito = value
				Me.SendPropertyChanged("bonito")
				Me.OnbonitoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fishmeal", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property fishmeal() As Decimal
		Get
			Return Me._fishmeal
		End Get
		Set
			If ((Me._fishmeal = value)  _
						= false) Then
				Me.OnfishmealChanging(value)
				Me.SendPropertyChanging
				Me._fishmeal = value
				Me.SendPropertyChanged("fishmeal")
				Me.OnfishmealChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.trans_SalesReportPrice")>  _
Partial Public Class trans_SalesReportPrice
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _salesReportPrice_ID As Integer
	
	Private _salesReport_ID As Integer
	
	Private _skipjack0_300To0_499 As Decimal
	
	Private _skipjack0_500To0_999 As Decimal
	
	Private _skipjack1_0To1_39 As Decimal
	
	Private _skipjack1_4To1_79 As Decimal
	
	Private _skipjack1_8To2_49 As Decimal
	
	Private _skipjack2_5To3_49 As Decimal
	
	Private _skipjack3_5AndUP As Decimal
	
	Private _yellowfin0_300To0_499 As Decimal
	
	Private _yellowfin0_500To0_999 As Decimal
	
	Private _yellowfin1_0To1_49 As Decimal
	
	Private _yellowfin1_5To2_49 As Decimal
	
	Private _yellowfin2_5To3_49 As Decimal
	
	Private _yellowfin3_5To4_99 As Decimal
	
	Private _yellowfin5_0To9_99 As Decimal
	
	Private _yellowfin10AndUpGood As Decimal
	
	Private _yellowfin10AndUpDeformed As Decimal
	
	Private _bigeye0_500To0_999 As Decimal
	
	Private _bigeye1_0To1_49 As Decimal
	
	Private _bigeye1_5To2_49 As Decimal
	
	Private _bigeye2_5To3_49 As Decimal
	
	Private _bigeye3_5To4_99 As Decimal
	
	Private _bigeye5_0To9_99 As Decimal
	
	Private _bigeye10AndUP As Decimal
	
	Private _bonito As Decimal
	
	Private _fishmeal As Decimal
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnsalesReportPrice_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnsalesReportPrice_IDChanged()
    End Sub
    Partial Private Sub OnsalesReport_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnsalesReport_IDChanged()
    End Sub
    Partial Private Sub Onskipjack0_300To0_499Changing(value As Decimal)
    End Sub
    Partial Private Sub Onskipjack0_300To0_499Changed()
    End Sub
    Partial Private Sub Onskipjack0_500To0_999Changing(value As Decimal)
    End Sub
    Partial Private Sub Onskipjack0_500To0_999Changed()
    End Sub
    Partial Private Sub Onskipjack1_0To1_39Changing(value As Decimal)
    End Sub
    Partial Private Sub Onskipjack1_0To1_39Changed()
    End Sub
    Partial Private Sub Onskipjack1_4To1_79Changing(value As Decimal)
    End Sub
    Partial Private Sub Onskipjack1_4To1_79Changed()
    End Sub
    Partial Private Sub Onskipjack1_8To2_49Changing(value As Decimal)
    End Sub
    Partial Private Sub Onskipjack1_8To2_49Changed()
    End Sub
    Partial Private Sub Onskipjack2_5To3_49Changing(value As Decimal)
    End Sub
    Partial Private Sub Onskipjack2_5To3_49Changed()
    End Sub
    Partial Private Sub Onskipjack3_5AndUPChanging(value As Decimal)
    End Sub
    Partial Private Sub Onskipjack3_5AndUPChanged()
    End Sub
    Partial Private Sub Onyellowfin0_300To0_499Changing(value As Decimal)
    End Sub
    Partial Private Sub Onyellowfin0_300To0_499Changed()
    End Sub
    Partial Private Sub Onyellowfin0_500To0_999Changing(value As Decimal)
    End Sub
    Partial Private Sub Onyellowfin0_500To0_999Changed()
    End Sub
    Partial Private Sub Onyellowfin1_0To1_49Changing(value As Decimal)
    End Sub
    Partial Private Sub Onyellowfin1_0To1_49Changed()
    End Sub
    Partial Private Sub Onyellowfin1_5To2_49Changing(value As Decimal)
    End Sub
    Partial Private Sub Onyellowfin1_5To2_49Changed()
    End Sub
    Partial Private Sub Onyellowfin2_5To3_49Changing(value As Decimal)
    End Sub
    Partial Private Sub Onyellowfin2_5To3_49Changed()
    End Sub
    Partial Private Sub Onyellowfin3_5To4_99Changing(value As Decimal)
    End Sub
    Partial Private Sub Onyellowfin3_5To4_99Changed()
    End Sub
    Partial Private Sub Onyellowfin5_0To9_99Changing(value As Decimal)
    End Sub
    Partial Private Sub Onyellowfin5_0To9_99Changed()
    End Sub
    Partial Private Sub Onyellowfin10AndUpGoodChanging(value As Decimal)
    End Sub
    Partial Private Sub Onyellowfin10AndUpGoodChanged()
    End Sub
    Partial Private Sub Onyellowfin10AndUpDeformedChanging(value As Decimal)
    End Sub
    Partial Private Sub Onyellowfin10AndUpDeformedChanged()
    End Sub
    Partial Private Sub Onbigeye0_500To0_999Changing(value As Decimal)
    End Sub
    Partial Private Sub Onbigeye0_500To0_999Changed()
    End Sub
    Partial Private Sub Onbigeye1_0To1_49Changing(value As Decimal)
    End Sub
    Partial Private Sub Onbigeye1_0To1_49Changed()
    End Sub
    Partial Private Sub Onbigeye1_5To2_49Changing(value As Decimal)
    End Sub
    Partial Private Sub Onbigeye1_5To2_49Changed()
    End Sub
    Partial Private Sub Onbigeye2_5To3_49Changing(value As Decimal)
    End Sub
    Partial Private Sub Onbigeye2_5To3_49Changed()
    End Sub
    Partial Private Sub Onbigeye3_5To4_99Changing(value As Decimal)
    End Sub
    Partial Private Sub Onbigeye3_5To4_99Changed()
    End Sub
    Partial Private Sub Onbigeye5_0To9_99Changing(value As Decimal)
    End Sub
    Partial Private Sub Onbigeye5_0To9_99Changed()
    End Sub
    Partial Private Sub Onbigeye10AndUPChanging(value As Decimal)
    End Sub
    Partial Private Sub Onbigeye10AndUPChanged()
    End Sub
    Partial Private Sub OnbonitoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnbonitoChanged()
    End Sub
    Partial Private Sub OnfishmealChanging(value As Decimal)
    End Sub
    Partial Private Sub OnfishmealChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_salesReportPrice_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property salesReportPrice_ID() As Integer
		Get
			Return Me._salesReportPrice_ID
		End Get
		Set
			If ((Me._salesReportPrice_ID = value)  _
						= false) Then
				Me.OnsalesReportPrice_IDChanging(value)
				Me.SendPropertyChanging
				Me._salesReportPrice_ID = value
				Me.SendPropertyChanged("salesReportPrice_ID")
				Me.OnsalesReportPrice_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_salesReport_ID", DbType:="Int NOT NULL")>  _
	Public Property salesReport_ID() As Integer
		Get
			Return Me._salesReport_ID
		End Get
		Set
			If ((Me._salesReport_ID = value)  _
						= false) Then
				Me.OnsalesReport_IDChanging(value)
				Me.SendPropertyChanging
				Me._salesReport_ID = value
				Me.SendPropertyChanged("salesReport_ID")
				Me.OnsalesReport_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_skipjack0_300To0_499", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property skipjack0_300To0_499() As Decimal
		Get
			Return Me._skipjack0_300To0_499
		End Get
		Set
			If ((Me._skipjack0_300To0_499 = value)  _
						= false) Then
				Me.Onskipjack0_300To0_499Changing(value)
				Me.SendPropertyChanging
				Me._skipjack0_300To0_499 = value
				Me.SendPropertyChanged("skipjack0_300To0_499")
				Me.Onskipjack0_300To0_499Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_skipjack0_500To0_999", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property skipjack0_500To0_999() As Decimal
		Get
			Return Me._skipjack0_500To0_999
		End Get
		Set
			If ((Me._skipjack0_500To0_999 = value)  _
						= false) Then
				Me.Onskipjack0_500To0_999Changing(value)
				Me.SendPropertyChanging
				Me._skipjack0_500To0_999 = value
				Me.SendPropertyChanged("skipjack0_500To0_999")
				Me.Onskipjack0_500To0_999Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[skipjack1_0To1-39]", Storage:="_skipjack1_0To1_39", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property skipjack1_0To1_39() As Decimal
		Get
			Return Me._skipjack1_0To1_39
		End Get
		Set
			If ((Me._skipjack1_0To1_39 = value)  _
						= false) Then
				Me.Onskipjack1_0To1_39Changing(value)
				Me.SendPropertyChanging
				Me._skipjack1_0To1_39 = value
				Me.SendPropertyChanged("skipjack1_0To1_39")
				Me.Onskipjack1_0To1_39Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_skipjack1_4To1_79", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property skipjack1_4To1_79() As Decimal
		Get
			Return Me._skipjack1_4To1_79
		End Get
		Set
			If ((Me._skipjack1_4To1_79 = value)  _
						= false) Then
				Me.Onskipjack1_4To1_79Changing(value)
				Me.SendPropertyChanging
				Me._skipjack1_4To1_79 = value
				Me.SendPropertyChanged("skipjack1_4To1_79")
				Me.Onskipjack1_4To1_79Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_skipjack1_8To2_49", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property skipjack1_8To2_49() As Decimal
		Get
			Return Me._skipjack1_8To2_49
		End Get
		Set
			If ((Me._skipjack1_8To2_49 = value)  _
						= false) Then
				Me.Onskipjack1_8To2_49Changing(value)
				Me.SendPropertyChanging
				Me._skipjack1_8To2_49 = value
				Me.SendPropertyChanged("skipjack1_8To2_49")
				Me.Onskipjack1_8To2_49Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_skipjack2_5To3_49", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property skipjack2_5To3_49() As Decimal
		Get
			Return Me._skipjack2_5To3_49
		End Get
		Set
			If ((Me._skipjack2_5To3_49 = value)  _
						= false) Then
				Me.Onskipjack2_5To3_49Changing(value)
				Me.SendPropertyChanging
				Me._skipjack2_5To3_49 = value
				Me.SendPropertyChanged("skipjack2_5To3_49")
				Me.Onskipjack2_5To3_49Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_skipjack3_5AndUP", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property skipjack3_5AndUP() As Decimal
		Get
			Return Me._skipjack3_5AndUP
		End Get
		Set
			If ((Me._skipjack3_5AndUP = value)  _
						= false) Then
				Me.Onskipjack3_5AndUPChanging(value)
				Me.SendPropertyChanging
				Me._skipjack3_5AndUP = value
				Me.SendPropertyChanged("skipjack3_5AndUP")
				Me.Onskipjack3_5AndUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin0_300To0_499", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property yellowfin0_300To0_499() As Decimal
		Get
			Return Me._yellowfin0_300To0_499
		End Get
		Set
			If ((Me._yellowfin0_300To0_499 = value)  _
						= false) Then
				Me.Onyellowfin0_300To0_499Changing(value)
				Me.SendPropertyChanging
				Me._yellowfin0_300To0_499 = value
				Me.SendPropertyChanged("yellowfin0_300To0_499")
				Me.Onyellowfin0_300To0_499Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin0_500To0_999", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property yellowfin0_500To0_999() As Decimal
		Get
			Return Me._yellowfin0_500To0_999
		End Get
		Set
			If ((Me._yellowfin0_500To0_999 = value)  _
						= false) Then
				Me.Onyellowfin0_500To0_999Changing(value)
				Me.SendPropertyChanging
				Me._yellowfin0_500To0_999 = value
				Me.SendPropertyChanged("yellowfin0_500To0_999")
				Me.Onyellowfin0_500To0_999Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin1_0To1_49", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property yellowfin1_0To1_49() As Decimal
		Get
			Return Me._yellowfin1_0To1_49
		End Get
		Set
			If ((Me._yellowfin1_0To1_49 = value)  _
						= false) Then
				Me.Onyellowfin1_0To1_49Changing(value)
				Me.SendPropertyChanging
				Me._yellowfin1_0To1_49 = value
				Me.SendPropertyChanged("yellowfin1_0To1_49")
				Me.Onyellowfin1_0To1_49Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin1_5To2_49", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property yellowfin1_5To2_49() As Decimal
		Get
			Return Me._yellowfin1_5To2_49
		End Get
		Set
			If ((Me._yellowfin1_5To2_49 = value)  _
						= false) Then
				Me.Onyellowfin1_5To2_49Changing(value)
				Me.SendPropertyChanging
				Me._yellowfin1_5To2_49 = value
				Me.SendPropertyChanged("yellowfin1_5To2_49")
				Me.Onyellowfin1_5To2_49Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin2_5To3_49", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property yellowfin2_5To3_49() As Decimal
		Get
			Return Me._yellowfin2_5To3_49
		End Get
		Set
			If ((Me._yellowfin2_5To3_49 = value)  _
						= false) Then
				Me.Onyellowfin2_5To3_49Changing(value)
				Me.SendPropertyChanging
				Me._yellowfin2_5To3_49 = value
				Me.SendPropertyChanged("yellowfin2_5To3_49")
				Me.Onyellowfin2_5To3_49Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin3_5To4_99", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property yellowfin3_5To4_99() As Decimal
		Get
			Return Me._yellowfin3_5To4_99
		End Get
		Set
			If ((Me._yellowfin3_5To4_99 = value)  _
						= false) Then
				Me.Onyellowfin3_5To4_99Changing(value)
				Me.SendPropertyChanging
				Me._yellowfin3_5To4_99 = value
				Me.SendPropertyChanged("yellowfin3_5To4_99")
				Me.Onyellowfin3_5To4_99Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin5_0To9_99", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property yellowfin5_0To9_99() As Decimal
		Get
			Return Me._yellowfin5_0To9_99
		End Get
		Set
			If ((Me._yellowfin5_0To9_99 = value)  _
						= false) Then
				Me.Onyellowfin5_0To9_99Changing(value)
				Me.SendPropertyChanging
				Me._yellowfin5_0To9_99 = value
				Me.SendPropertyChanged("yellowfin5_0To9_99")
				Me.Onyellowfin5_0To9_99Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin10AndUpGood", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property yellowfin10AndUpGood() As Decimal
		Get
			Return Me._yellowfin10AndUpGood
		End Get
		Set
			If ((Me._yellowfin10AndUpGood = value)  _
						= false) Then
				Me.Onyellowfin10AndUpGoodChanging(value)
				Me.SendPropertyChanging
				Me._yellowfin10AndUpGood = value
				Me.SendPropertyChanged("yellowfin10AndUpGood")
				Me.Onyellowfin10AndUpGoodChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yellowfin10AndUpDeformed", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property yellowfin10AndUpDeformed() As Decimal
		Get
			Return Me._yellowfin10AndUpDeformed
		End Get
		Set
			If ((Me._yellowfin10AndUpDeformed = value)  _
						= false) Then
				Me.Onyellowfin10AndUpDeformedChanging(value)
				Me.SendPropertyChanging
				Me._yellowfin10AndUpDeformed = value
				Me.SendPropertyChanged("yellowfin10AndUpDeformed")
				Me.Onyellowfin10AndUpDeformedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bigeye0_500To0_999", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property bigeye0_500To0_999() As Decimal
		Get
			Return Me._bigeye0_500To0_999
		End Get
		Set
			If ((Me._bigeye0_500To0_999 = value)  _
						= false) Then
				Me.Onbigeye0_500To0_999Changing(value)
				Me.SendPropertyChanging
				Me._bigeye0_500To0_999 = value
				Me.SendPropertyChanged("bigeye0_500To0_999")
				Me.Onbigeye0_500To0_999Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bigeye1_0To1_49", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property bigeye1_0To1_49() As Decimal
		Get
			Return Me._bigeye1_0To1_49
		End Get
		Set
			If ((Me._bigeye1_0To1_49 = value)  _
						= false) Then
				Me.Onbigeye1_0To1_49Changing(value)
				Me.SendPropertyChanging
				Me._bigeye1_0To1_49 = value
				Me.SendPropertyChanged("bigeye1_0To1_49")
				Me.Onbigeye1_0To1_49Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bigeye1_5To2_49", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property bigeye1_5To2_49() As Decimal
		Get
			Return Me._bigeye1_5To2_49
		End Get
		Set
			If ((Me._bigeye1_5To2_49 = value)  _
						= false) Then
				Me.Onbigeye1_5To2_49Changing(value)
				Me.SendPropertyChanging
				Me._bigeye1_5To2_49 = value
				Me.SendPropertyChanged("bigeye1_5To2_49")
				Me.Onbigeye1_5To2_49Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bigeye2_5To3_49", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property bigeye2_5To3_49() As Decimal
		Get
			Return Me._bigeye2_5To3_49
		End Get
		Set
			If ((Me._bigeye2_5To3_49 = value)  _
						= false) Then
				Me.Onbigeye2_5To3_49Changing(value)
				Me.SendPropertyChanging
				Me._bigeye2_5To3_49 = value
				Me.SendPropertyChanged("bigeye2_5To3_49")
				Me.Onbigeye2_5To3_49Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bigeye3_5To4_99", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property bigeye3_5To4_99() As Decimal
		Get
			Return Me._bigeye3_5To4_99
		End Get
		Set
			If ((Me._bigeye3_5To4_99 = value)  _
						= false) Then
				Me.Onbigeye3_5To4_99Changing(value)
				Me.SendPropertyChanging
				Me._bigeye3_5To4_99 = value
				Me.SendPropertyChanged("bigeye3_5To4_99")
				Me.Onbigeye3_5To4_99Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bigeye5_0To9_99", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property bigeye5_0To9_99() As Decimal
		Get
			Return Me._bigeye5_0To9_99
		End Get
		Set
			If ((Me._bigeye5_0To9_99 = value)  _
						= false) Then
				Me.Onbigeye5_0To9_99Changing(value)
				Me.SendPropertyChanging
				Me._bigeye5_0To9_99 = value
				Me.SendPropertyChanged("bigeye5_0To9_99")
				Me.Onbigeye5_0To9_99Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bigeye10AndUP", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property bigeye10AndUP() As Decimal
		Get
			Return Me._bigeye10AndUP
		End Get
		Set
			If ((Me._bigeye10AndUP = value)  _
						= false) Then
				Me.Onbigeye10AndUPChanging(value)
				Me.SendPropertyChanging
				Me._bigeye10AndUP = value
				Me.SendPropertyChanged("bigeye10AndUP")
				Me.Onbigeye10AndUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bonito", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property bonito() As Decimal
		Get
			Return Me._bonito
		End Get
		Set
			If ((Me._bonito = value)  _
						= false) Then
				Me.OnbonitoChanging(value)
				Me.SendPropertyChanging
				Me._bonito = value
				Me.SendPropertyChanged("bonito")
				Me.OnbonitoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fishmeal", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property fishmeal() As Decimal
		Get
			Return Me._fishmeal
		End Get
		Set
			If ((Me._fishmeal = value)  _
						= false) Then
				Me.OnfishmealChanging(value)
				Me.SendPropertyChanging
				Me._fishmeal = value
				Me.SendPropertyChanged("fishmeal")
				Me.OnfishmealChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.trans_SalesReportSummary")>  _
Partial Public Class trans_SalesReportSummary
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _salesReportSummary_ID As Integer
	
	Private _salesReport_ID As Integer
	
	Private _vessel_ID As Integer
	
	Private _catchersPartialQty As Decimal
	
	Private _catchersPartialUnloadedQty As Decimal
	
	Private _catchersActualUnloadedQty As Decimal
	
	Private _actualQtyInKilos As Decimal
	
	Private _fishmealInKilos As Decimal
	
	Private _spoilageInKilos As Decimal
	
	Private _actualQtyInAmount As Decimal
	
	Private _fishmealInAmount As Decimal
	
	Private _spoilageInAmount As Decimal
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnsalesReportSummary_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnsalesReportSummary_IDChanged()
    End Sub
    Partial Private Sub OnsalesReport_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnsalesReport_IDChanged()
    End Sub
    Partial Private Sub Onvessel_IDChanging(value As Integer)
    End Sub
    Partial Private Sub Onvessel_IDChanged()
    End Sub
    Partial Private Sub OncatchersPartialQtyChanging(value As Decimal)
    End Sub
    Partial Private Sub OncatchersPartialQtyChanged()
    End Sub
    Partial Private Sub OncatchersPartialUnloadedQtyChanging(value As Decimal)
    End Sub
    Partial Private Sub OncatchersPartialUnloadedQtyChanged()
    End Sub
    Partial Private Sub OncatchersActualUnloadedQtyChanging(value As Decimal)
    End Sub
    Partial Private Sub OncatchersActualUnloadedQtyChanged()
    End Sub
    Partial Private Sub OnactualQtyInKilosChanging(value As Decimal)
    End Sub
    Partial Private Sub OnactualQtyInKilosChanged()
    End Sub
    Partial Private Sub OnfishmealInKilosChanging(value As Decimal)
    End Sub
    Partial Private Sub OnfishmealInKilosChanged()
    End Sub
    Partial Private Sub OnspoilageInKilosChanging(value As Decimal)
    End Sub
    Partial Private Sub OnspoilageInKilosChanged()
    End Sub
    Partial Private Sub OnactualQtyInAmountChanging(value As Decimal)
    End Sub
    Partial Private Sub OnactualQtyInAmountChanged()
    End Sub
    Partial Private Sub OnfishmealInAmountChanging(value As Decimal)
    End Sub
    Partial Private Sub OnfishmealInAmountChanged()
    End Sub
    Partial Private Sub OnspoilageInAmountChanging(value As Decimal)
    End Sub
    Partial Private Sub OnspoilageInAmountChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_salesReportSummary_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property salesReportSummary_ID() As Integer
		Get
			Return Me._salesReportSummary_ID
		End Get
		Set
			If ((Me._salesReportSummary_ID = value)  _
						= false) Then
				Me.OnsalesReportSummary_IDChanging(value)
				Me.SendPropertyChanging
				Me._salesReportSummary_ID = value
				Me.SendPropertyChanged("salesReportSummary_ID")
				Me.OnsalesReportSummary_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_salesReport_ID", DbType:="Int NOT NULL")>  _
	Public Property salesReport_ID() As Integer
		Get
			Return Me._salesReport_ID
		End Get
		Set
			If ((Me._salesReport_ID = value)  _
						= false) Then
				Me.OnsalesReport_IDChanging(value)
				Me.SendPropertyChanging
				Me._salesReport_ID = value
				Me.SendPropertyChanged("salesReport_ID")
				Me.OnsalesReport_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_vessel_ID", DbType:="Int NOT NULL")>  _
	Public Property vessel_ID() As Integer
		Get
			Return Me._vessel_ID
		End Get
		Set
			If ((Me._vessel_ID = value)  _
						= false) Then
				Me.Onvessel_IDChanging(value)
				Me.SendPropertyChanging
				Me._vessel_ID = value
				Me.SendPropertyChanged("vessel_ID")
				Me.Onvessel_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_catchersPartialQty", DbType:="Decimal(10,5) NOT NULL")>  _
	Public Property catchersPartialQty() As Decimal
		Get
			Return Me._catchersPartialQty
		End Get
		Set
			If ((Me._catchersPartialQty = value)  _
						= false) Then
				Me.OncatchersPartialQtyChanging(value)
				Me.SendPropertyChanging
				Me._catchersPartialQty = value
				Me.SendPropertyChanged("catchersPartialQty")
				Me.OncatchersPartialQtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_catchersPartialUnloadedQty", DbType:="Decimal(10,5) NOT NULL")>  _
	Public Property catchersPartialUnloadedQty() As Decimal
		Get
			Return Me._catchersPartialUnloadedQty
		End Get
		Set
			If ((Me._catchersPartialUnloadedQty = value)  _
						= false) Then
				Me.OncatchersPartialUnloadedQtyChanging(value)
				Me.SendPropertyChanging
				Me._catchersPartialUnloadedQty = value
				Me.SendPropertyChanged("catchersPartialUnloadedQty")
				Me.OncatchersPartialUnloadedQtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_catchersActualUnloadedQty", DbType:="Decimal(10,5) NOT NULL")>  _
	Public Property catchersActualUnloadedQty() As Decimal
		Get
			Return Me._catchersActualUnloadedQty
		End Get
		Set
			If ((Me._catchersActualUnloadedQty = value)  _
						= false) Then
				Me.OncatchersActualUnloadedQtyChanging(value)
				Me.SendPropertyChanging
				Me._catchersActualUnloadedQty = value
				Me.SendPropertyChanged("catchersActualUnloadedQty")
				Me.OncatchersActualUnloadedQtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_actualQtyInKilos", DbType:="Decimal(10,5) NOT NULL")>  _
	Public Property actualQtyInKilos() As Decimal
		Get
			Return Me._actualQtyInKilos
		End Get
		Set
			If ((Me._actualQtyInKilos = value)  _
						= false) Then
				Me.OnactualQtyInKilosChanging(value)
				Me.SendPropertyChanging
				Me._actualQtyInKilos = value
				Me.SendPropertyChanged("actualQtyInKilos")
				Me.OnactualQtyInKilosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fishmealInKilos", DbType:="Decimal(10,5) NOT NULL")>  _
	Public Property fishmealInKilos() As Decimal
		Get
			Return Me._fishmealInKilos
		End Get
		Set
			If ((Me._fishmealInKilos = value)  _
						= false) Then
				Me.OnfishmealInKilosChanging(value)
				Me.SendPropertyChanging
				Me._fishmealInKilos = value
				Me.SendPropertyChanged("fishmealInKilos")
				Me.OnfishmealInKilosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_spoilageInKilos", DbType:="Decimal(10,5) NOT NULL")>  _
	Public Property spoilageInKilos() As Decimal
		Get
			Return Me._spoilageInKilos
		End Get
		Set
			If ((Me._spoilageInKilos = value)  _
						= false) Then
				Me.OnspoilageInKilosChanging(value)
				Me.SendPropertyChanging
				Me._spoilageInKilos = value
				Me.SendPropertyChanged("spoilageInKilos")
				Me.OnspoilageInKilosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_actualQtyInAmount", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property actualQtyInAmount() As Decimal
		Get
			Return Me._actualQtyInAmount
		End Get
		Set
			If ((Me._actualQtyInAmount = value)  _
						= false) Then
				Me.OnactualQtyInAmountChanging(value)
				Me.SendPropertyChanging
				Me._actualQtyInAmount = value
				Me.SendPropertyChanged("actualQtyInAmount")
				Me.OnactualQtyInAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fishmealInAmount", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property fishmealInAmount() As Decimal
		Get
			Return Me._fishmealInAmount
		End Get
		Set
			If ((Me._fishmealInAmount = value)  _
						= false) Then
				Me.OnfishmealInAmountChanging(value)
				Me.SendPropertyChanging
				Me._fishmealInAmount = value
				Me.SendPropertyChanged("fishmealInAmount")
				Me.OnfishmealInAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_spoilageInAmount", DbType:="Decimal(10,2) NOT NULL")>  _
	Public Property spoilageInAmount() As Decimal
		Get
			Return Me._spoilageInAmount
		End Get
		Set
			If ((Me._spoilageInAmount = value)  _
						= false) Then
				Me.OnspoilageInAmountChanging(value)
				Me.SendPropertyChanging
				Me._spoilageInAmount = value
				Me.SendPropertyChanged("spoilageInAmount")
				Me.OnspoilageInAmountChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.trans_SalesReportWeightSlips")>  _
Partial Public Class trans_SalesReportWeightSlip
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _salesReportWeightSlip_ID As Integer
	
	Private _salesReport_ID As System.Nullable(Of Integer)
	
	Private _weightSlipDetail_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnsalesReportWeightSlip_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnsalesReportWeightSlip_IDChanged()
    End Sub
    Partial Private Sub OnsalesReport_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnsalesReport_IDChanged()
    End Sub
    Partial Private Sub OnweightSlipDetail_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnweightSlipDetail_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_salesReportWeightSlip_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property salesReportWeightSlip_ID() As Integer
		Get
			Return Me._salesReportWeightSlip_ID
		End Get
		Set
			If ((Me._salesReportWeightSlip_ID = value)  _
						= false) Then
				Me.OnsalesReportWeightSlip_IDChanging(value)
				Me.SendPropertyChanging
				Me._salesReportWeightSlip_ID = value
				Me.SendPropertyChanged("salesReportWeightSlip_ID")
				Me.OnsalesReportWeightSlip_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_salesReport_ID", DbType:="Int")>  _
	Public Property salesReport_ID() As System.Nullable(Of Integer)
		Get
			Return Me._salesReport_ID
		End Get
		Set
			If (Me._salesReport_ID.Equals(value) = false) Then
				Me.OnsalesReport_IDChanging(value)
				Me.SendPropertyChanging
				Me._salesReport_ID = value
				Me.SendPropertyChanged("salesReport_ID")
				Me.OnsalesReport_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weightSlipDetail_ID", DbType:="Int")>  _
	Public Property weightSlipDetail_ID() As System.Nullable(Of Integer)
		Get
			Return Me._weightSlipDetail_ID
		End Get
		Set
			If (Me._weightSlipDetail_ID.Equals(value) = false) Then
				Me.OnweightSlipDetail_IDChanging(value)
				Me.SendPropertyChanging
				Me._weightSlipDetail_ID = value
				Me.SendPropertyChanged("weightSlipDetail_ID")
				Me.OnweightSlipDetail_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.trans_SalesUnloaded")>  _
Partial Public Class trans_SalesUnloaded
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CarrierID As Integer
	
	Private _SalesReportID As Integer
	
	Private _CarrierName As String
	
	Private _CarrierType As String
	
	Private _UnloadedValue As Decimal
	
	Private _DateCreated As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCarrierIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCarrierIDChanged()
    End Sub
    Partial Private Sub OnSalesReportIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnSalesReportIDChanged()
    End Sub
    Partial Private Sub OnCarrierNameChanging(value As String)
    End Sub
    Partial Private Sub OnCarrierNameChanged()
    End Sub
    Partial Private Sub OnCarrierTypeChanging(value As String)
    End Sub
    Partial Private Sub OnCarrierTypeChanged()
    End Sub
    Partial Private Sub OnUnloadedValueChanging(value As Decimal)
    End Sub
    Partial Private Sub OnUnloadedValueChanged()
    End Sub
    Partial Private Sub OnDateCreatedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateCreatedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarrierID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CarrierID() As Integer
		Get
			Return Me._CarrierID
		End Get
		Set
			If ((Me._CarrierID = value)  _
						= false) Then
				Me.OnCarrierIDChanging(value)
				Me.SendPropertyChanging
				Me._CarrierID = value
				Me.SendPropertyChanged("CarrierID")
				Me.OnCarrierIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SalesReportID", DbType:="Int NOT NULL")>  _
	Public Property SalesReportID() As Integer
		Get
			Return Me._SalesReportID
		End Get
		Set
			If ((Me._SalesReportID = value)  _
						= false) Then
				Me.OnSalesReportIDChanging(value)
				Me.SendPropertyChanging
				Me._SalesReportID = value
				Me.SendPropertyChanged("SalesReportID")
				Me.OnSalesReportIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarrierName", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property CarrierName() As String
		Get
			Return Me._CarrierName
		End Get
		Set
			If (String.Equals(Me._CarrierName, value) = false) Then
				Me.OnCarrierNameChanging(value)
				Me.SendPropertyChanging
				Me._CarrierName = value
				Me.SendPropertyChanged("CarrierName")
				Me.OnCarrierNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarrierType", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property CarrierType() As String
		Get
			Return Me._CarrierType
		End Get
		Set
			If (String.Equals(Me._CarrierType, value) = false) Then
				Me.OnCarrierTypeChanging(value)
				Me.SendPropertyChanging
				Me._CarrierType = value
				Me.SendPropertyChanged("CarrierType")
				Me.OnCarrierTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnloadedValue", DbType:="Decimal(18,2) NOT NULL")>  _
	Public Property UnloadedValue() As Decimal
		Get
			Return Me._UnloadedValue
		End Get
		Set
			If ((Me._UnloadedValue = value)  _
						= false) Then
				Me.OnUnloadedValueChanging(value)
				Me.SendPropertyChanging
				Me._UnloadedValue = value
				Me.SendPropertyChanged("UnloadedValue")
				Me.OnUnloadedValueChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateCreated", DbType:="DateTime")>  _
	Public Property DateCreated() As System.Nullable(Of Date)
		Get
			Return Me._DateCreated
		End Get
		Set
			If (Me._DateCreated.Equals(value) = false) Then
				Me.OnDateCreatedChanging(value)
				Me.SendPropertyChanging
				Me._DateCreated = value
				Me.SendPropertyChanged("DateCreated")
				Me.OnDateCreatedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.trans_WeightSlip")>  _
Partial Public Class trans_WeightSlip
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _weightSlip_ID As Integer
	
	Private _weightSlipDate As System.Nullable(Of Date)
	
	Private _fishWeightSlipNum As String
	
	Private _sellingType As String
	
	Private _buyer As String
	
	Private _unloadingType As String
	
	Private _unloadingVessel_ID As System.Nullable(Of Integer)
	
	Private _unloadingForeignVessel As String
	
	Private _catcherVessel_ID As System.Nullable(Of Integer)
	
	Private _companyChecker_ID As System.Nullable(Of Integer)
	
	Private _buyersChecker As String
	
	Private _contractNum As String
	
	Private _remarks As String
	
	Private _encodedBy As System.Nullable(Of Integer)
	
	Private _encodedOn As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnweightSlip_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnweightSlip_IDChanged()
    End Sub
    Partial Private Sub OnweightSlipDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnweightSlipDateChanged()
    End Sub
    Partial Private Sub OnfishWeightSlipNumChanging(value As String)
    End Sub
    Partial Private Sub OnfishWeightSlipNumChanged()
    End Sub
    Partial Private Sub OnsellingTypeChanging(value As String)
    End Sub
    Partial Private Sub OnsellingTypeChanged()
    End Sub
    Partial Private Sub OnbuyerChanging(value As String)
    End Sub
    Partial Private Sub OnbuyerChanged()
    End Sub
    Partial Private Sub OnunloadingTypeChanging(value As String)
    End Sub
    Partial Private Sub OnunloadingTypeChanged()
    End Sub
    Partial Private Sub OnunloadingVessel_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnunloadingVessel_IDChanged()
    End Sub
    Partial Private Sub OnunloadingForeignVesselChanging(value As String)
    End Sub
    Partial Private Sub OnunloadingForeignVesselChanged()
    End Sub
    Partial Private Sub OncatcherVessel_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncatcherVessel_IDChanged()
    End Sub
    Partial Private Sub OncompanyChecker_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncompanyChecker_IDChanged()
    End Sub
    Partial Private Sub OnbuyersCheckerChanging(value As String)
    End Sub
    Partial Private Sub OnbuyersCheckerChanged()
    End Sub
    Partial Private Sub OncontractNumChanging(value As String)
    End Sub
    Partial Private Sub OncontractNumChanged()
    End Sub
    Partial Private Sub OnremarksChanging(value As String)
    End Sub
    Partial Private Sub OnremarksChanged()
    End Sub
    Partial Private Sub OnencodedByChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnencodedByChanged()
    End Sub
    Partial Private Sub OnencodedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnencodedOnChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weightSlip_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property weightSlip_ID() As Integer
		Get
			Return Me._weightSlip_ID
		End Get
		Set
			If ((Me._weightSlip_ID = value)  _
						= false) Then
				Me.OnweightSlip_IDChanging(value)
				Me.SendPropertyChanging
				Me._weightSlip_ID = value
				Me.SendPropertyChanged("weightSlip_ID")
				Me.OnweightSlip_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weightSlipDate", DbType:="Date")>  _
	Public Property weightSlipDate() As System.Nullable(Of Date)
		Get
			Return Me._weightSlipDate
		End Get
		Set
			If (Me._weightSlipDate.Equals(value) = false) Then
				Me.OnweightSlipDateChanging(value)
				Me.SendPropertyChanging
				Me._weightSlipDate = value
				Me.SendPropertyChanged("weightSlipDate")
				Me.OnweightSlipDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fishWeightSlipNum", DbType:="VarChar(15)")>  _
	Public Property fishWeightSlipNum() As String
		Get
			Return Me._fishWeightSlipNum
		End Get
		Set
			If (String.Equals(Me._fishWeightSlipNum, value) = false) Then
				Me.OnfishWeightSlipNumChanging(value)
				Me.SendPropertyChanging
				Me._fishWeightSlipNum = value
				Me.SendPropertyChanged("fishWeightSlipNum")
				Me.OnfishWeightSlipNumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sellingType", DbType:="VarChar(20)")>  _
	Public Property sellingType() As String
		Get
			Return Me._sellingType
		End Get
		Set
			If (String.Equals(Me._sellingType, value) = false) Then
				Me.OnsellingTypeChanging(value)
				Me.SendPropertyChanging
				Me._sellingType = value
				Me.SendPropertyChanged("sellingType")
				Me.OnsellingTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_buyer", DbType:="VarChar(100)")>  _
	Public Property buyer() As String
		Get
			Return Me._buyer
		End Get
		Set
			If (String.Equals(Me._buyer, value) = false) Then
				Me.OnbuyerChanging(value)
				Me.SendPropertyChanging
				Me._buyer = value
				Me.SendPropertyChanged("buyer")
				Me.OnbuyerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unloadingType", DbType:="VarChar(20)")>  _
	Public Property unloadingType() As String
		Get
			Return Me._unloadingType
		End Get
		Set
			If (String.Equals(Me._unloadingType, value) = false) Then
				Me.OnunloadingTypeChanging(value)
				Me.SendPropertyChanging
				Me._unloadingType = value
				Me.SendPropertyChanged("unloadingType")
				Me.OnunloadingTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unloadingVessel_ID", DbType:="Int")>  _
	Public Property unloadingVessel_ID() As System.Nullable(Of Integer)
		Get
			Return Me._unloadingVessel_ID
		End Get
		Set
			If (Me._unloadingVessel_ID.Equals(value) = false) Then
				Me.OnunloadingVessel_IDChanging(value)
				Me.SendPropertyChanging
				Me._unloadingVessel_ID = value
				Me.SendPropertyChanged("unloadingVessel_ID")
				Me.OnunloadingVessel_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unloadingForeignVessel", DbType:="VarChar(100)")>  _
	Public Property unloadingForeignVessel() As String
		Get
			Return Me._unloadingForeignVessel
		End Get
		Set
			If (String.Equals(Me._unloadingForeignVessel, value) = false) Then
				Me.OnunloadingForeignVesselChanging(value)
				Me.SendPropertyChanging
				Me._unloadingForeignVessel = value
				Me.SendPropertyChanged("unloadingForeignVessel")
				Me.OnunloadingForeignVesselChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_catcherVessel_ID", DbType:="Int")>  _
	Public Property catcherVessel_ID() As System.Nullable(Of Integer)
		Get
			Return Me._catcherVessel_ID
		End Get
		Set
			If (Me._catcherVessel_ID.Equals(value) = false) Then
				Me.OncatcherVessel_IDChanging(value)
				Me.SendPropertyChanging
				Me._catcherVessel_ID = value
				Me.SendPropertyChanged("catcherVessel_ID")
				Me.OncatcherVessel_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_companyChecker_ID", DbType:="Int")>  _
	Public Property companyChecker_ID() As System.Nullable(Of Integer)
		Get
			Return Me._companyChecker_ID
		End Get
		Set
			If (Me._companyChecker_ID.Equals(value) = false) Then
				Me.OncompanyChecker_IDChanging(value)
				Me.SendPropertyChanging
				Me._companyChecker_ID = value
				Me.SendPropertyChanged("companyChecker_ID")
				Me.OncompanyChecker_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_buyersChecker", DbType:="VarChar(100)")>  _
	Public Property buyersChecker() As String
		Get
			Return Me._buyersChecker
		End Get
		Set
			If (String.Equals(Me._buyersChecker, value) = false) Then
				Me.OnbuyersCheckerChanging(value)
				Me.SendPropertyChanging
				Me._buyersChecker = value
				Me.SendPropertyChanged("buyersChecker")
				Me.OnbuyersCheckerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_contractNum", DbType:="VarChar(50)")>  _
	Public Property contractNum() As String
		Get
			Return Me._contractNum
		End Get
		Set
			If (String.Equals(Me._contractNum, value) = false) Then
				Me.OncontractNumChanging(value)
				Me.SendPropertyChanging
				Me._contractNum = value
				Me.SendPropertyChanged("contractNum")
				Me.OncontractNumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_remarks", DbType:="VarChar(300)")>  _
	Public Property remarks() As String
		Get
			Return Me._remarks
		End Get
		Set
			If (String.Equals(Me._remarks, value) = false) Then
				Me.OnremarksChanging(value)
				Me.SendPropertyChanging
				Me._remarks = value
				Me.SendPropertyChanged("remarks")
				Me.OnremarksChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_encodedBy", DbType:="Int")>  _
	Public Property encodedBy() As System.Nullable(Of Integer)
		Get
			Return Me._encodedBy
		End Get
		Set
			If (Me._encodedBy.Equals(value) = false) Then
				Me.OnencodedByChanging(value)
				Me.SendPropertyChanging
				Me._encodedBy = value
				Me.SendPropertyChanged("encodedBy")
				Me.OnencodedByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_encodedOn", DbType:="DateTime")>  _
	Public Property encodedOn() As System.Nullable(Of Date)
		Get
			Return Me._encodedOn
		End Get
		Set
			If (Me._encodedOn.Equals(value) = false) Then
				Me.OnencodedOnChanging(value)
				Me.SendPropertyChanging
				Me._encodedOn = value
				Me.SendPropertyChanged("encodedOn")
				Me.OnencodedOnChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
