'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="TSP_MASTERDB")>  _
Partial Public Class tpmdbDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub Inserttbl_VehicleType(instance As tbl_VehicleType)
    End Sub
  Partial Private Sub Updatetbl_VehicleType(instance As tbl_VehicleType)
    End Sub
  Partial Private Sub Deletetbl_VehicleType(instance As tbl_VehicleType)
    End Sub
  Partial Private Sub Insertml_Bank(instance As ml_Bank)
    End Sub
  Partial Private Sub Updateml_Bank(instance As ml_Bank)
    End Sub
  Partial Private Sub Deleteml_Bank(instance As ml_Bank)
    End Sub
  Partial Private Sub Insertml_Base(instance As ml_Base)
    End Sub
  Partial Private Sub Updateml_Base(instance As ml_Base)
    End Sub
  Partial Private Sub Deleteml_Base(instance As ml_Base)
    End Sub
  Partial Private Sub Insertml_BusinessType(instance As ml_BusinessType)
    End Sub
  Partial Private Sub Updateml_BusinessType(instance As ml_BusinessType)
    End Sub
  Partial Private Sub Deleteml_BusinessType(instance As ml_BusinessType)
    End Sub
  Partial Private Sub Insertml_City(instance As ml_City)
    End Sub
  Partial Private Sub Updateml_City(instance As ml_City)
    End Sub
  Partial Private Sub Deleteml_City(instance As ml_City)
    End Sub
  Partial Private Sub Insertml_Company(instance As ml_Company)
    End Sub
  Partial Private Sub Updateml_Company(instance As ml_Company)
    End Sub
  Partial Private Sub Deleteml_Company(instance As ml_Company)
    End Sub
  Partial Private Sub Insertml_CompType(instance As ml_CompType)
    End Sub
  Partial Private Sub Updateml_CompType(instance As ml_CompType)
    End Sub
  Partial Private Sub Deleteml_CompType(instance As ml_CompType)
    End Sub
  Partial Private Sub Insertml_Country(instance As ml_Country)
    End Sub
  Partial Private Sub Updateml_Country(instance As ml_Country)
    End Sub
  Partial Private Sub Deleteml_Country(instance As ml_Country)
    End Sub
  Partial Private Sub Insertml_Currency(instance As ml_Currency)
    End Sub
  Partial Private Sub Updateml_Currency(instance As ml_Currency)
    End Sub
  Partial Private Sub Deleteml_Currency(instance As ml_Currency)
    End Sub
  Partial Private Sub Insertml_CusSupCategory(instance As ml_CusSupCategory)
    End Sub
  Partial Private Sub Updateml_CusSupCategory(instance As ml_CusSupCategory)
    End Sub
  Partial Private Sub Deleteml_CusSupCategory(instance As ml_CusSupCategory)
    End Sub
  Partial Private Sub Insertml_CusSupCurrency(instance As ml_CusSupCurrency)
    End Sub
  Partial Private Sub Updateml_CusSupCurrency(instance As ml_CusSupCurrency)
    End Sub
  Partial Private Sub Deleteml_CusSupCurrency(instance As ml_CusSupCurrency)
    End Sub
  Partial Private Sub Insertml_Customer(instance As ml_Customer)
    End Sub
  Partial Private Sub Updateml_Customer(instance As ml_Customer)
    End Sub
  Partial Private Sub Deleteml_Customer(instance As ml_Customer)
    End Sub
  Partial Private Sub Insertml_MasterCompany(instance As ml_MasterCompany)
    End Sub
  Partial Private Sub Updateml_MasterCompany(instance As ml_MasterCompany)
    End Sub
  Partial Private Sub Deleteml_MasterCompany(instance As ml_MasterCompany)
    End Sub
  Partial Private Sub Insertml_Position(instance As ml_Position)
    End Sub
  Partial Private Sub Updateml_Position(instance As ml_Position)
    End Sub
  Partial Private Sub Deleteml_Position(instance As ml_Position)
    End Sub
  Partial Private Sub Insertml_Status(instance As ml_Status)
    End Sub
  Partial Private Sub Updateml_Status(instance As ml_Status)
    End Sub
  Partial Private Sub Deleteml_Status(instance As ml_Status)
    End Sub
  Partial Private Sub Insertml_Street(instance As ml_Street)
    End Sub
  Partial Private Sub Updateml_Street(instance As ml_Street)
    End Sub
  Partial Private Sub Deleteml_Street(instance As ml_Street)
    End Sub
  Partial Private Sub Insertml_Supplier(instance As ml_Supplier)
    End Sub
  Partial Private Sub Updateml_Supplier(instance As ml_Supplier)
    End Sub
  Partial Private Sub Deleteml_Supplier(instance As ml_Supplier)
    End Sub
  Partial Private Sub Insertml_SupplierCategory(instance As ml_SupplierCategory)
    End Sub
  Partial Private Sub Updateml_SupplierCategory(instance As ml_SupplierCategory)
    End Sub
  Partial Private Sub Deleteml_SupplierCategory(instance As ml_SupplierCategory)
    End Sub
  Partial Private Sub Insertml_System(instance As ml_System)
    End Sub
  Partial Private Sub Updateml_System(instance As ml_System)
    End Sub
  Partial Private Sub Deleteml_System(instance As ml_System)
    End Sub
  Partial Private Sub Insertml_Tax(instance As ml_Tax)
    End Sub
  Partial Private Sub Updateml_Tax(instance As ml_Tax)
    End Sub
  Partial Private Sub Deleteml_Tax(instance As ml_Tax)
    End Sub
  Partial Private Sub Insertml_Term(instance As ml_Term)
    End Sub
  Partial Private Sub Updateml_Term(instance As ml_Term)
    End Sub
  Partial Private Sub Deleteml_Term(instance As ml_Term)
    End Sub
  Partial Private Sub Insertml_User(instance As ml_User)
    End Sub
  Partial Private Sub Updateml_User(instance As ml_User)
    End Sub
  Partial Private Sub Deleteml_User(instance As ml_User)
    End Sub
  Partial Private Sub Insertml_UserAccessStat(instance As ml_UserAccessStat)
    End Sub
  Partial Private Sub Updateml_UserAccessStat(instance As ml_UserAccessStat)
    End Sub
  Partial Private Sub Deleteml_UserAccessStat(instance As ml_UserAccessStat)
    End Sub
  Partial Private Sub Insertml_UserLevel(instance As ml_UserLevel)
    End Sub
  Partial Private Sub Updateml_UserLevel(instance As ml_UserLevel)
    End Sub
  Partial Private Sub Deleteml_UserLevel(instance As ml_UserLevel)
    End Sub
  Partial Private Sub Insertml_UserModule(instance As ml_UserModule)
    End Sub
  Partial Private Sub Updateml_UserModule(instance As ml_UserModule)
    End Sub
  Partial Private Sub Deleteml_UserModule(instance As ml_UserModule)
    End Sub
  Partial Private Sub Insertml_UserPermission(instance As ml_UserPermission)
    End Sub
  Partial Private Sub Updateml_UserPermission(instance As ml_UserPermission)
    End Sub
  Partial Private Sub Deleteml_UserPermission(instance As ml_UserPermission)
    End Sub
  Partial Private Sub Insertml_UserType(instance As ml_UserType)
    End Sub
  Partial Private Sub Updateml_UserType(instance As ml_UserType)
    End Sub
  Partial Private Sub Deleteml_UserType(instance As ml_UserType)
    End Sub
  Partial Private Sub Insertml_UserTypePermission(instance As ml_UserTypePermission)
    End Sub
  Partial Private Sub Updateml_UserTypePermission(instance As ml_UserTypePermission)
    End Sub
  Partial Private Sub Deleteml_UserTypePermission(instance As ml_UserTypePermission)
    End Sub
  Partial Private Sub Insertml_VesFishingClass(instance As ml_VesFishingClass)
    End Sub
  Partial Private Sub Updateml_VesFishingClass(instance As ml_VesFishingClass)
    End Sub
  Partial Private Sub Deleteml_VesFishingClass(instance As ml_VesFishingClass)
    End Sub
  Partial Private Sub Insertml_VesFishingType(instance As ml_VesFishingType)
    End Sub
  Partial Private Sub Updateml_VesFishingType(instance As ml_VesFishingType)
    End Sub
  Partial Private Sub Deleteml_VesFishingType(instance As ml_VesFishingType)
    End Sub
  Partial Private Sub Insertml_VesLicense(instance As ml_VesLicense)
    End Sub
  Partial Private Sub Updateml_VesLicense(instance As ml_VesLicense)
    End Sub
  Partial Private Sub Deleteml_VesLicense(instance As ml_VesLicense)
    End Sub
  Partial Private Sub Insertml_VesSecAssign(instance As ml_VesSecAssign)
    End Sub
  Partial Private Sub Updateml_VesSecAssign(instance As ml_VesSecAssign)
    End Sub
  Partial Private Sub Deleteml_VesSecAssign(instance As ml_VesSecAssign)
    End Sub
  Partial Private Sub Insertml_VesSecPosAssign(instance As ml_VesSecPosAssign)
    End Sub
  Partial Private Sub Updateml_VesSecPosAssign(instance As ml_VesSecPosAssign)
    End Sub
  Partial Private Sub Deleteml_VesSecPosAssign(instance As ml_VesSecPosAssign)
    End Sub
  Partial Private Sub Insertml_VesSection(instance As ml_VesSection)
    End Sub
  Partial Private Sub Updateml_VesSection(instance As ml_VesSection)
    End Sub
  Partial Private Sub Deleteml_VesSection(instance As ml_VesSection)
    End Sub
  Partial Private Sub Insertml_Vessel(instance As ml_Vessel)
    End Sub
  Partial Private Sub Updateml_Vessel(instance As ml_Vessel)
    End Sub
  Partial Private Sub Deleteml_Vessel(instance As ml_Vessel)
    End Sub
  Partial Private Sub Insertml_VesselOwnership(instance As ml_VesselOwnership)
    End Sub
  Partial Private Sub Updateml_VesselOwnership(instance As ml_VesselOwnership)
    End Sub
  Partial Private Sub Deleteml_VesselOwnership(instance As ml_VesselOwnership)
    End Sub
  Partial Private Sub Insertml_VesselType(instance As ml_VesselType)
    End Sub
  Partial Private Sub Updateml_VesselType(instance As ml_VesselType)
    End Sub
  Partial Private Sub Deleteml_VesselType(instance As ml_VesselType)
    End Sub
  Partial Private Sub Insertsupplier(instance As supplier)
    End Sub
  Partial Private Sub Updatesupplier(instance As supplier)
    End Sub
  Partial Private Sub Deletesupplier(instance As supplier)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.MarketingSalesSystem.Settings.Default.TSP_MASTERDBConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property ml_aStatus() As System.Data.Linq.Table(Of ml_aStatus)
		Get
			Return Me.GetTable(Of ml_aStatus)
		End Get
	End Property
	
	Public ReadOnly Property tbl_VehicleTypes() As System.Data.Linq.Table(Of tbl_VehicleType)
		Get
			Return Me.GetTable(Of tbl_VehicleType)
		End Get
	End Property
	
	Public ReadOnly Property ml_Banks() As System.Data.Linq.Table(Of ml_Bank)
		Get
			Return Me.GetTable(Of ml_Bank)
		End Get
	End Property
	
	Public ReadOnly Property ml_Bases() As System.Data.Linq.Table(Of ml_Base)
		Get
			Return Me.GetTable(Of ml_Base)
		End Get
	End Property
	
	Public ReadOnly Property ml_BusinessTypes() As System.Data.Linq.Table(Of ml_BusinessType)
		Get
			Return Me.GetTable(Of ml_BusinessType)
		End Get
	End Property
	
	Public ReadOnly Property ml_Cities() As System.Data.Linq.Table(Of ml_City)
		Get
			Return Me.GetTable(Of ml_City)
		End Get
	End Property
	
	Public ReadOnly Property ml_Companies() As System.Data.Linq.Table(Of ml_Company)
		Get
			Return Me.GetTable(Of ml_Company)
		End Get
	End Property
	
	Public ReadOnly Property ml_CompTypes() As System.Data.Linq.Table(Of ml_CompType)
		Get
			Return Me.GetTable(Of ml_CompType)
		End Get
	End Property
	
	Public ReadOnly Property ml_Countries() As System.Data.Linq.Table(Of ml_Country)
		Get
			Return Me.GetTable(Of ml_Country)
		End Get
	End Property
	
	Public ReadOnly Property ml_Currencies() As System.Data.Linq.Table(Of ml_Currency)
		Get
			Return Me.GetTable(Of ml_Currency)
		End Get
	End Property
	
	Public ReadOnly Property ml_CusSupCategories() As System.Data.Linq.Table(Of ml_CusSupCategory)
		Get
			Return Me.GetTable(Of ml_CusSupCategory)
		End Get
	End Property
	
	Public ReadOnly Property ml_CusSupCurrencies() As System.Data.Linq.Table(Of ml_CusSupCurrency)
		Get
			Return Me.GetTable(Of ml_CusSupCurrency)
		End Get
	End Property
	
	Public ReadOnly Property ml_Customers() As System.Data.Linq.Table(Of ml_Customer)
		Get
			Return Me.GetTable(Of ml_Customer)
		End Get
	End Property
	
	Public ReadOnly Property ml_MasterCompanies() As System.Data.Linq.Table(Of ml_MasterCompany)
		Get
			Return Me.GetTable(Of ml_MasterCompany)
		End Get
	End Property
	
	Public ReadOnly Property ml_Positions() As System.Data.Linq.Table(Of ml_Position)
		Get
			Return Me.GetTable(Of ml_Position)
		End Get
	End Property
	
	Public ReadOnly Property ml_reusabilities() As System.Data.Linq.Table(Of ml_reusability)
		Get
			Return Me.GetTable(Of ml_reusability)
		End Get
	End Property
	
	Public ReadOnly Property ml_Status() As System.Data.Linq.Table(Of ml_Status)
		Get
			Return Me.GetTable(Of ml_Status)
		End Get
	End Property
	
	Public ReadOnly Property ml_Streets() As System.Data.Linq.Table(Of ml_Street)
		Get
			Return Me.GetTable(Of ml_Street)
		End Get
	End Property
	
	Public ReadOnly Property ML_SULLIER_20170329s() As System.Data.Linq.Table(Of ML_SULLIER_20170329)
		Get
			Return Me.GetTable(Of ML_SULLIER_20170329)
		End Get
	End Property
	
	Public ReadOnly Property ml_Suppliers() As System.Data.Linq.Table(Of ml_Supplier)
		Get
			Return Me.GetTable(Of ml_Supplier)
		End Get
	End Property
	
	Public ReadOnly Property ml_SupplierCategories() As System.Data.Linq.Table(Of ml_SupplierCategory)
		Get
			Return Me.GetTable(Of ml_SupplierCategory)
		End Get
	End Property
	
	Public ReadOnly Property ml_Systems() As System.Data.Linq.Table(Of ml_System)
		Get
			Return Me.GetTable(Of ml_System)
		End Get
	End Property
	
	Public ReadOnly Property ml_Taxes() As System.Data.Linq.Table(Of ml_Tax)
		Get
			Return Me.GetTable(Of ml_Tax)
		End Get
	End Property
	
	Public ReadOnly Property ml_Terms() As System.Data.Linq.Table(Of ml_Term)
		Get
			Return Me.GetTable(Of ml_Term)
		End Get
	End Property
	
	Public ReadOnly Property ml_Users() As System.Data.Linq.Table(Of ml_User)
		Get
			Return Me.GetTable(Of ml_User)
		End Get
	End Property
	
	Public ReadOnly Property ml_UserAccessStats() As System.Data.Linq.Table(Of ml_UserAccessStat)
		Get
			Return Me.GetTable(Of ml_UserAccessStat)
		End Get
	End Property
	
	Public ReadOnly Property ml_UserLevels() As System.Data.Linq.Table(Of ml_UserLevel)
		Get
			Return Me.GetTable(Of ml_UserLevel)
		End Get
	End Property
	
	Public ReadOnly Property ml_UserModules() As System.Data.Linq.Table(Of ml_UserModule)
		Get
			Return Me.GetTable(Of ml_UserModule)
		End Get
	End Property
	
	Public ReadOnly Property ml_UserPermissions() As System.Data.Linq.Table(Of ml_UserPermission)
		Get
			Return Me.GetTable(Of ml_UserPermission)
		End Get
	End Property
	
	Public ReadOnly Property ml_UserTypes() As System.Data.Linq.Table(Of ml_UserType)
		Get
			Return Me.GetTable(Of ml_UserType)
		End Get
	End Property
	
	Public ReadOnly Property ml_UserTypePermissions() As System.Data.Linq.Table(Of ml_UserTypePermission)
		Get
			Return Me.GetTable(Of ml_UserTypePermission)
		End Get
	End Property
	
	Public ReadOnly Property ml_VesFishingClasses() As System.Data.Linq.Table(Of ml_VesFishingClass)
		Get
			Return Me.GetTable(Of ml_VesFishingClass)
		End Get
	End Property
	
	Public ReadOnly Property ml_VesFishingTypes() As System.Data.Linq.Table(Of ml_VesFishingType)
		Get
			Return Me.GetTable(Of ml_VesFishingType)
		End Get
	End Property
	
	Public ReadOnly Property ml_VesLicenses() As System.Data.Linq.Table(Of ml_VesLicense)
		Get
			Return Me.GetTable(Of ml_VesLicense)
		End Get
	End Property
	
	Public ReadOnly Property ml_VesSecAssigns() As System.Data.Linq.Table(Of ml_VesSecAssign)
		Get
			Return Me.GetTable(Of ml_VesSecAssign)
		End Get
	End Property
	
	Public ReadOnly Property ml_VesSecPosAssigns() As System.Data.Linq.Table(Of ml_VesSecPosAssign)
		Get
			Return Me.GetTable(Of ml_VesSecPosAssign)
		End Get
	End Property
	
	Public ReadOnly Property ml_VesSections() As System.Data.Linq.Table(Of ml_VesSection)
		Get
			Return Me.GetTable(Of ml_VesSection)
		End Get
	End Property
	
	Public ReadOnly Property ml_Vessels() As System.Data.Linq.Table(Of ml_Vessel)
		Get
			Return Me.GetTable(Of ml_Vessel)
		End Get
	End Property
	
	Public ReadOnly Property ml_VesselOwnerships() As System.Data.Linq.Table(Of ml_VesselOwnership)
		Get
			Return Me.GetTable(Of ml_VesselOwnership)
		End Get
	End Property
	
	Public ReadOnly Property ml_VesselTypes() As System.Data.Linq.Table(Of ml_VesselType)
		Get
			Return Me.GetTable(Of ml_VesselType)
		End Get
	End Property
	
	Public ReadOnly Property subDeps() As System.Data.Linq.Table(Of subDep)
		Get
			Return Me.GetTable(Of subDep)
		End Get
	End Property
	
	Public ReadOnly Property suppliers() As System.Data.Linq.Table(Of supplier)
		Get
			Return Me.GetTable(Of supplier)
		End Get
	End Property
	
	Public ReadOnly Property HRSVessels() As System.Data.Linq.Table(Of HRSVessel)
		Get
			Return Me.GetTable(Of HRSVessel)
		End Get
	End Property
	
	Public ReadOnly Property vVesselOwnages() As System.Data.Linq.Table(Of vVesselOwnage)
		Get
			Return Me.GetTable(Of vVesselOwnage)
		End Get
	End Property
	
	Public ReadOnly Property vMl_Suppliers() As System.Data.Linq.Table(Of vMl_Supplier)
		Get
			Return Me.GetTable(Of vMl_Supplier)
		End Get
	End Property
	
	Public ReadOnly Property vML_SupplierLocations() As System.Data.Linq.Table(Of vML_SupplierLocation)
		Get
			Return Me.GetTable(Of vML_SupplierLocation)
		End Get
	End Property
	
	Public ReadOnly Property vML_VesselClasses() As System.Data.Linq.Table(Of vML_VesselClass)
		Get
			Return Me.GetTable(Of vML_VesselClass)
		End Get
	End Property
	
	Public ReadOnly Property vMl_VesselClassifications() As System.Data.Linq.Table(Of vMl_VesselClassification)
		Get
			Return Me.GetTable(Of vMl_VesselClassification)
		End Get
	End Property
	
	Public ReadOnly Property vML_VesselCompanyHistories() As System.Data.Linq.Table(Of vML_VesselCompanyHistory)
		Get
			Return Me.GetTable(Of vML_VesselCompanyHistory)
		End Get
	End Property
	
	Public ReadOnly Property vMl_VesselLists() As System.Data.Linq.Table(Of vMl_VesselList)
		Get
			Return Me.GetTable(Of vMl_VesselList)
		End Get
	End Property
	
	Public ReadOnly Property vPositionGroupNums() As System.Data.Linq.Table(Of vPositionGroupNum)
		Get
			Return Me.GetTable(Of vPositionGroupNum)
		End Get
	End Property
	
	Public ReadOnly Property vSecNotDefaults() As System.Data.Linq.Table(Of vSecNotDefault)
		Get
			Return Me.GetTable(Of vSecNotDefault)
		End Get
	End Property
	
	Public ReadOnly Property vSecUnassigneds() As System.Data.Linq.Table(Of vSecUnassigned)
		Get
			Return Me.GetTable(Of vSecUnassigned)
		End Get
	End Property
	
	Public ReadOnly Property vSupplierSummaries() As System.Data.Linq.Table(Of vSupplierSummary)
		Get
			Return Me.GetTable(Of vSupplierSummary)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_aStatus")>  _
Partial Public Class ml_aStatus
	
	Private _astatus_id As Integer
	
	Private _approvalStat As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_astatus_id", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property astatus_id() As Integer
		Get
			Return Me._astatus_id
		End Get
		Set
			If ((Me._astatus_id = value)  _
						= false) Then
				Me._astatus_id = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_approvalStat", DbType:="VarChar(10)")>  _
	Public Property approvalStat() As String
		Get
			Return Me._approvalStat
		End Get
		Set
			If (String.Equals(Me._approvalStat, value) = false) Then
				Me._approvalStat = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tbl_VehicleType")>  _
Partial Public Class tbl_VehicleType
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_vehicleTypeID As Integer
	
	Private _ml_vehicleType As String
	
	Private _ml_StatID As System.Nullable(Of Integer)
	
	Private _ml_UserID As System.Nullable(Of Integer)
	
	Private _dateModified As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_vehicleTypeIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_vehicleTypeIDChanged()
    End Sub
    Partial Private Sub Onml_vehicleTypeChanging(value As String)
    End Sub
    Partial Private Sub Onml_vehicleTypeChanged()
    End Sub
    Partial Private Sub Onml_StatIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_StatIDChanged()
    End Sub
    Partial Private Sub Onml_UserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_UserIDChanged()
    End Sub
    Partial Private Sub OndateModifiedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndateModifiedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vehicleTypeID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_vehicleTypeID() As Integer
		Get
			Return Me._ml_vehicleTypeID
		End Get
		Set
			If ((Me._ml_vehicleTypeID = value)  _
						= false) Then
				Me.Onml_vehicleTypeIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_vehicleTypeID = value
				Me.SendPropertyChanged("ml_vehicleTypeID")
				Me.Onml_vehicleTypeIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vehicleType", DbType:="VarChar(50)")>  _
	Public Property ml_vehicleType() As String
		Get
			Return Me._ml_vehicleType
		End Get
		Set
			If (String.Equals(Me._ml_vehicleType, value) = false) Then
				Me.Onml_vehicleTypeChanging(value)
				Me.SendPropertyChanging
				Me._ml_vehicleType = value
				Me.SendPropertyChanged("ml_vehicleType")
				Me.Onml_vehicleTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_StatID", DbType:="Int")>  _
	Public Property ml_StatID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_StatID
		End Get
		Set
			If (Me._ml_StatID.Equals(value) = false) Then
				Me.Onml_StatIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_StatID = value
				Me.SendPropertyChanged("ml_StatID")
				Me.Onml_StatIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UserID", DbType:="Int")>  _
	Public Property ml_UserID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_UserID
		End Get
		Set
			If (Me._ml_UserID.Equals(value) = false) Then
				Me.Onml_UserIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_UserID = value
				Me.SendPropertyChanged("ml_UserID")
				Me.Onml_UserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dateModified", DbType:="DateTime")>  _
	Public Property dateModified() As System.Nullable(Of Date)
		Get
			Return Me._dateModified
		End Get
		Set
			If (Me._dateModified.Equals(value) = false) Then
				Me.OndateModifiedChanging(value)
				Me.SendPropertyChanging
				Me._dateModified = value
				Me.SendPropertyChanged("dateModified")
				Me.OndateModifiedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_Bank")>  _
Partial Public Class ml_Bank
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_bankID As Integer
	
	Private _ml_Bank As String
	
	Private _ml_BankCode As String
	
	Private _ml_BankAddress As String
	
	Private _ml_StatID As System.Nullable(Of Integer)
	
	Private _ml_UserID As System.Nullable(Of Integer)
	
	Private _dateModified As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_bankIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_bankIDChanged()
    End Sub
    Partial Private Sub Onml_BankChanging(value As String)
    End Sub
    Partial Private Sub Onml_BankChanged()
    End Sub
    Partial Private Sub Onml_BankCodeChanging(value As String)
    End Sub
    Partial Private Sub Onml_BankCodeChanged()
    End Sub
    Partial Private Sub Onml_BankAddressChanging(value As String)
    End Sub
    Partial Private Sub Onml_BankAddressChanged()
    End Sub
    Partial Private Sub Onml_StatIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_StatIDChanged()
    End Sub
    Partial Private Sub Onml_UserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_UserIDChanged()
    End Sub
    Partial Private Sub OndateModifiedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndateModifiedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_bankID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_bankID() As Integer
		Get
			Return Me._ml_bankID
		End Get
		Set
			If ((Me._ml_bankID = value)  _
						= false) Then
				Me.Onml_bankIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_bankID = value
				Me.SendPropertyChanged("ml_bankID")
				Me.Onml_bankIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_Bank", DbType:="VarChar(100)")>  _
	Public Property ml_Bank() As String
		Get
			Return Me._ml_Bank
		End Get
		Set
			If (String.Equals(Me._ml_Bank, value) = false) Then
				Me.Onml_BankChanging(value)
				Me.SendPropertyChanging
				Me._ml_Bank = value
				Me.SendPropertyChanged("ml_Bank")
				Me.Onml_BankChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_BankCode", DbType:="VarChar(50)")>  _
	Public Property ml_BankCode() As String
		Get
			Return Me._ml_BankCode
		End Get
		Set
			If (String.Equals(Me._ml_BankCode, value) = false) Then
				Me.Onml_BankCodeChanging(value)
				Me.SendPropertyChanging
				Me._ml_BankCode = value
				Me.SendPropertyChanged("ml_BankCode")
				Me.Onml_BankCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_BankAddress", DbType:="VarChar(500)")>  _
	Public Property ml_BankAddress() As String
		Get
			Return Me._ml_BankAddress
		End Get
		Set
			If (String.Equals(Me._ml_BankAddress, value) = false) Then
				Me.Onml_BankAddressChanging(value)
				Me.SendPropertyChanging
				Me._ml_BankAddress = value
				Me.SendPropertyChanged("ml_BankAddress")
				Me.Onml_BankAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_StatID", DbType:="Int")>  _
	Public Property ml_StatID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_StatID
		End Get
		Set
			If (Me._ml_StatID.Equals(value) = false) Then
				Me.Onml_StatIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_StatID = value
				Me.SendPropertyChanged("ml_StatID")
				Me.Onml_StatIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UserID", DbType:="Int")>  _
	Public Property ml_UserID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_UserID
		End Get
		Set
			If (Me._ml_UserID.Equals(value) = false) Then
				Me.Onml_UserIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_UserID = value
				Me.SendPropertyChanged("ml_UserID")
				Me.Onml_UserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dateModified", DbType:="DateTime")>  _
	Public Property dateModified() As System.Nullable(Of Date)
		Get
			Return Me._dateModified
		End Get
		Set
			If (Me._dateModified.Equals(value) = false) Then
				Me.OndateModifiedChanging(value)
				Me.SendPropertyChanging
				Me._dateModified = value
				Me.SendPropertyChanged("dateModified")
				Me.OndateModifiedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_Base")>  _
Partial Public Class ml_Base
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_BaseID As Integer
	
	Private _ml_base As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_BaseIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_BaseIDChanged()
    End Sub
    Partial Private Sub Onml_baseChanging(value As String)
    End Sub
    Partial Private Sub Onml_baseChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_BaseID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_BaseID() As Integer
		Get
			Return Me._ml_BaseID
		End Get
		Set
			If ((Me._ml_BaseID = value)  _
						= false) Then
				Me.Onml_BaseIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_BaseID = value
				Me.SendPropertyChanged("ml_BaseID")
				Me.Onml_BaseIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_base", DbType:="VarChar(10)")>  _
	Public Property ml_base() As String
		Get
			Return Me._ml_base
		End Get
		Set
			If (String.Equals(Me._ml_base, value) = false) Then
				Me.Onml_baseChanging(value)
				Me.SendPropertyChanging
				Me._ml_base = value
				Me.SendPropertyChanged("ml_base")
				Me.Onml_baseChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_BusinessType")>  _
Partial Public Class ml_BusinessType
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_btID As Integer
	
	Private _ml_businessType As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_btIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_btIDChanged()
    End Sub
    Partial Private Sub Onml_businessTypeChanging(value As String)
    End Sub
    Partial Private Sub Onml_businessTypeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_btID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_btID() As Integer
		Get
			Return Me._ml_btID
		End Get
		Set
			If ((Me._ml_btID = value)  _
						= false) Then
				Me.Onml_btIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_btID = value
				Me.SendPropertyChanged("ml_btID")
				Me.Onml_btIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_businessType", DbType:="VarChar(100)")>  _
	Public Property ml_businessType() As String
		Get
			Return Me._ml_businessType
		End Get
		Set
			If (String.Equals(Me._ml_businessType, value) = false) Then
				Me.Onml_businessTypeChanging(value)
				Me.SendPropertyChanging
				Me._ml_businessType = value
				Me.SendPropertyChanged("ml_businessType")
				Me.Onml_businessTypeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_City")>  _
Partial Public Class ml_City
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_CityID As Integer
	
	Private _ml_City As String
	
	Private _ml_UserID As System.Nullable(Of Integer)
	
	Private _dateModified As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_CityIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_CityIDChanged()
    End Sub
    Partial Private Sub Onml_CityChanging(value As String)
    End Sub
    Partial Private Sub Onml_CityChanged()
    End Sub
    Partial Private Sub Onml_UserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_UserIDChanged()
    End Sub
    Partial Private Sub OndateModifiedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndateModifiedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_CityID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_CityID() As Integer
		Get
			Return Me._ml_CityID
		End Get
		Set
			If ((Me._ml_CityID = value)  _
						= false) Then
				Me.Onml_CityIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_CityID = value
				Me.SendPropertyChanged("ml_CityID")
				Me.Onml_CityIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_City", DbType:="VarChar(100)")>  _
	Public Property ml_City() As String
		Get
			Return Me._ml_City
		End Get
		Set
			If (String.Equals(Me._ml_City, value) = false) Then
				Me.Onml_CityChanging(value)
				Me.SendPropertyChanging
				Me._ml_City = value
				Me.SendPropertyChanged("ml_City")
				Me.Onml_CityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UserID", DbType:="Int")>  _
	Public Property ml_UserID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_UserID
		End Get
		Set
			If (Me._ml_UserID.Equals(value) = false) Then
				Me.Onml_UserIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_UserID = value
				Me.SendPropertyChanged("ml_UserID")
				Me.Onml_UserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dateModified", DbType:="DateTime")>  _
	Public Property dateModified() As System.Nullable(Of Date)
		Get
			Return Me._dateModified
		End Get
		Set
			If (Me._dateModified.Equals(value) = false) Then
				Me.OndateModifiedChanging(value)
				Me.SendPropertyChanging
				Me._dateModified = value
				Me.SendPropertyChanged("dateModified")
				Me.OndateModifiedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_Company")>  _
Partial Public Class ml_Company
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_CID As Integer
	
	Private _ml_cCode As String
	
	Private _ml_Company As String
	
	Private _ml_cAddress As String
	
	Private _ml_ctID As System.Nullable(Of Integer)
	
	Private _ml_StatID As System.Nullable(Of Integer)
	
	Private _ml_mcID As System.Nullable(Of Integer)
	
	Private _ml_UserID As System.Nullable(Of Integer)
	
	Private _dateModified As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_CIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_CIDChanged()
    End Sub
    Partial Private Sub Onml_cCodeChanging(value As String)
    End Sub
    Partial Private Sub Onml_cCodeChanged()
    End Sub
    Partial Private Sub Onml_CompanyChanging(value As String)
    End Sub
    Partial Private Sub Onml_CompanyChanged()
    End Sub
    Partial Private Sub Onml_cAddressChanging(value As String)
    End Sub
    Partial Private Sub Onml_cAddressChanged()
    End Sub
    Partial Private Sub Onml_ctIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_ctIDChanged()
    End Sub
    Partial Private Sub Onml_StatIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_StatIDChanged()
    End Sub
    Partial Private Sub Onml_mcIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_mcIDChanged()
    End Sub
    Partial Private Sub Onml_UserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_UserIDChanged()
    End Sub
    Partial Private Sub OndateModifiedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndateModifiedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_CID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_CID() As Integer
		Get
			Return Me._ml_CID
		End Get
		Set
			If ((Me._ml_CID = value)  _
						= false) Then
				Me.Onml_CIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_CID = value
				Me.SendPropertyChanged("ml_CID")
				Me.Onml_CIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_cCode", DbType:="VarChar(50)")>  _
	Public Property ml_cCode() As String
		Get
			Return Me._ml_cCode
		End Get
		Set
			If (String.Equals(Me._ml_cCode, value) = false) Then
				Me.Onml_cCodeChanging(value)
				Me.SendPropertyChanging
				Me._ml_cCode = value
				Me.SendPropertyChanged("ml_cCode")
				Me.Onml_cCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_Company", DbType:="VarChar(100)")>  _
	Public Property ml_Company() As String
		Get
			Return Me._ml_Company
		End Get
		Set
			If (String.Equals(Me._ml_Company, value) = false) Then
				Me.Onml_CompanyChanging(value)
				Me.SendPropertyChanging
				Me._ml_Company = value
				Me.SendPropertyChanged("ml_Company")
				Me.Onml_CompanyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_cAddress", DbType:="VarChar(500)")>  _
	Public Property ml_cAddress() As String
		Get
			Return Me._ml_cAddress
		End Get
		Set
			If (String.Equals(Me._ml_cAddress, value) = false) Then
				Me.Onml_cAddressChanging(value)
				Me.SendPropertyChanging
				Me._ml_cAddress = value
				Me.SendPropertyChanged("ml_cAddress")
				Me.Onml_cAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_ctID", DbType:="Int")>  _
	Public Property ml_ctID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_ctID
		End Get
		Set
			If (Me._ml_ctID.Equals(value) = false) Then
				Me.Onml_ctIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_ctID = value
				Me.SendPropertyChanged("ml_ctID")
				Me.Onml_ctIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_StatID", DbType:="Int")>  _
	Public Property ml_StatID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_StatID
		End Get
		Set
			If (Me._ml_StatID.Equals(value) = false) Then
				Me.Onml_StatIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_StatID = value
				Me.SendPropertyChanged("ml_StatID")
				Me.Onml_StatIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_mcID", DbType:="Int")>  _
	Public Property ml_mcID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_mcID
		End Get
		Set
			If (Me._ml_mcID.Equals(value) = false) Then
				Me.Onml_mcIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_mcID = value
				Me.SendPropertyChanged("ml_mcID")
				Me.Onml_mcIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UserID", DbType:="Int")>  _
	Public Property ml_UserID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_UserID
		End Get
		Set
			If (Me._ml_UserID.Equals(value) = false) Then
				Me.Onml_UserIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_UserID = value
				Me.SendPropertyChanged("ml_UserID")
				Me.Onml_UserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dateModified", DbType:="DateTime")>  _
	Public Property dateModified() As System.Nullable(Of Date)
		Get
			Return Me._dateModified
		End Get
		Set
			If (Me._dateModified.Equals(value) = false) Then
				Me.OndateModifiedChanging(value)
				Me.SendPropertyChanging
				Me._dateModified = value
				Me.SendPropertyChanged("dateModified")
				Me.OndateModifiedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_CompType")>  _
Partial Public Class ml_CompType
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_ctID As Integer
	
	Private _ml_compType As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_ctIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_ctIDChanged()
    End Sub
    Partial Private Sub Onml_compTypeChanging(value As String)
    End Sub
    Partial Private Sub Onml_compTypeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_ctID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_ctID() As Integer
		Get
			Return Me._ml_ctID
		End Get
		Set
			If ((Me._ml_ctID = value)  _
						= false) Then
				Me.Onml_ctIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_ctID = value
				Me.SendPropertyChanged("ml_ctID")
				Me.Onml_ctIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_compType", DbType:="VarChar(20)")>  _
	Public Property ml_compType() As String
		Get
			Return Me._ml_compType
		End Get
		Set
			If (String.Equals(Me._ml_compType, value) = false) Then
				Me.Onml_compTypeChanging(value)
				Me.SendPropertyChanging
				Me._ml_compType = value
				Me.SendPropertyChanged("ml_compType")
				Me.Onml_compTypeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_Country")>  _
Partial Public Class ml_Country
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_countryID As Integer
	
	Private _ml_CountryCode As String
	
	Private _ml_Country As String
	
	Private _ml_StatID As System.Nullable(Of Integer)
	
	Private _ml_UserID As System.Nullable(Of Integer)
	
	Private _dateModified As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_countryIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_countryIDChanged()
    End Sub
    Partial Private Sub Onml_CountryCodeChanging(value As String)
    End Sub
    Partial Private Sub Onml_CountryCodeChanged()
    End Sub
    Partial Private Sub Onml_CountryChanging(value As String)
    End Sub
    Partial Private Sub Onml_CountryChanged()
    End Sub
    Partial Private Sub Onml_StatIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_StatIDChanged()
    End Sub
    Partial Private Sub Onml_UserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_UserIDChanged()
    End Sub
    Partial Private Sub OndateModifiedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndateModifiedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_countryID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_countryID() As Integer
		Get
			Return Me._ml_countryID
		End Get
		Set
			If ((Me._ml_countryID = value)  _
						= false) Then
				Me.Onml_countryIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_countryID = value
				Me.SendPropertyChanged("ml_countryID")
				Me.Onml_countryIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_CountryCode", DbType:="VarChar(20)")>  _
	Public Property ml_CountryCode() As String
		Get
			Return Me._ml_CountryCode
		End Get
		Set
			If (String.Equals(Me._ml_CountryCode, value) = false) Then
				Me.Onml_CountryCodeChanging(value)
				Me.SendPropertyChanging
				Me._ml_CountryCode = value
				Me.SendPropertyChanged("ml_CountryCode")
				Me.Onml_CountryCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_Country", DbType:="VarChar(50)")>  _
	Public Property ml_Country() As String
		Get
			Return Me._ml_Country
		End Get
		Set
			If (String.Equals(Me._ml_Country, value) = false) Then
				Me.Onml_CountryChanging(value)
				Me.SendPropertyChanging
				Me._ml_Country = value
				Me.SendPropertyChanged("ml_Country")
				Me.Onml_CountryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_StatID", DbType:="Int")>  _
	Public Property ml_StatID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_StatID
		End Get
		Set
			If (Me._ml_StatID.Equals(value) = false) Then
				Me.Onml_StatIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_StatID = value
				Me.SendPropertyChanged("ml_StatID")
				Me.Onml_StatIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UserID", DbType:="Int")>  _
	Public Property ml_UserID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_UserID
		End Get
		Set
			If (Me._ml_UserID.Equals(value) = false) Then
				Me.Onml_UserIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_UserID = value
				Me.SendPropertyChanged("ml_UserID")
				Me.Onml_UserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dateModified", DbType:="DateTime")>  _
	Public Property dateModified() As System.Nullable(Of Date)
		Get
			Return Me._dateModified
		End Get
		Set
			If (Me._dateModified.Equals(value) = false) Then
				Me.OndateModifiedChanging(value)
				Me.SendPropertyChanging
				Me._dateModified = value
				Me.SendPropertyChanged("dateModified")
				Me.OndateModifiedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_Currency")>  _
Partial Public Class ml_Currency
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_currencyID As Integer
	
	Private _ml_currCode As String
	
	Private _ml_currency As String
	
	Private _ml_UserID As System.Nullable(Of Integer)
	
	Private _dateModified As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_currencyIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_currencyIDChanged()
    End Sub
    Partial Private Sub Onml_currCodeChanging(value As String)
    End Sub
    Partial Private Sub Onml_currCodeChanged()
    End Sub
    Partial Private Sub Onml_currencyChanging(value As String)
    End Sub
    Partial Private Sub Onml_currencyChanged()
    End Sub
    Partial Private Sub Onml_UserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_UserIDChanged()
    End Sub
    Partial Private Sub OndateModifiedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndateModifiedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_currencyID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_currencyID() As Integer
		Get
			Return Me._ml_currencyID
		End Get
		Set
			If ((Me._ml_currencyID = value)  _
						= false) Then
				Me.Onml_currencyIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_currencyID = value
				Me.SendPropertyChanged("ml_currencyID")
				Me.Onml_currencyIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_currCode", DbType:="VarChar(10)")>  _
	Public Property ml_currCode() As String
		Get
			Return Me._ml_currCode
		End Get
		Set
			If (String.Equals(Me._ml_currCode, value) = false) Then
				Me.Onml_currCodeChanging(value)
				Me.SendPropertyChanging
				Me._ml_currCode = value
				Me.SendPropertyChanged("ml_currCode")
				Me.Onml_currCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_currency", DbType:="VarChar(50)")>  _
	Public Property ml_currency() As String
		Get
			Return Me._ml_currency
		End Get
		Set
			If (String.Equals(Me._ml_currency, value) = false) Then
				Me.Onml_currencyChanging(value)
				Me.SendPropertyChanging
				Me._ml_currency = value
				Me.SendPropertyChanged("ml_currency")
				Me.Onml_currencyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UserID", DbType:="Int")>  _
	Public Property ml_UserID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_UserID
		End Get
		Set
			If (Me._ml_UserID.Equals(value) = false) Then
				Me.Onml_UserIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_UserID = value
				Me.SendPropertyChanged("ml_UserID")
				Me.Onml_UserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dateModified", DbType:="DateTime")>  _
	Public Property dateModified() As System.Nullable(Of Date)
		Get
			Return Me._dateModified
		End Get
		Set
			If (Me._dateModified.Equals(value) = false) Then
				Me.OndateModifiedChanging(value)
				Me.SendPropertyChanging
				Me._dateModified = value
				Me.SendPropertyChanged("dateModified")
				Me.OndateModifiedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_CusSupCategory")>  _
Partial Public Class ml_CusSupCategory
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_cscID As Integer
	
	Private _ml_csCategory As String
	
	Private _ml_UserID As System.Nullable(Of Integer)
	
	Private _dateModified As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_cscIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_cscIDChanged()
    End Sub
    Partial Private Sub Onml_csCategoryChanging(value As String)
    End Sub
    Partial Private Sub Onml_csCategoryChanged()
    End Sub
    Partial Private Sub Onml_UserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_UserIDChanged()
    End Sub
    Partial Private Sub OndateModifiedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndateModifiedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_cscID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_cscID() As Integer
		Get
			Return Me._ml_cscID
		End Get
		Set
			If ((Me._ml_cscID = value)  _
						= false) Then
				Me.Onml_cscIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_cscID = value
				Me.SendPropertyChanged("ml_cscID")
				Me.Onml_cscIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_csCategory", DbType:="VarChar(100)")>  _
	Public Property ml_csCategory() As String
		Get
			Return Me._ml_csCategory
		End Get
		Set
			If (String.Equals(Me._ml_csCategory, value) = false) Then
				Me.Onml_csCategoryChanging(value)
				Me.SendPropertyChanging
				Me._ml_csCategory = value
				Me.SendPropertyChanged("ml_csCategory")
				Me.Onml_csCategoryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UserID", DbType:="Int")>  _
	Public Property ml_UserID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_UserID
		End Get
		Set
			If (Me._ml_UserID.Equals(value) = false) Then
				Me.Onml_UserIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_UserID = value
				Me.SendPropertyChanged("ml_UserID")
				Me.Onml_UserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dateModified", DbType:="DateTime")>  _
	Public Property dateModified() As System.Nullable(Of Date)
		Get
			Return Me._dateModified
		End Get
		Set
			If (Me._dateModified.Equals(value) = false) Then
				Me.OndateModifiedChanging(value)
				Me.SendPropertyChanging
				Me._dateModified = value
				Me.SendPropertyChanged("dateModified")
				Me.OndateModifiedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_CusSupCurrency")>  _
Partial Public Class ml_CusSupCurrency
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_csCurrID As Integer
	
	Private _ml_SupID As System.Nullable(Of Integer)
	
	Private _ml_CusID As System.Nullable(Of Integer)
	
	Private _ml_currencyID As System.Nullable(Of Integer)
	
	Private _ml_UserID As System.Nullable(Of Integer)
	
	Private _dateModified As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_csCurrIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_csCurrIDChanged()
    End Sub
    Partial Private Sub Onml_SupIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_SupIDChanged()
    End Sub
    Partial Private Sub Onml_CusIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_CusIDChanged()
    End Sub
    Partial Private Sub Onml_currencyIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_currencyIDChanged()
    End Sub
    Partial Private Sub Onml_UserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_UserIDChanged()
    End Sub
    Partial Private Sub OndateModifiedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndateModifiedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_csCurrID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_csCurrID() As Integer
		Get
			Return Me._ml_csCurrID
		End Get
		Set
			If ((Me._ml_csCurrID = value)  _
						= false) Then
				Me.Onml_csCurrIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_csCurrID = value
				Me.SendPropertyChanged("ml_csCurrID")
				Me.Onml_csCurrIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_SupID", DbType:="Int")>  _
	Public Property ml_SupID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_SupID
		End Get
		Set
			If (Me._ml_SupID.Equals(value) = false) Then
				Me.Onml_SupIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_SupID = value
				Me.SendPropertyChanged("ml_SupID")
				Me.Onml_SupIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_CusID", DbType:="Int")>  _
	Public Property ml_CusID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_CusID
		End Get
		Set
			If (Me._ml_CusID.Equals(value) = false) Then
				Me.Onml_CusIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_CusID = value
				Me.SendPropertyChanged("ml_CusID")
				Me.Onml_CusIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_currencyID", DbType:="Int")>  _
	Public Property ml_currencyID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_currencyID
		End Get
		Set
			If (Me._ml_currencyID.Equals(value) = false) Then
				Me.Onml_currencyIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_currencyID = value
				Me.SendPropertyChanged("ml_currencyID")
				Me.Onml_currencyIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UserID", DbType:="Int")>  _
	Public Property ml_UserID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_UserID
		End Get
		Set
			If (Me._ml_UserID.Equals(value) = false) Then
				Me.Onml_UserIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_UserID = value
				Me.SendPropertyChanged("ml_UserID")
				Me.Onml_UserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dateModified", DbType:="DateTime")>  _
	Public Property dateModified() As System.Nullable(Of Date)
		Get
			Return Me._dateModified
		End Get
		Set
			If (Me._dateModified.Equals(value) = false) Then
				Me.OndateModifiedChanging(value)
				Me.SendPropertyChanging
				Me._dateModified = value
				Me.SendPropertyChanged("dateModified")
				Me.OndateModifiedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_Customer")>  _
Partial Public Class ml_Customer
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_CusID As Integer
	
	Private _ml_Customer As String
	
	Private _ml_cscID As System.Nullable(Of Integer)
	
	Private _ml_btID As System.Nullable(Of Integer)
	
	Private _ml_CountryID As System.Nullable(Of Integer)
	
	Private _ml_Street As String
	
	Private _ml_CityID As System.Nullable(Of Integer)
	
	Private _ml_TelNum As String
	
	Private _ml_FaxNum As String
	
	Private _ml_email As String
	
	Private _ml_ContactPerson As String
	
	Private _ml_ContactPersonNum As String
	
	Private _ml_CustomerProduct As String
	
	Private _ml_CurrencyID As System.Nullable(Of Integer)
	
	Private _ml_termID As System.Nullable(Of Integer)
	
	Private _ml_taxID As System.Nullable(Of Integer)
	
	Private _withInvoice As System.Nullable(Of Boolean)
	
	Private _ml_statID As System.Nullable(Of Integer)
	
	Private _ml_UserID As System.Nullable(Of Integer)
	
	Private _dateModified As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_CusIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_CusIDChanged()
    End Sub
    Partial Private Sub Onml_CustomerChanging(value As String)
    End Sub
    Partial Private Sub Onml_CustomerChanged()
    End Sub
    Partial Private Sub Onml_cscIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_cscIDChanged()
    End Sub
    Partial Private Sub Onml_btIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_btIDChanged()
    End Sub
    Partial Private Sub Onml_CountryIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_CountryIDChanged()
    End Sub
    Partial Private Sub Onml_StreetChanging(value As String)
    End Sub
    Partial Private Sub Onml_StreetChanged()
    End Sub
    Partial Private Sub Onml_CityIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_CityIDChanged()
    End Sub
    Partial Private Sub Onml_TelNumChanging(value As String)
    End Sub
    Partial Private Sub Onml_TelNumChanged()
    End Sub
    Partial Private Sub Onml_FaxNumChanging(value As String)
    End Sub
    Partial Private Sub Onml_FaxNumChanged()
    End Sub
    Partial Private Sub Onml_emailChanging(value As String)
    End Sub
    Partial Private Sub Onml_emailChanged()
    End Sub
    Partial Private Sub Onml_ContactPersonChanging(value As String)
    End Sub
    Partial Private Sub Onml_ContactPersonChanged()
    End Sub
    Partial Private Sub Onml_ContactPersonNumChanging(value As String)
    End Sub
    Partial Private Sub Onml_ContactPersonNumChanged()
    End Sub
    Partial Private Sub Onml_CustomerProductChanging(value As String)
    End Sub
    Partial Private Sub Onml_CustomerProductChanged()
    End Sub
    Partial Private Sub Onml_CurrencyIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_CurrencyIDChanged()
    End Sub
    Partial Private Sub Onml_termIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_termIDChanged()
    End Sub
    Partial Private Sub Onml_taxIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_taxIDChanged()
    End Sub
    Partial Private Sub OnwithInvoiceChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnwithInvoiceChanged()
    End Sub
    Partial Private Sub Onml_statIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_statIDChanged()
    End Sub
    Partial Private Sub Onml_UserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_UserIDChanged()
    End Sub
    Partial Private Sub OndateModifiedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndateModifiedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_CusID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_CusID() As Integer
		Get
			Return Me._ml_CusID
		End Get
		Set
			If ((Me._ml_CusID = value)  _
						= false) Then
				Me.Onml_CusIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_CusID = value
				Me.SendPropertyChanged("ml_CusID")
				Me.Onml_CusIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_Customer", DbType:="VarChar(50)")>  _
	Public Property ml_Customer() As String
		Get
			Return Me._ml_Customer
		End Get
		Set
			If (String.Equals(Me._ml_Customer, value) = false) Then
				Me.Onml_CustomerChanging(value)
				Me.SendPropertyChanging
				Me._ml_Customer = value
				Me.SendPropertyChanged("ml_Customer")
				Me.Onml_CustomerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_cscID", DbType:="Int")>  _
	Public Property ml_cscID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_cscID
		End Get
		Set
			If (Me._ml_cscID.Equals(value) = false) Then
				Me.Onml_cscIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_cscID = value
				Me.SendPropertyChanged("ml_cscID")
				Me.Onml_cscIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_btID", DbType:="Int")>  _
	Public Property ml_btID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_btID
		End Get
		Set
			If (Me._ml_btID.Equals(value) = false) Then
				Me.Onml_btIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_btID = value
				Me.SendPropertyChanged("ml_btID")
				Me.Onml_btIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_CountryID", DbType:="Int")>  _
	Public Property ml_CountryID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_CountryID
		End Get
		Set
			If (Me._ml_CountryID.Equals(value) = false) Then
				Me.Onml_CountryIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_CountryID = value
				Me.SendPropertyChanged("ml_CountryID")
				Me.Onml_CountryIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_Street", DbType:="VarChar(100)")>  _
	Public Property ml_Street() As String
		Get
			Return Me._ml_Street
		End Get
		Set
			If (String.Equals(Me._ml_Street, value) = false) Then
				Me.Onml_StreetChanging(value)
				Me.SendPropertyChanging
				Me._ml_Street = value
				Me.SendPropertyChanged("ml_Street")
				Me.Onml_StreetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_CityID", DbType:="Int")>  _
	Public Property ml_CityID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_CityID
		End Get
		Set
			If (Me._ml_CityID.Equals(value) = false) Then
				Me.Onml_CityIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_CityID = value
				Me.SendPropertyChanged("ml_CityID")
				Me.Onml_CityIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_TelNum", DbType:="VarChar(20)")>  _
	Public Property ml_TelNum() As String
		Get
			Return Me._ml_TelNum
		End Get
		Set
			If (String.Equals(Me._ml_TelNum, value) = false) Then
				Me.Onml_TelNumChanging(value)
				Me.SendPropertyChanging
				Me._ml_TelNum = value
				Me.SendPropertyChanged("ml_TelNum")
				Me.Onml_TelNumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_FaxNum", DbType:="VarChar(20)")>  _
	Public Property ml_FaxNum() As String
		Get
			Return Me._ml_FaxNum
		End Get
		Set
			If (String.Equals(Me._ml_FaxNum, value) = false) Then
				Me.Onml_FaxNumChanging(value)
				Me.SendPropertyChanging
				Me._ml_FaxNum = value
				Me.SendPropertyChanged("ml_FaxNum")
				Me.Onml_FaxNumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_email", DbType:="VarChar(50)")>  _
	Public Property ml_email() As String
		Get
			Return Me._ml_email
		End Get
		Set
			If (String.Equals(Me._ml_email, value) = false) Then
				Me.Onml_emailChanging(value)
				Me.SendPropertyChanging
				Me._ml_email = value
				Me.SendPropertyChanged("ml_email")
				Me.Onml_emailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_ContactPerson", DbType:="VarChar(100)")>  _
	Public Property ml_ContactPerson() As String
		Get
			Return Me._ml_ContactPerson
		End Get
		Set
			If (String.Equals(Me._ml_ContactPerson, value) = false) Then
				Me.Onml_ContactPersonChanging(value)
				Me.SendPropertyChanging
				Me._ml_ContactPerson = value
				Me.SendPropertyChanged("ml_ContactPerson")
				Me.Onml_ContactPersonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_ContactPersonNum", DbType:="VarChar(50)")>  _
	Public Property ml_ContactPersonNum() As String
		Get
			Return Me._ml_ContactPersonNum
		End Get
		Set
			If (String.Equals(Me._ml_ContactPersonNum, value) = false) Then
				Me.Onml_ContactPersonNumChanging(value)
				Me.SendPropertyChanging
				Me._ml_ContactPersonNum = value
				Me.SendPropertyChanged("ml_ContactPersonNum")
				Me.Onml_ContactPersonNumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_CustomerProduct", DbType:="VarChar(500)")>  _
	Public Property ml_CustomerProduct() As String
		Get
			Return Me._ml_CustomerProduct
		End Get
		Set
			If (String.Equals(Me._ml_CustomerProduct, value) = false) Then
				Me.Onml_CustomerProductChanging(value)
				Me.SendPropertyChanging
				Me._ml_CustomerProduct = value
				Me.SendPropertyChanged("ml_CustomerProduct")
				Me.Onml_CustomerProductChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_CurrencyID", DbType:="Int")>  _
	Public Property ml_CurrencyID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_CurrencyID
		End Get
		Set
			If (Me._ml_CurrencyID.Equals(value) = false) Then
				Me.Onml_CurrencyIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_CurrencyID = value
				Me.SendPropertyChanged("ml_CurrencyID")
				Me.Onml_CurrencyIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_termID", DbType:="Int")>  _
	Public Property ml_termID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_termID
		End Get
		Set
			If (Me._ml_termID.Equals(value) = false) Then
				Me.Onml_termIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_termID = value
				Me.SendPropertyChanged("ml_termID")
				Me.Onml_termIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_taxID", DbType:="Int")>  _
	Public Property ml_taxID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_taxID
		End Get
		Set
			If (Me._ml_taxID.Equals(value) = false) Then
				Me.Onml_taxIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_taxID = value
				Me.SendPropertyChanged("ml_taxID")
				Me.Onml_taxIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_withInvoice", DbType:="Bit")>  _
	Public Property withInvoice() As System.Nullable(Of Boolean)
		Get
			Return Me._withInvoice
		End Get
		Set
			If (Me._withInvoice.Equals(value) = false) Then
				Me.OnwithInvoiceChanging(value)
				Me.SendPropertyChanging
				Me._withInvoice = value
				Me.SendPropertyChanged("withInvoice")
				Me.OnwithInvoiceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_statID", DbType:="Int")>  _
	Public Property ml_statID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_statID
		End Get
		Set
			If (Me._ml_statID.Equals(value) = false) Then
				Me.Onml_statIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_statID = value
				Me.SendPropertyChanged("ml_statID")
				Me.Onml_statIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UserID", DbType:="Int")>  _
	Public Property ml_UserID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_UserID
		End Get
		Set
			If (Me._ml_UserID.Equals(value) = false) Then
				Me.Onml_UserIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_UserID = value
				Me.SendPropertyChanged("ml_UserID")
				Me.Onml_UserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dateModified", DbType:="DateTime")>  _
	Public Property dateModified() As System.Nullable(Of Date)
		Get
			Return Me._dateModified
		End Get
		Set
			If (Me._dateModified.Equals(value) = false) Then
				Me.OndateModifiedChanging(value)
				Me.SendPropertyChanging
				Me._dateModified = value
				Me.SendPropertyChanged("dateModified")
				Me.OndateModifiedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_MasterCompany")>  _
Partial Public Class ml_MasterCompany
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_mcID As Integer
	
	Private _ml_mc As String
	
	Private _ml_mcCode As String
	
	Private _ml_StatID As System.Nullable(Of Integer)
	
	Private _ml_UserID As System.Nullable(Of Integer)
	
	Private _dateModified As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_mcIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_mcIDChanged()
    End Sub
    Partial Private Sub Onml_mcChanging(value As String)
    End Sub
    Partial Private Sub Onml_mcChanged()
    End Sub
    Partial Private Sub Onml_mcCodeChanging(value As String)
    End Sub
    Partial Private Sub Onml_mcCodeChanged()
    End Sub
    Partial Private Sub Onml_StatIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_StatIDChanged()
    End Sub
    Partial Private Sub Onml_UserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_UserIDChanged()
    End Sub
    Partial Private Sub OndateModifiedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndateModifiedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_mcID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_mcID() As Integer
		Get
			Return Me._ml_mcID
		End Get
		Set
			If ((Me._ml_mcID = value)  _
						= false) Then
				Me.Onml_mcIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_mcID = value
				Me.SendPropertyChanged("ml_mcID")
				Me.Onml_mcIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_mc", DbType:="VarChar(100)")>  _
	Public Property ml_mc() As String
		Get
			Return Me._ml_mc
		End Get
		Set
			If (String.Equals(Me._ml_mc, value) = false) Then
				Me.Onml_mcChanging(value)
				Me.SendPropertyChanging
				Me._ml_mc = value
				Me.SendPropertyChanged("ml_mc")
				Me.Onml_mcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_mcCode", DbType:="VarChar(50)")>  _
	Public Property ml_mcCode() As String
		Get
			Return Me._ml_mcCode
		End Get
		Set
			If (String.Equals(Me._ml_mcCode, value) = false) Then
				Me.Onml_mcCodeChanging(value)
				Me.SendPropertyChanging
				Me._ml_mcCode = value
				Me.SendPropertyChanged("ml_mcCode")
				Me.Onml_mcCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_StatID", DbType:="Int")>  _
	Public Property ml_StatID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_StatID
		End Get
		Set
			If (Me._ml_StatID.Equals(value) = false) Then
				Me.Onml_StatIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_StatID = value
				Me.SendPropertyChanged("ml_StatID")
				Me.Onml_StatIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UserID", DbType:="Int")>  _
	Public Property ml_UserID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_UserID
		End Get
		Set
			If (Me._ml_UserID.Equals(value) = false) Then
				Me.Onml_UserIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_UserID = value
				Me.SendPropertyChanged("ml_UserID")
				Me.Onml_UserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dateModified", DbType:="DateTime")>  _
	Public Property dateModified() As System.Nullable(Of Date)
		Get
			Return Me._dateModified
		End Get
		Set
			If (Me._dateModified.Equals(value) = false) Then
				Me.OndateModifiedChanging(value)
				Me.SendPropertyChanging
				Me._dateModified = value
				Me.SendPropertyChanged("dateModified")
				Me.OndateModifiedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_Position")>  _
Partial Public Class ml_Position
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_pID As Integer
	
	Private _ml_Position As String
	
	Private _ml_StatID As System.Nullable(Of Integer)
	
	Private _ml_UserID As System.Nullable(Of Integer)
	
	Private _dateModified As System.Nullable(Of Date)
	
	Private _ml_baseID As System.Nullable(Of Integer)
	
	Private _ml_groupNum As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_pIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_pIDChanged()
    End Sub
    Partial Private Sub Onml_PositionChanging(value As String)
    End Sub
    Partial Private Sub Onml_PositionChanged()
    End Sub
    Partial Private Sub Onml_StatIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_StatIDChanged()
    End Sub
    Partial Private Sub Onml_UserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_UserIDChanged()
    End Sub
    Partial Private Sub OndateModifiedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndateModifiedChanged()
    End Sub
    Partial Private Sub Onml_baseIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_baseIDChanged()
    End Sub
    Partial Private Sub Onml_groupNumChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_groupNumChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_pID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_pID() As Integer
		Get
			Return Me._ml_pID
		End Get
		Set
			If ((Me._ml_pID = value)  _
						= false) Then
				Me.Onml_pIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_pID = value
				Me.SendPropertyChanged("ml_pID")
				Me.Onml_pIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_Position", DbType:="VarChar(100)")>  _
	Public Property ml_Position() As String
		Get
			Return Me._ml_Position
		End Get
		Set
			If (String.Equals(Me._ml_Position, value) = false) Then
				Me.Onml_PositionChanging(value)
				Me.SendPropertyChanging
				Me._ml_Position = value
				Me.SendPropertyChanged("ml_Position")
				Me.Onml_PositionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_StatID", DbType:="Int")>  _
	Public Property ml_StatID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_StatID
		End Get
		Set
			If (Me._ml_StatID.Equals(value) = false) Then
				Me.Onml_StatIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_StatID = value
				Me.SendPropertyChanged("ml_StatID")
				Me.Onml_StatIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UserID", DbType:="Int")>  _
	Public Property ml_UserID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_UserID
		End Get
		Set
			If (Me._ml_UserID.Equals(value) = false) Then
				Me.Onml_UserIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_UserID = value
				Me.SendPropertyChanged("ml_UserID")
				Me.Onml_UserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dateModified", DbType:="DateTime")>  _
	Public Property dateModified() As System.Nullable(Of Date)
		Get
			Return Me._dateModified
		End Get
		Set
			If (Me._dateModified.Equals(value) = false) Then
				Me.OndateModifiedChanging(value)
				Me.SendPropertyChanging
				Me._dateModified = value
				Me.SendPropertyChanged("dateModified")
				Me.OndateModifiedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_baseID", DbType:="Int")>  _
	Public Property ml_baseID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_baseID
		End Get
		Set
			If (Me._ml_baseID.Equals(value) = false) Then
				Me.Onml_baseIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_baseID = value
				Me.SendPropertyChanged("ml_baseID")
				Me.Onml_baseIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_groupNum", DbType:="Int")>  _
	Public Property ml_groupNum() As System.Nullable(Of Integer)
		Get
			Return Me._ml_groupNum
		End Get
		Set
			If (Me._ml_groupNum.Equals(value) = false) Then
				Me.Onml_groupNumChanging(value)
				Me.SendPropertyChanging
				Me._ml_groupNum = value
				Me.SendPropertyChanged("ml_groupNum")
				Me.Onml_groupNumChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_reusability")>  _
Partial Public Class ml_reusability
	
	Private _ml_reusable As Integer
	
	Private _ml_reuseDesc As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_reusable", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property ml_reusable() As Integer
		Get
			Return Me._ml_reusable
		End Get
		Set
			If ((Me._ml_reusable = value)  _
						= false) Then
				Me._ml_reusable = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_reuseDesc", DbType:="VarChar(10)")>  _
	Public Property ml_reuseDesc() As String
		Get
			Return Me._ml_reuseDesc
		End Get
		Set
			If (String.Equals(Me._ml_reuseDesc, value) = false) Then
				Me._ml_reuseDesc = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_Status")>  _
Partial Public Class ml_Status
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_StatID As Integer
	
	Private _ml_Status As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_StatIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_StatIDChanged()
    End Sub
    Partial Private Sub Onml_StatusChanging(value As String)
    End Sub
    Partial Private Sub Onml_StatusChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_StatID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_StatID() As Integer
		Get
			Return Me._ml_StatID
		End Get
		Set
			If ((Me._ml_StatID = value)  _
						= false) Then
				Me.Onml_StatIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_StatID = value
				Me.SendPropertyChanged("ml_StatID")
				Me.Onml_StatIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_Status", DbType:="VarChar(10)")>  _
	Public Property ml_Status() As String
		Get
			Return Me._ml_Status
		End Get
		Set
			If (String.Equals(Me._ml_Status, value) = false) Then
				Me.Onml_StatusChanging(value)
				Me.SendPropertyChanging
				Me._ml_Status = value
				Me.SendPropertyChanged("ml_Status")
				Me.Onml_StatusChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_Street")>  _
Partial Public Class ml_Street
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_StreetID As Integer
	
	Private _ml_Street As String
	
	Private _ml_CityID As System.Nullable(Of Integer)
	
	Private _ml_UserId As System.Nullable(Of Integer)
	
	Private _dateModified As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_StreetIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_StreetIDChanged()
    End Sub
    Partial Private Sub Onml_StreetChanging(value As String)
    End Sub
    Partial Private Sub Onml_StreetChanged()
    End Sub
    Partial Private Sub Onml_CityIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_CityIDChanged()
    End Sub
    Partial Private Sub Onml_UserIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_UserIdChanged()
    End Sub
    Partial Private Sub OndateModifiedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndateModifiedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_StreetID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_StreetID() As Integer
		Get
			Return Me._ml_StreetID
		End Get
		Set
			If ((Me._ml_StreetID = value)  _
						= false) Then
				Me.Onml_StreetIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_StreetID = value
				Me.SendPropertyChanged("ml_StreetID")
				Me.Onml_StreetIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_Street", DbType:="VarChar(1000)")>  _
	Public Property ml_Street() As String
		Get
			Return Me._ml_Street
		End Get
		Set
			If (String.Equals(Me._ml_Street, value) = false) Then
				Me.Onml_StreetChanging(value)
				Me.SendPropertyChanging
				Me._ml_Street = value
				Me.SendPropertyChanged("ml_Street")
				Me.Onml_StreetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_CityID", DbType:="Int")>  _
	Public Property ml_CityID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_CityID
		End Get
		Set
			If (Me._ml_CityID.Equals(value) = false) Then
				Me.Onml_CityIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_CityID = value
				Me.SendPropertyChanged("ml_CityID")
				Me.Onml_CityIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UserId", DbType:="Int")>  _
	Public Property ml_UserId() As System.Nullable(Of Integer)
		Get
			Return Me._ml_UserId
		End Get
		Set
			If (Me._ml_UserId.Equals(value) = false) Then
				Me.Onml_UserIdChanging(value)
				Me.SendPropertyChanging
				Me._ml_UserId = value
				Me.SendPropertyChanged("ml_UserId")
				Me.Onml_UserIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dateModified", DbType:="DateTime")>  _
	Public Property dateModified() As System.Nullable(Of Date)
		Get
			Return Me._dateModified
		End Get
		Set
			If (Me._dateModified.Equals(value) = false) Then
				Me.OndateModifiedChanging(value)
				Me.SendPropertyChanging
				Me._dateModified = value
				Me.SendPropertyChanged("dateModified")
				Me.OndateModifiedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ML_SULLIER_20170329")>  _
Partial Public Class ML_SULLIER_20170329
	
	Private _ml_SupID As Integer
	
	Private _ml_Supplier As String
	
	Private _ml_countryID As System.Nullable(Of Integer)
	
	Private _ml_cscID As System.Nullable(Of Integer)
	
	Private _ml_supCatID As System.Nullable(Of Integer)
	
	Private _ml_Street As String
	
	Private _ml_CityID As System.Nullable(Of Integer)
	
	Private _ml_btID As System.Nullable(Of Integer)
	
	Private _ml_TelNum As String
	
	Private _ml_FaxNum As String
	
	Private _ml_email As String
	
	Private _ml_ContactPerson As String
	
	Private _ml_ContactPersonNum As String
	
	Private _ml_SupplierProduct As String
	
	Private _ml_currencyID As System.Nullable(Of Integer)
	
	Private _ml_termID As System.Nullable(Of Integer)
	
	Private _ml_taxID As System.Nullable(Of Integer)
	
	Private _ml_UserID As System.Nullable(Of Integer)
	
	Private _ml_statID As System.Nullable(Of Integer)
	
	Private _withInv As System.Nullable(Of Boolean)
	
	Private _dateModified As System.Nullable(Of Date)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_SupID", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property ml_SupID() As Integer
		Get
			Return Me._ml_SupID
		End Get
		Set
			If ((Me._ml_SupID = value)  _
						= false) Then
				Me._ml_SupID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_Supplier", DbType:="VarChar(100)")>  _
	Public Property ml_Supplier() As String
		Get
			Return Me._ml_Supplier
		End Get
		Set
			If (String.Equals(Me._ml_Supplier, value) = false) Then
				Me._ml_Supplier = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_countryID", DbType:="Int")>  _
	Public Property ml_countryID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_countryID
		End Get
		Set
			If (Me._ml_countryID.Equals(value) = false) Then
				Me._ml_countryID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_cscID", DbType:="Int")>  _
	Public Property ml_cscID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_cscID
		End Get
		Set
			If (Me._ml_cscID.Equals(value) = false) Then
				Me._ml_cscID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_supCatID", DbType:="Int")>  _
	Public Property ml_supCatID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_supCatID
		End Get
		Set
			If (Me._ml_supCatID.Equals(value) = false) Then
				Me._ml_supCatID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_Street", DbType:="VarChar(100)")>  _
	Public Property ml_Street() As String
		Get
			Return Me._ml_Street
		End Get
		Set
			If (String.Equals(Me._ml_Street, value) = false) Then
				Me._ml_Street = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_CityID", DbType:="Int")>  _
	Public Property ml_CityID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_CityID
		End Get
		Set
			If (Me._ml_CityID.Equals(value) = false) Then
				Me._ml_CityID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_btID", DbType:="Int")>  _
	Public Property ml_btID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_btID
		End Get
		Set
			If (Me._ml_btID.Equals(value) = false) Then
				Me._ml_btID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_TelNum", DbType:="VarChar(20)")>  _
	Public Property ml_TelNum() As String
		Get
			Return Me._ml_TelNum
		End Get
		Set
			If (String.Equals(Me._ml_TelNum, value) = false) Then
				Me._ml_TelNum = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_FaxNum", DbType:="VarChar(20)")>  _
	Public Property ml_FaxNum() As String
		Get
			Return Me._ml_FaxNum
		End Get
		Set
			If (String.Equals(Me._ml_FaxNum, value) = false) Then
				Me._ml_FaxNum = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_email", DbType:="VarChar(50)")>  _
	Public Property ml_email() As String
		Get
			Return Me._ml_email
		End Get
		Set
			If (String.Equals(Me._ml_email, value) = false) Then
				Me._ml_email = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_ContactPerson", DbType:="VarChar(50)")>  _
	Public Property ml_ContactPerson() As String
		Get
			Return Me._ml_ContactPerson
		End Get
		Set
			If (String.Equals(Me._ml_ContactPerson, value) = false) Then
				Me._ml_ContactPerson = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_ContactPersonNum", DbType:="VarChar(20)")>  _
	Public Property ml_ContactPersonNum() As String
		Get
			Return Me._ml_ContactPersonNum
		End Get
		Set
			If (String.Equals(Me._ml_ContactPersonNum, value) = false) Then
				Me._ml_ContactPersonNum = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_SupplierProduct", DbType:="VarChar(500)")>  _
	Public Property ml_SupplierProduct() As String
		Get
			Return Me._ml_SupplierProduct
		End Get
		Set
			If (String.Equals(Me._ml_SupplierProduct, value) = false) Then
				Me._ml_SupplierProduct = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_currencyID", DbType:="Int")>  _
	Public Property ml_currencyID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_currencyID
		End Get
		Set
			If (Me._ml_currencyID.Equals(value) = false) Then
				Me._ml_currencyID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_termID", DbType:="Int")>  _
	Public Property ml_termID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_termID
		End Get
		Set
			If (Me._ml_termID.Equals(value) = false) Then
				Me._ml_termID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_taxID", DbType:="Int")>  _
	Public Property ml_taxID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_taxID
		End Get
		Set
			If (Me._ml_taxID.Equals(value) = false) Then
				Me._ml_taxID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UserID", DbType:="Int")>  _
	Public Property ml_UserID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_UserID
		End Get
		Set
			If (Me._ml_UserID.Equals(value) = false) Then
				Me._ml_UserID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_statID", DbType:="Int")>  _
	Public Property ml_statID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_statID
		End Get
		Set
			If (Me._ml_statID.Equals(value) = false) Then
				Me._ml_statID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_withInv", DbType:="Bit")>  _
	Public Property withInv() As System.Nullable(Of Boolean)
		Get
			Return Me._withInv
		End Get
		Set
			If (Me._withInv.Equals(value) = false) Then
				Me._withInv = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dateModified", DbType:="DateTime")>  _
	Public Property dateModified() As System.Nullable(Of Date)
		Get
			Return Me._dateModified
		End Get
		Set
			If (Me._dateModified.Equals(value) = false) Then
				Me._dateModified = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_Supplier")>  _
Partial Public Class ml_Supplier
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_SupID As Integer
	
	Private _ml_Supplier As String
	
	Private _ml_countryID As System.Nullable(Of Integer)
	
	Private _ml_cscID As System.Nullable(Of Integer)
	
	Private _ml_supCatID As System.Nullable(Of Integer)
	
	Private _ml_Street As String
	
	Private _ml_CityID As System.Nullable(Of Integer)
	
	Private _ml_btID As System.Nullable(Of Integer)
	
	Private _ml_TelNum As String
	
	Private _ml_FaxNum As String
	
	Private _ml_email As String
	
	Private _ml_ContactPerson As String
	
	Private _ml_ContactPersonNum As String
	
	Private _ml_SupplierProduct As String
	
	Private _ml_currencyID As System.Nullable(Of Integer)
	
	Private _ml_termID As System.Nullable(Of Integer)
	
	Private _ml_taxID As System.Nullable(Of Integer)
	
	Private _ml_UserID As System.Nullable(Of Integer)
	
	Private _ml_statID As System.Nullable(Of Integer)
	
	Private _withInv As System.Nullable(Of Boolean)
	
	Private _dateModified As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_SupIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_SupIDChanged()
    End Sub
    Partial Private Sub Onml_SupplierChanging(value As String)
    End Sub
    Partial Private Sub Onml_SupplierChanged()
    End Sub
    Partial Private Sub Onml_countryIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_countryIDChanged()
    End Sub
    Partial Private Sub Onml_cscIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_cscIDChanged()
    End Sub
    Partial Private Sub Onml_supCatIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_supCatIDChanged()
    End Sub
    Partial Private Sub Onml_StreetChanging(value As String)
    End Sub
    Partial Private Sub Onml_StreetChanged()
    End Sub
    Partial Private Sub Onml_CityIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_CityIDChanged()
    End Sub
    Partial Private Sub Onml_btIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_btIDChanged()
    End Sub
    Partial Private Sub Onml_TelNumChanging(value As String)
    End Sub
    Partial Private Sub Onml_TelNumChanged()
    End Sub
    Partial Private Sub Onml_FaxNumChanging(value As String)
    End Sub
    Partial Private Sub Onml_FaxNumChanged()
    End Sub
    Partial Private Sub Onml_emailChanging(value As String)
    End Sub
    Partial Private Sub Onml_emailChanged()
    End Sub
    Partial Private Sub Onml_ContactPersonChanging(value As String)
    End Sub
    Partial Private Sub Onml_ContactPersonChanged()
    End Sub
    Partial Private Sub Onml_ContactPersonNumChanging(value As String)
    End Sub
    Partial Private Sub Onml_ContactPersonNumChanged()
    End Sub
    Partial Private Sub Onml_SupplierProductChanging(value As String)
    End Sub
    Partial Private Sub Onml_SupplierProductChanged()
    End Sub
    Partial Private Sub Onml_currencyIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_currencyIDChanged()
    End Sub
    Partial Private Sub Onml_termIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_termIDChanged()
    End Sub
    Partial Private Sub Onml_taxIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_taxIDChanged()
    End Sub
    Partial Private Sub Onml_UserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_UserIDChanged()
    End Sub
    Partial Private Sub Onml_statIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_statIDChanged()
    End Sub
    Partial Private Sub OnwithInvChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnwithInvChanged()
    End Sub
    Partial Private Sub OndateModifiedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndateModifiedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_SupID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_SupID() As Integer
		Get
			Return Me._ml_SupID
		End Get
		Set
			If ((Me._ml_SupID = value)  _
						= false) Then
				Me.Onml_SupIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_SupID = value
				Me.SendPropertyChanged("ml_SupID")
				Me.Onml_SupIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_Supplier", DbType:="VarChar(100)")>  _
	Public Property ml_Supplier() As String
		Get
			Return Me._ml_Supplier
		End Get
		Set
			If (String.Equals(Me._ml_Supplier, value) = false) Then
				Me.Onml_SupplierChanging(value)
				Me.SendPropertyChanging
				Me._ml_Supplier = value
				Me.SendPropertyChanged("ml_Supplier")
				Me.Onml_SupplierChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_countryID", DbType:="Int")>  _
	Public Property ml_countryID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_countryID
		End Get
		Set
			If (Me._ml_countryID.Equals(value) = false) Then
				Me.Onml_countryIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_countryID = value
				Me.SendPropertyChanged("ml_countryID")
				Me.Onml_countryIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_cscID", DbType:="Int")>  _
	Public Property ml_cscID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_cscID
		End Get
		Set
			If (Me._ml_cscID.Equals(value) = false) Then
				Me.Onml_cscIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_cscID = value
				Me.SendPropertyChanged("ml_cscID")
				Me.Onml_cscIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_supCatID", DbType:="Int")>  _
	Public Property ml_supCatID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_supCatID
		End Get
		Set
			If (Me._ml_supCatID.Equals(value) = false) Then
				Me.Onml_supCatIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_supCatID = value
				Me.SendPropertyChanged("ml_supCatID")
				Me.Onml_supCatIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_Street", DbType:="VarChar(100)")>  _
	Public Property ml_Street() As String
		Get
			Return Me._ml_Street
		End Get
		Set
			If (String.Equals(Me._ml_Street, value) = false) Then
				Me.Onml_StreetChanging(value)
				Me.SendPropertyChanging
				Me._ml_Street = value
				Me.SendPropertyChanged("ml_Street")
				Me.Onml_StreetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_CityID", DbType:="Int")>  _
	Public Property ml_CityID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_CityID
		End Get
		Set
			If (Me._ml_CityID.Equals(value) = false) Then
				Me.Onml_CityIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_CityID = value
				Me.SendPropertyChanged("ml_CityID")
				Me.Onml_CityIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_btID", DbType:="Int")>  _
	Public Property ml_btID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_btID
		End Get
		Set
			If (Me._ml_btID.Equals(value) = false) Then
				Me.Onml_btIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_btID = value
				Me.SendPropertyChanged("ml_btID")
				Me.Onml_btIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_TelNum", DbType:="VarChar(20)")>  _
	Public Property ml_TelNum() As String
		Get
			Return Me._ml_TelNum
		End Get
		Set
			If (String.Equals(Me._ml_TelNum, value) = false) Then
				Me.Onml_TelNumChanging(value)
				Me.SendPropertyChanging
				Me._ml_TelNum = value
				Me.SendPropertyChanged("ml_TelNum")
				Me.Onml_TelNumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_FaxNum", DbType:="VarChar(20)")>  _
	Public Property ml_FaxNum() As String
		Get
			Return Me._ml_FaxNum
		End Get
		Set
			If (String.Equals(Me._ml_FaxNum, value) = false) Then
				Me.Onml_FaxNumChanging(value)
				Me.SendPropertyChanging
				Me._ml_FaxNum = value
				Me.SendPropertyChanged("ml_FaxNum")
				Me.Onml_FaxNumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_email", DbType:="VarChar(50)")>  _
	Public Property ml_email() As String
		Get
			Return Me._ml_email
		End Get
		Set
			If (String.Equals(Me._ml_email, value) = false) Then
				Me.Onml_emailChanging(value)
				Me.SendPropertyChanging
				Me._ml_email = value
				Me.SendPropertyChanged("ml_email")
				Me.Onml_emailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_ContactPerson", DbType:="VarChar(50)")>  _
	Public Property ml_ContactPerson() As String
		Get
			Return Me._ml_ContactPerson
		End Get
		Set
			If (String.Equals(Me._ml_ContactPerson, value) = false) Then
				Me.Onml_ContactPersonChanging(value)
				Me.SendPropertyChanging
				Me._ml_ContactPerson = value
				Me.SendPropertyChanged("ml_ContactPerson")
				Me.Onml_ContactPersonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_ContactPersonNum", DbType:="VarChar(20)")>  _
	Public Property ml_ContactPersonNum() As String
		Get
			Return Me._ml_ContactPersonNum
		End Get
		Set
			If (String.Equals(Me._ml_ContactPersonNum, value) = false) Then
				Me.Onml_ContactPersonNumChanging(value)
				Me.SendPropertyChanging
				Me._ml_ContactPersonNum = value
				Me.SendPropertyChanged("ml_ContactPersonNum")
				Me.Onml_ContactPersonNumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_SupplierProduct", DbType:="VarChar(500)")>  _
	Public Property ml_SupplierProduct() As String
		Get
			Return Me._ml_SupplierProduct
		End Get
		Set
			If (String.Equals(Me._ml_SupplierProduct, value) = false) Then
				Me.Onml_SupplierProductChanging(value)
				Me.SendPropertyChanging
				Me._ml_SupplierProduct = value
				Me.SendPropertyChanged("ml_SupplierProduct")
				Me.Onml_SupplierProductChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_currencyID", DbType:="Int")>  _
	Public Property ml_currencyID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_currencyID
		End Get
		Set
			If (Me._ml_currencyID.Equals(value) = false) Then
				Me.Onml_currencyIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_currencyID = value
				Me.SendPropertyChanged("ml_currencyID")
				Me.Onml_currencyIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_termID", DbType:="Int")>  _
	Public Property ml_termID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_termID
		End Get
		Set
			If (Me._ml_termID.Equals(value) = false) Then
				Me.Onml_termIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_termID = value
				Me.SendPropertyChanged("ml_termID")
				Me.Onml_termIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_taxID", DbType:="Int")>  _
	Public Property ml_taxID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_taxID
		End Get
		Set
			If (Me._ml_taxID.Equals(value) = false) Then
				Me.Onml_taxIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_taxID = value
				Me.SendPropertyChanged("ml_taxID")
				Me.Onml_taxIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UserID", DbType:="Int")>  _
	Public Property ml_UserID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_UserID
		End Get
		Set
			If (Me._ml_UserID.Equals(value) = false) Then
				Me.Onml_UserIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_UserID = value
				Me.SendPropertyChanged("ml_UserID")
				Me.Onml_UserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_statID", DbType:="Int")>  _
	Public Property ml_statID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_statID
		End Get
		Set
			If (Me._ml_statID.Equals(value) = false) Then
				Me.Onml_statIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_statID = value
				Me.SendPropertyChanged("ml_statID")
				Me.Onml_statIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_withInv", DbType:="Bit")>  _
	Public Property withInv() As System.Nullable(Of Boolean)
		Get
			Return Me._withInv
		End Get
		Set
			If (Me._withInv.Equals(value) = false) Then
				Me.OnwithInvChanging(value)
				Me.SendPropertyChanging
				Me._withInv = value
				Me.SendPropertyChanged("withInv")
				Me.OnwithInvChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dateModified", DbType:="DateTime")>  _
	Public Property dateModified() As System.Nullable(Of Date)
		Get
			Return Me._dateModified
		End Get
		Set
			If (Me._dateModified.Equals(value) = false) Then
				Me.OndateModifiedChanging(value)
				Me.SendPropertyChanging
				Me._dateModified = value
				Me.SendPropertyChanged("dateModified")
				Me.OndateModifiedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_SupplierCategory")>  _
Partial Public Class ml_SupplierCategory
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_supCatID As Integer
	
	Private _ml_supCat As String
	
	Private _ml_UserID As System.Nullable(Of Integer)
	
	Private _dateModified As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_supCatIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_supCatIDChanged()
    End Sub
    Partial Private Sub Onml_supCatChanging(value As String)
    End Sub
    Partial Private Sub Onml_supCatChanged()
    End Sub
    Partial Private Sub Onml_UserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_UserIDChanged()
    End Sub
    Partial Private Sub OndateModifiedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndateModifiedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_supCatID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_supCatID() As Integer
		Get
			Return Me._ml_supCatID
		End Get
		Set
			If ((Me._ml_supCatID = value)  _
						= false) Then
				Me.Onml_supCatIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_supCatID = value
				Me.SendPropertyChanged("ml_supCatID")
				Me.Onml_supCatIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_supCat", DbType:="VarChar(50)")>  _
	Public Property ml_supCat() As String
		Get
			Return Me._ml_supCat
		End Get
		Set
			If (String.Equals(Me._ml_supCat, value) = false) Then
				Me.Onml_supCatChanging(value)
				Me.SendPropertyChanging
				Me._ml_supCat = value
				Me.SendPropertyChanged("ml_supCat")
				Me.Onml_supCatChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UserID", DbType:="Int")>  _
	Public Property ml_UserID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_UserID
		End Get
		Set
			If (Me._ml_UserID.Equals(value) = false) Then
				Me.Onml_UserIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_UserID = value
				Me.SendPropertyChanged("ml_UserID")
				Me.Onml_UserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dateModified", DbType:="DateTime")>  _
	Public Property dateModified() As System.Nullable(Of Date)
		Get
			Return Me._dateModified
		End Get
		Set
			If (Me._dateModified.Equals(value) = false) Then
				Me.OndateModifiedChanging(value)
				Me.SendPropertyChanging
				Me._dateModified = value
				Me.SendPropertyChanged("dateModified")
				Me.OndateModifiedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_System")>  _
Partial Public Class ml_System
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_SystemID As Integer
	
	Private _ml_System As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_SystemIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_SystemIDChanged()
    End Sub
    Partial Private Sub Onml_SystemChanging(value As String)
    End Sub
    Partial Private Sub Onml_SystemChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_SystemID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_SystemID() As Integer
		Get
			Return Me._ml_SystemID
		End Get
		Set
			If ((Me._ml_SystemID = value)  _
						= false) Then
				Me.Onml_SystemIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_SystemID = value
				Me.SendPropertyChanged("ml_SystemID")
				Me.Onml_SystemIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_System", DbType:="VarChar(100)")>  _
	Public Property ml_System() As String
		Get
			Return Me._ml_System
		End Get
		Set
			If (String.Equals(Me._ml_System, value) = false) Then
				Me.Onml_SystemChanging(value)
				Me.SendPropertyChanging
				Me._ml_System = value
				Me.SendPropertyChanged("ml_System")
				Me.Onml_SystemChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_Tax")>  _
Partial Public Class ml_Tax
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_taxID As Integer
	
	Private _taxName As String
	
	Private _taxValue As System.Nullable(Of Decimal)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_taxIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_taxIDChanged()
    End Sub
    Partial Private Sub OntaxNameChanging(value As String)
    End Sub
    Partial Private Sub OntaxNameChanged()
    End Sub
    Partial Private Sub OntaxValueChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OntaxValueChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_taxID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_taxID() As Integer
		Get
			Return Me._ml_taxID
		End Get
		Set
			If ((Me._ml_taxID = value)  _
						= false) Then
				Me.Onml_taxIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_taxID = value
				Me.SendPropertyChanged("ml_taxID")
				Me.Onml_taxIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_taxName", DbType:="VarChar(50)")>  _
	Public Property taxName() As String
		Get
			Return Me._taxName
		End Get
		Set
			If (String.Equals(Me._taxName, value) = false) Then
				Me.OntaxNameChanging(value)
				Me.SendPropertyChanging
				Me._taxName = value
				Me.SendPropertyChanged("taxName")
				Me.OntaxNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_taxValue", DbType:="Decimal(20,2)")>  _
	Public Property taxValue() As System.Nullable(Of Decimal)
		Get
			Return Me._taxValue
		End Get
		Set
			If (Me._taxValue.Equals(value) = false) Then
				Me.OntaxValueChanging(value)
				Me.SendPropertyChanging
				Me._taxValue = value
				Me.SendPropertyChanged("taxValue")
				Me.OntaxValueChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_Terms")>  _
Partial Public Class ml_Term
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_termID As Integer
	
	Private _terms As String
	
	Private _termValue As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_termIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_termIDChanged()
    End Sub
    Partial Private Sub OntermsChanging(value As String)
    End Sub
    Partial Private Sub OntermsChanged()
    End Sub
    Partial Private Sub OntermValueChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OntermValueChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_termID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_termID() As Integer
		Get
			Return Me._ml_termID
		End Get
		Set
			If ((Me._ml_termID = value)  _
						= false) Then
				Me.Onml_termIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_termID = value
				Me.SendPropertyChanged("ml_termID")
				Me.Onml_termIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_terms", DbType:="VarChar(50)")>  _
	Public Property terms() As String
		Get
			Return Me._terms
		End Get
		Set
			If (String.Equals(Me._terms, value) = false) Then
				Me.OntermsChanging(value)
				Me.SendPropertyChanging
				Me._terms = value
				Me.SendPropertyChanged("terms")
				Me.OntermsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_termValue", DbType:="Int")>  _
	Public Property termValue() As System.Nullable(Of Integer)
		Get
			Return Me._termValue
		End Get
		Set
			If (Me._termValue.Equals(value) = false) Then
				Me.OntermValueChanging(value)
				Me.SendPropertyChanging
				Me._termValue = value
				Me.SendPropertyChanged("termValue")
				Me.OntermValueChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_User")>  _
Partial Public Class ml_User
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_UserID As Integer
	
	Private _username As String
	
	Private _password As String
	
	Private _userLastname As String
	
	Private _userFirstname As String
	
	Private _userMname As String
	
	Private _ml_vID As System.Nullable(Of Integer)
	
	Private _ml_pID As System.Nullable(Of Integer)
	
	Private _ml_ulID As System.Nullable(Of Integer)
	
	Private _ml_utID As System.Nullable(Of Integer)
	
	Private _ml_UserID_Encode As System.Nullable(Of Integer)
	
	Private _ml_StatID As System.Nullable(Of Integer)
	
	Private _ml_AuthoCode As String
	
	Private _user_dateModified As System.Nullable(Of Date)
	
	Private _empRecID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_UserIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_UserIDChanged()
    End Sub
    Partial Private Sub OnusernameChanging(value As String)
    End Sub
    Partial Private Sub OnusernameChanged()
    End Sub
    Partial Private Sub OnpasswordChanging(value As String)
    End Sub
    Partial Private Sub OnpasswordChanged()
    End Sub
    Partial Private Sub OnuserLastnameChanging(value As String)
    End Sub
    Partial Private Sub OnuserLastnameChanged()
    End Sub
    Partial Private Sub OnuserFirstnameChanging(value As String)
    End Sub
    Partial Private Sub OnuserFirstnameChanged()
    End Sub
    Partial Private Sub OnuserMnameChanging(value As String)
    End Sub
    Partial Private Sub OnuserMnameChanged()
    End Sub
    Partial Private Sub Onml_vIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_vIDChanged()
    End Sub
    Partial Private Sub Onml_pIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_pIDChanged()
    End Sub
    Partial Private Sub Onml_ulIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_ulIDChanged()
    End Sub
    Partial Private Sub Onml_utIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_utIDChanged()
    End Sub
    Partial Private Sub Onml_UserID_EncodeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_UserID_EncodeChanged()
    End Sub
    Partial Private Sub Onml_StatIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_StatIDChanged()
    End Sub
    Partial Private Sub Onml_AuthoCodeChanging(value As String)
    End Sub
    Partial Private Sub Onml_AuthoCodeChanged()
    End Sub
    Partial Private Sub Onuser_dateModifiedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onuser_dateModifiedChanged()
    End Sub
    Partial Private Sub OnempRecIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnempRecIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UserID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_UserID() As Integer
		Get
			Return Me._ml_UserID
		End Get
		Set
			If ((Me._ml_UserID = value)  _
						= false) Then
				Me.Onml_UserIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_UserID = value
				Me.SendPropertyChanged("ml_UserID")
				Me.Onml_UserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_username", DbType:="VarChar(20)")>  _
	Public Property username() As String
		Get
			Return Me._username
		End Get
		Set
			If (String.Equals(Me._username, value) = false) Then
				Me.OnusernameChanging(value)
				Me.SendPropertyChanging
				Me._username = value
				Me.SendPropertyChanged("username")
				Me.OnusernameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_password", DbType:="VarChar(100)")>  _
	Public Property password() As String
		Get
			Return Me._password
		End Get
		Set
			If (String.Equals(Me._password, value) = false) Then
				Me.OnpasswordChanging(value)
				Me.SendPropertyChanging
				Me._password = value
				Me.SendPropertyChanged("password")
				Me.OnpasswordChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_userLastname", DbType:="VarChar(50)")>  _
	Public Property userLastname() As String
		Get
			Return Me._userLastname
		End Get
		Set
			If (String.Equals(Me._userLastname, value) = false) Then
				Me.OnuserLastnameChanging(value)
				Me.SendPropertyChanging
				Me._userLastname = value
				Me.SendPropertyChanged("userLastname")
				Me.OnuserLastnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_userFirstname", DbType:="VarChar(50)")>  _
	Public Property userFirstname() As String
		Get
			Return Me._userFirstname
		End Get
		Set
			If (String.Equals(Me._userFirstname, value) = false) Then
				Me.OnuserFirstnameChanging(value)
				Me.SendPropertyChanging
				Me._userFirstname = value
				Me.SendPropertyChanged("userFirstname")
				Me.OnuserFirstnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_userMname", DbType:="VarChar(50)")>  _
	Public Property userMname() As String
		Get
			Return Me._userMname
		End Get
		Set
			If (String.Equals(Me._userMname, value) = false) Then
				Me.OnuserMnameChanging(value)
				Me.SendPropertyChanging
				Me._userMname = value
				Me.SendPropertyChanged("userMname")
				Me.OnuserMnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vID", DbType:="Int")>  _
	Public Property ml_vID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_vID
		End Get
		Set
			If (Me._ml_vID.Equals(value) = false) Then
				Me.Onml_vIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_vID = value
				Me.SendPropertyChanged("ml_vID")
				Me.Onml_vIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_pID", DbType:="Int")>  _
	Public Property ml_pID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_pID
		End Get
		Set
			If (Me._ml_pID.Equals(value) = false) Then
				Me.Onml_pIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_pID = value
				Me.SendPropertyChanged("ml_pID")
				Me.Onml_pIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_ulID", DbType:="Int")>  _
	Public Property ml_ulID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_ulID
		End Get
		Set
			If (Me._ml_ulID.Equals(value) = false) Then
				Me.Onml_ulIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_ulID = value
				Me.SendPropertyChanged("ml_ulID")
				Me.Onml_ulIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_utID", DbType:="Int")>  _
	Public Property ml_utID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_utID
		End Get
		Set
			If (Me._ml_utID.Equals(value) = false) Then
				Me.Onml_utIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_utID = value
				Me.SendPropertyChanged("ml_utID")
				Me.Onml_utIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UserID_Encode", DbType:="Int")>  _
	Public Property ml_UserID_Encode() As System.Nullable(Of Integer)
		Get
			Return Me._ml_UserID_Encode
		End Get
		Set
			If (Me._ml_UserID_Encode.Equals(value) = false) Then
				Me.Onml_UserID_EncodeChanging(value)
				Me.SendPropertyChanging
				Me._ml_UserID_Encode = value
				Me.SendPropertyChanged("ml_UserID_Encode")
				Me.Onml_UserID_EncodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_StatID", DbType:="Int")>  _
	Public Property ml_StatID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_StatID
		End Get
		Set
			If (Me._ml_StatID.Equals(value) = false) Then
				Me.Onml_StatIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_StatID = value
				Me.SendPropertyChanged("ml_StatID")
				Me.Onml_StatIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_AuthoCode", DbType:="VarChar(50)")>  _
	Public Property ml_AuthoCode() As String
		Get
			Return Me._ml_AuthoCode
		End Get
		Set
			If (String.Equals(Me._ml_AuthoCode, value) = false) Then
				Me.Onml_AuthoCodeChanging(value)
				Me.SendPropertyChanging
				Me._ml_AuthoCode = value
				Me.SendPropertyChanged("ml_AuthoCode")
				Me.Onml_AuthoCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_user_dateModified", DbType:="DateTime")>  _
	Public Property user_dateModified() As System.Nullable(Of Date)
		Get
			Return Me._user_dateModified
		End Get
		Set
			If (Me._user_dateModified.Equals(value) = false) Then
				Me.Onuser_dateModifiedChanging(value)
				Me.SendPropertyChanging
				Me._user_dateModified = value
				Me.SendPropertyChanged("user_dateModified")
				Me.Onuser_dateModifiedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_empRecID", DbType:="Int")>  _
	Public Property empRecID() As System.Nullable(Of Integer)
		Get
			Return Me._empRecID
		End Get
		Set
			If (Me._empRecID.Equals(value) = false) Then
				Me.OnempRecIDChanging(value)
				Me.SendPropertyChanging
				Me._empRecID = value
				Me.SendPropertyChanged("empRecID")
				Me.OnempRecIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_UserAccessStat")>  _
Partial Public Class ml_UserAccessStat
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_UserAccessStat As Integer
	
	Private _ml_access As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_UserAccessStatChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_UserAccessStatChanged()
    End Sub
    Partial Private Sub Onml_accessChanging(value As String)
    End Sub
    Partial Private Sub Onml_accessChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UserAccessStat", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_UserAccessStat() As Integer
		Get
			Return Me._ml_UserAccessStat
		End Get
		Set
			If ((Me._ml_UserAccessStat = value)  _
						= false) Then
				Me.Onml_UserAccessStatChanging(value)
				Me.SendPropertyChanging
				Me._ml_UserAccessStat = value
				Me.SendPropertyChanged("ml_UserAccessStat")
				Me.Onml_UserAccessStatChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_access", DbType:="VarChar(50)")>  _
	Public Property ml_access() As String
		Get
			Return Me._ml_access
		End Get
		Set
			If (String.Equals(Me._ml_access, value) = false) Then
				Me.Onml_accessChanging(value)
				Me.SendPropertyChanging
				Me._ml_access = value
				Me.SendPropertyChanged("ml_access")
				Me.Onml_accessChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_UserLevel")>  _
Partial Public Class ml_UserLevel
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_ulID As Integer
	
	Private _ml_UserLevel As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_ulIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_ulIDChanged()
    End Sub
    Partial Private Sub Onml_UserLevelChanging(value As String)
    End Sub
    Partial Private Sub Onml_UserLevelChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_ulID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_ulID() As Integer
		Get
			Return Me._ml_ulID
		End Get
		Set
			If ((Me._ml_ulID = value)  _
						= false) Then
				Me.Onml_ulIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_ulID = value
				Me.SendPropertyChanged("ml_ulID")
				Me.Onml_ulIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UserLevel", DbType:="VarChar(20)")>  _
	Public Property ml_UserLevel() As String
		Get
			Return Me._ml_UserLevel
		End Get
		Set
			If (String.Equals(Me._ml_UserLevel, value) = false) Then
				Me.Onml_UserLevelChanging(value)
				Me.SendPropertyChanging
				Me._ml_UserLevel = value
				Me.SendPropertyChanged("ml_UserLevel")
				Me.Onml_UserLevelChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_UserModule")>  _
Partial Public Class ml_UserModule
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_umID As Integer
	
	Private _ml_SystemID As System.Nullable(Of Integer)
	
	Private _ml_Module As String
	
	Private _ml_UserID As System.Nullable(Of Integer)
	
	Private _dateModifed As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_umIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_umIDChanged()
    End Sub
    Partial Private Sub Onml_SystemIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_SystemIDChanged()
    End Sub
    Partial Private Sub Onml_ModuleChanging(value As String)
    End Sub
    Partial Private Sub Onml_ModuleChanged()
    End Sub
    Partial Private Sub Onml_UserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_UserIDChanged()
    End Sub
    Partial Private Sub OndateModifedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndateModifedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_umID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_umID() As Integer
		Get
			Return Me._ml_umID
		End Get
		Set
			If ((Me._ml_umID = value)  _
						= false) Then
				Me.Onml_umIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_umID = value
				Me.SendPropertyChanged("ml_umID")
				Me.Onml_umIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_SystemID", DbType:="Int")>  _
	Public Property ml_SystemID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_SystemID
		End Get
		Set
			If (Me._ml_SystemID.Equals(value) = false) Then
				Me.Onml_SystemIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_SystemID = value
				Me.SendPropertyChanged("ml_SystemID")
				Me.Onml_SystemIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_Module", DbType:="VarChar(100)")>  _
	Public Property ml_Module() As String
		Get
			Return Me._ml_Module
		End Get
		Set
			If (String.Equals(Me._ml_Module, value) = false) Then
				Me.Onml_ModuleChanging(value)
				Me.SendPropertyChanging
				Me._ml_Module = value
				Me.SendPropertyChanged("ml_Module")
				Me.Onml_ModuleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UserID", DbType:="Int")>  _
	Public Property ml_UserID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_UserID
		End Get
		Set
			If (Me._ml_UserID.Equals(value) = false) Then
				Me.Onml_UserIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_UserID = value
				Me.SendPropertyChanged("ml_UserID")
				Me.Onml_UserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dateModifed", DbType:="DateTime")>  _
	Public Property dateModifed() As System.Nullable(Of Date)
		Get
			Return Me._dateModifed
		End Get
		Set
			If (Me._dateModifed.Equals(value) = false) Then
				Me.OndateModifedChanging(value)
				Me.SendPropertyChanging
				Me._dateModifed = value
				Me.SendPropertyChanged("dateModifed")
				Me.OndateModifedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_UserPermission")>  _
Partial Public Class ml_UserPermission
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_upID As Integer
	
	Private _ml_SystemID As System.Nullable(Of Integer)
	
	Private _ml_umID As System.Nullable(Of Integer)
	
	Private _ml_UserID As System.Nullable(Of Integer)
	
	Private _ml_uasID As System.Nullable(Of Integer)
	
	Private _ml_UserID_encode As System.Nullable(Of Integer)
	
	Private _dateModified As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_upIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_upIDChanged()
    End Sub
    Partial Private Sub Onml_SystemIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_SystemIDChanged()
    End Sub
    Partial Private Sub Onml_umIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_umIDChanged()
    End Sub
    Partial Private Sub Onml_UserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_UserIDChanged()
    End Sub
    Partial Private Sub Onml_uasIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_uasIDChanged()
    End Sub
    Partial Private Sub Onml_UserID_encodeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_UserID_encodeChanged()
    End Sub
    Partial Private Sub OndateModifiedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndateModifiedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_upID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_upID() As Integer
		Get
			Return Me._ml_upID
		End Get
		Set
			If ((Me._ml_upID = value)  _
						= false) Then
				Me.Onml_upIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_upID = value
				Me.SendPropertyChanged("ml_upID")
				Me.Onml_upIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_SystemID", DbType:="Int")>  _
	Public Property ml_SystemID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_SystemID
		End Get
		Set
			If (Me._ml_SystemID.Equals(value) = false) Then
				Me.Onml_SystemIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_SystemID = value
				Me.SendPropertyChanged("ml_SystemID")
				Me.Onml_SystemIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_umID", DbType:="Int")>  _
	Public Property ml_umID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_umID
		End Get
		Set
			If (Me._ml_umID.Equals(value) = false) Then
				Me.Onml_umIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_umID = value
				Me.SendPropertyChanged("ml_umID")
				Me.Onml_umIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UserID", DbType:="Int")>  _
	Public Property ml_UserID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_UserID
		End Get
		Set
			If (Me._ml_UserID.Equals(value) = false) Then
				Me.Onml_UserIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_UserID = value
				Me.SendPropertyChanged("ml_UserID")
				Me.Onml_UserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_uasID", DbType:="Int")>  _
	Public Property ml_uasID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_uasID
		End Get
		Set
			If (Me._ml_uasID.Equals(value) = false) Then
				Me.Onml_uasIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_uasID = value
				Me.SendPropertyChanged("ml_uasID")
				Me.Onml_uasIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UserID_encode", DbType:="Int")>  _
	Public Property ml_UserID_encode() As System.Nullable(Of Integer)
		Get
			Return Me._ml_UserID_encode
		End Get
		Set
			If (Me._ml_UserID_encode.Equals(value) = false) Then
				Me.Onml_UserID_encodeChanging(value)
				Me.SendPropertyChanging
				Me._ml_UserID_encode = value
				Me.SendPropertyChanged("ml_UserID_encode")
				Me.Onml_UserID_encodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dateModified", DbType:="DateTime")>  _
	Public Property dateModified() As System.Nullable(Of Date)
		Get
			Return Me._dateModified
		End Get
		Set
			If (Me._dateModified.Equals(value) = false) Then
				Me.OndateModifiedChanging(value)
				Me.SendPropertyChanging
				Me._dateModified = value
				Me.SendPropertyChanged("dateModified")
				Me.OndateModifiedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_UserType")>  _
Partial Public Class ml_UserType
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_utID As Integer
	
	Private _ml_UserType As String
	
	Private _ml_vID As System.Nullable(Of Integer)
	
	Private _ml_UserID As System.Nullable(Of Integer)
	
	Private _dateModified As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_utIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_utIDChanged()
    End Sub
    Partial Private Sub Onml_UserTypeChanging(value As String)
    End Sub
    Partial Private Sub Onml_UserTypeChanged()
    End Sub
    Partial Private Sub Onml_vIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_vIDChanged()
    End Sub
    Partial Private Sub Onml_UserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_UserIDChanged()
    End Sub
    Partial Private Sub OndateModifiedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndateModifiedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_utID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_utID() As Integer
		Get
			Return Me._ml_utID
		End Get
		Set
			If ((Me._ml_utID = value)  _
						= false) Then
				Me.Onml_utIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_utID = value
				Me.SendPropertyChanged("ml_utID")
				Me.Onml_utIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UserType", DbType:="VarChar(50)")>  _
	Public Property ml_UserType() As String
		Get
			Return Me._ml_UserType
		End Get
		Set
			If (String.Equals(Me._ml_UserType, value) = false) Then
				Me.Onml_UserTypeChanging(value)
				Me.SendPropertyChanging
				Me._ml_UserType = value
				Me.SendPropertyChanged("ml_UserType")
				Me.Onml_UserTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vID", DbType:="Int")>  _
	Public Property ml_vID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_vID
		End Get
		Set
			If (Me._ml_vID.Equals(value) = false) Then
				Me.Onml_vIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_vID = value
				Me.SendPropertyChanged("ml_vID")
				Me.Onml_vIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UserID", DbType:="Int")>  _
	Public Property ml_UserID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_UserID
		End Get
		Set
			If (Me._ml_UserID.Equals(value) = false) Then
				Me.Onml_UserIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_UserID = value
				Me.SendPropertyChanged("ml_UserID")
				Me.Onml_UserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dateModified", DbType:="DateTime")>  _
	Public Property dateModified() As System.Nullable(Of Date)
		Get
			Return Me._dateModified
		End Get
		Set
			If (Me._dateModified.Equals(value) = false) Then
				Me.OndateModifiedChanging(value)
				Me.SendPropertyChanging
				Me._dateModified = value
				Me.SendPropertyChanged("dateModified")
				Me.OndateModifiedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_UserTypePermission")>  _
Partial Public Class ml_UserTypePermission
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_utpID As Integer
	
	Private _ml_SystemID As System.Nullable(Of Integer)
	
	Private _ml_umID As System.Nullable(Of Integer)
	
	Private _ml_utID As System.Nullable(Of Integer)
	
	Private _ml_uasID As System.Nullable(Of Integer)
	
	Private _ml_UserID_encode As System.Nullable(Of Integer)
	
	Private _dateModified As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_utpIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_utpIDChanged()
    End Sub
    Partial Private Sub Onml_SystemIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_SystemIDChanged()
    End Sub
    Partial Private Sub Onml_umIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_umIDChanged()
    End Sub
    Partial Private Sub Onml_utIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_utIDChanged()
    End Sub
    Partial Private Sub Onml_uasIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_uasIDChanged()
    End Sub
    Partial Private Sub Onml_UserID_encodeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_UserID_encodeChanged()
    End Sub
    Partial Private Sub OndateModifiedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndateModifiedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_utpID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_utpID() As Integer
		Get
			Return Me._ml_utpID
		End Get
		Set
			If ((Me._ml_utpID = value)  _
						= false) Then
				Me.Onml_utpIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_utpID = value
				Me.SendPropertyChanged("ml_utpID")
				Me.Onml_utpIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_SystemID", DbType:="Int")>  _
	Public Property ml_SystemID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_SystemID
		End Get
		Set
			If (Me._ml_SystemID.Equals(value) = false) Then
				Me.Onml_SystemIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_SystemID = value
				Me.SendPropertyChanged("ml_SystemID")
				Me.Onml_SystemIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_umID", DbType:="Int")>  _
	Public Property ml_umID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_umID
		End Get
		Set
			If (Me._ml_umID.Equals(value) = false) Then
				Me.Onml_umIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_umID = value
				Me.SendPropertyChanged("ml_umID")
				Me.Onml_umIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_utID", DbType:="Int")>  _
	Public Property ml_utID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_utID
		End Get
		Set
			If (Me._ml_utID.Equals(value) = false) Then
				Me.Onml_utIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_utID = value
				Me.SendPropertyChanged("ml_utID")
				Me.Onml_utIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_uasID", DbType:="Int")>  _
	Public Property ml_uasID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_uasID
		End Get
		Set
			If (Me._ml_uasID.Equals(value) = false) Then
				Me.Onml_uasIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_uasID = value
				Me.SendPropertyChanged("ml_uasID")
				Me.Onml_uasIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UserID_encode", DbType:="Int")>  _
	Public Property ml_UserID_encode() As System.Nullable(Of Integer)
		Get
			Return Me._ml_UserID_encode
		End Get
		Set
			If (Me._ml_UserID_encode.Equals(value) = false) Then
				Me.Onml_UserID_encodeChanging(value)
				Me.SendPropertyChanging
				Me._ml_UserID_encode = value
				Me.SendPropertyChanged("ml_UserID_encode")
				Me.Onml_UserID_encodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dateModified", DbType:="DateTime")>  _
	Public Property dateModified() As System.Nullable(Of Date)
		Get
			Return Me._dateModified
		End Get
		Set
			If (Me._dateModified.Equals(value) = false) Then
				Me.OndateModifiedChanging(value)
				Me.SendPropertyChanging
				Me._dateModified = value
				Me.SendPropertyChanged("dateModified")
				Me.OndateModifiedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_VesFishingClass")>  _
Partial Public Class ml_VesFishingClass
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_vfcID As Integer
	
	Private _ml_vfClass As String
	
	Private _ml_StatID As System.Nullable(Of Integer)
	
	Private _ml_UserID As System.Nullable(Of Integer)
	
	Private _dateModified As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_vfcIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_vfcIDChanged()
    End Sub
    Partial Private Sub Onml_vfClassChanging(value As String)
    End Sub
    Partial Private Sub Onml_vfClassChanged()
    End Sub
    Partial Private Sub Onml_StatIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_StatIDChanged()
    End Sub
    Partial Private Sub Onml_UserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_UserIDChanged()
    End Sub
    Partial Private Sub OndateModifiedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndateModifiedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vfcID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_vfcID() As Integer
		Get
			Return Me._ml_vfcID
		End Get
		Set
			If ((Me._ml_vfcID = value)  _
						= false) Then
				Me.Onml_vfcIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_vfcID = value
				Me.SendPropertyChanged("ml_vfcID")
				Me.Onml_vfcIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vfClass", DbType:="VarChar(50)")>  _
	Public Property ml_vfClass() As String
		Get
			Return Me._ml_vfClass
		End Get
		Set
			If (String.Equals(Me._ml_vfClass, value) = false) Then
				Me.Onml_vfClassChanging(value)
				Me.SendPropertyChanging
				Me._ml_vfClass = value
				Me.SendPropertyChanged("ml_vfClass")
				Me.Onml_vfClassChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_StatID", DbType:="Int")>  _
	Public Property ml_StatID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_StatID
		End Get
		Set
			If (Me._ml_StatID.Equals(value) = false) Then
				Me.Onml_StatIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_StatID = value
				Me.SendPropertyChanged("ml_StatID")
				Me.Onml_StatIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UserID", DbType:="Int")>  _
	Public Property ml_UserID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_UserID
		End Get
		Set
			If (Me._ml_UserID.Equals(value) = false) Then
				Me.Onml_UserIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_UserID = value
				Me.SendPropertyChanged("ml_UserID")
				Me.Onml_UserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dateModified", DbType:="DateTime")>  _
	Public Property dateModified() As System.Nullable(Of Date)
		Get
			Return Me._dateModified
		End Get
		Set
			If (Me._dateModified.Equals(value) = false) Then
				Me.OndateModifiedChanging(value)
				Me.SendPropertyChanging
				Me._dateModified = value
				Me.SendPropertyChanged("dateModified")
				Me.OndateModifiedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_VesFishingType")>  _
Partial Public Class ml_VesFishingType
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_vftID As Integer
	
	Private _ml_fvType As String
	
	Private _ml_StatID As System.Nullable(Of Integer)
	
	Private _ml_UserID As System.Nullable(Of Integer)
	
	Private _dateModified As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_vftIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_vftIDChanged()
    End Sub
    Partial Private Sub Onml_fvTypeChanging(value As String)
    End Sub
    Partial Private Sub Onml_fvTypeChanged()
    End Sub
    Partial Private Sub Onml_StatIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_StatIDChanged()
    End Sub
    Partial Private Sub Onml_UserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_UserIDChanged()
    End Sub
    Partial Private Sub OndateModifiedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndateModifiedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vftID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_vftID() As Integer
		Get
			Return Me._ml_vftID
		End Get
		Set
			If ((Me._ml_vftID = value)  _
						= false) Then
				Me.Onml_vftIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_vftID = value
				Me.SendPropertyChanged("ml_vftID")
				Me.Onml_vftIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_fvType", DbType:="VarChar(20)")>  _
	Public Property ml_fvType() As String
		Get
			Return Me._ml_fvType
		End Get
		Set
			If (String.Equals(Me._ml_fvType, value) = false) Then
				Me.Onml_fvTypeChanging(value)
				Me.SendPropertyChanging
				Me._ml_fvType = value
				Me.SendPropertyChanged("ml_fvType")
				Me.Onml_fvTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_StatID", DbType:="Int")>  _
	Public Property ml_StatID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_StatID
		End Get
		Set
			If (Me._ml_StatID.Equals(value) = false) Then
				Me.Onml_StatIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_StatID = value
				Me.SendPropertyChanged("ml_StatID")
				Me.Onml_StatIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UserID", DbType:="Int")>  _
	Public Property ml_UserID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_UserID
		End Get
		Set
			If (Me._ml_UserID.Equals(value) = false) Then
				Me.Onml_UserIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_UserID = value
				Me.SendPropertyChanged("ml_UserID")
				Me.Onml_UserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dateModified", DbType:="DateTime")>  _
	Public Property dateModified() As System.Nullable(Of Date)
		Get
			Return Me._dateModified
		End Get
		Set
			If (Me._dateModified.Equals(value) = false) Then
				Me.OndateModifiedChanging(value)
				Me.SendPropertyChanging
				Me._dateModified = value
				Me.SendPropertyChanged("dateModified")
				Me.OndateModifiedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_VesLicense")>  _
Partial Public Class ml_VesLicense
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_vlID As Integer
	
	Private _ml_vID As System.Nullable(Of Integer)
	
	Private _ml_licenseName As String
	
	Private _ml_datefFrom As System.Nullable(Of Date)
	
	Private _ml_DateTo As System.Nullable(Of Date)
	
	Private _ml_UserID As System.Nullable(Of Integer)
	
	Private _dateModified As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_vlIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_vlIDChanged()
    End Sub
    Partial Private Sub Onml_vIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_vIDChanged()
    End Sub
    Partial Private Sub Onml_licenseNameChanging(value As String)
    End Sub
    Partial Private Sub Onml_licenseNameChanged()
    End Sub
    Partial Private Sub Onml_datefFromChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onml_datefFromChanged()
    End Sub
    Partial Private Sub Onml_DateToChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onml_DateToChanged()
    End Sub
    Partial Private Sub Onml_UserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_UserIDChanged()
    End Sub
    Partial Private Sub OndateModifiedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndateModifiedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vlID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_vlID() As Integer
		Get
			Return Me._ml_vlID
		End Get
		Set
			If ((Me._ml_vlID = value)  _
						= false) Then
				Me.Onml_vlIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_vlID = value
				Me.SendPropertyChanged("ml_vlID")
				Me.Onml_vlIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vID", DbType:="Int")>  _
	Public Property ml_vID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_vID
		End Get
		Set
			If (Me._ml_vID.Equals(value) = false) Then
				Me.Onml_vIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_vID = value
				Me.SendPropertyChanged("ml_vID")
				Me.Onml_vIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_licenseName", DbType:="VarChar(50)")>  _
	Public Property ml_licenseName() As String
		Get
			Return Me._ml_licenseName
		End Get
		Set
			If (String.Equals(Me._ml_licenseName, value) = false) Then
				Me.Onml_licenseNameChanging(value)
				Me.SendPropertyChanging
				Me._ml_licenseName = value
				Me.SendPropertyChanged("ml_licenseName")
				Me.Onml_licenseNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_datefFrom", DbType:="DateTime")>  _
	Public Property ml_datefFrom() As System.Nullable(Of Date)
		Get
			Return Me._ml_datefFrom
		End Get
		Set
			If (Me._ml_datefFrom.Equals(value) = false) Then
				Me.Onml_datefFromChanging(value)
				Me.SendPropertyChanging
				Me._ml_datefFrom = value
				Me.SendPropertyChanged("ml_datefFrom")
				Me.Onml_datefFromChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_DateTo", DbType:="DateTime")>  _
	Public Property ml_DateTo() As System.Nullable(Of Date)
		Get
			Return Me._ml_DateTo
		End Get
		Set
			If (Me._ml_DateTo.Equals(value) = false) Then
				Me.Onml_DateToChanging(value)
				Me.SendPropertyChanging
				Me._ml_DateTo = value
				Me.SendPropertyChanged("ml_DateTo")
				Me.Onml_DateToChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UserID", DbType:="Int")>  _
	Public Property ml_UserID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_UserID
		End Get
		Set
			If (Me._ml_UserID.Equals(value) = false) Then
				Me.Onml_UserIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_UserID = value
				Me.SendPropertyChanged("ml_UserID")
				Me.Onml_UserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dateModified", DbType:="DateTime")>  _
	Public Property dateModified() As System.Nullable(Of Date)
		Get
			Return Me._dateModified
		End Get
		Set
			If (Me._dateModified.Equals(value) = false) Then
				Me.OndateModifiedChanging(value)
				Me.SendPropertyChanging
				Me._dateModified = value
				Me.SendPropertyChanged("dateModified")
				Me.OndateModifiedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_VesSecAssign")>  _
Partial Public Class ml_VesSecAssign
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_vsaID As Integer
	
	Private _ml_vID As System.Nullable(Of Integer)
	
	Private _ml_sID As System.Nullable(Of Integer)
	
	Private _ml_StatID As System.Nullable(Of Integer)
	
	Private _ml_UserID As System.Nullable(Of Integer)
	
	Private _dateModified As System.Nullable(Of Date)
	
	Private _ml_UnitName As String
	
	Private _ml_vehicleTypeID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_vsaIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_vsaIDChanged()
    End Sub
    Partial Private Sub Onml_vIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_vIDChanged()
    End Sub
    Partial Private Sub Onml_sIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_sIDChanged()
    End Sub
    Partial Private Sub Onml_StatIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_StatIDChanged()
    End Sub
    Partial Private Sub Onml_UserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_UserIDChanged()
    End Sub
    Partial Private Sub OndateModifiedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndateModifiedChanged()
    End Sub
    Partial Private Sub Onml_UnitNameChanging(value As String)
    End Sub
    Partial Private Sub Onml_UnitNameChanged()
    End Sub
    Partial Private Sub Onml_vehicleTypeIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_vehicleTypeIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vsaID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_vsaID() As Integer
		Get
			Return Me._ml_vsaID
		End Get
		Set
			If ((Me._ml_vsaID = value)  _
						= false) Then
				Me.Onml_vsaIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_vsaID = value
				Me.SendPropertyChanged("ml_vsaID")
				Me.Onml_vsaIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vID", DbType:="Int")>  _
	Public Property ml_vID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_vID
		End Get
		Set
			If (Me._ml_vID.Equals(value) = false) Then
				Me.Onml_vIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_vID = value
				Me.SendPropertyChanged("ml_vID")
				Me.Onml_vIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_sID", DbType:="Int")>  _
	Public Property ml_sID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_sID
		End Get
		Set
			If (Me._ml_sID.Equals(value) = false) Then
				Me.Onml_sIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_sID = value
				Me.SendPropertyChanged("ml_sID")
				Me.Onml_sIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_StatID", DbType:="Int")>  _
	Public Property ml_StatID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_StatID
		End Get
		Set
			If (Me._ml_StatID.Equals(value) = false) Then
				Me.Onml_StatIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_StatID = value
				Me.SendPropertyChanged("ml_StatID")
				Me.Onml_StatIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UserID", DbType:="Int")>  _
	Public Property ml_UserID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_UserID
		End Get
		Set
			If (Me._ml_UserID.Equals(value) = false) Then
				Me.Onml_UserIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_UserID = value
				Me.SendPropertyChanged("ml_UserID")
				Me.Onml_UserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dateModified", DbType:="DateTime")>  _
	Public Property dateModified() As System.Nullable(Of Date)
		Get
			Return Me._dateModified
		End Get
		Set
			If (Me._dateModified.Equals(value) = false) Then
				Me.OndateModifiedChanging(value)
				Me.SendPropertyChanging
				Me._dateModified = value
				Me.SendPropertyChanged("dateModified")
				Me.OndateModifiedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UnitName", DbType:="VarChar(100)")>  _
	Public Property ml_UnitName() As String
		Get
			Return Me._ml_UnitName
		End Get
		Set
			If (String.Equals(Me._ml_UnitName, value) = false) Then
				Me.Onml_UnitNameChanging(value)
				Me.SendPropertyChanging
				Me._ml_UnitName = value
				Me.SendPropertyChanged("ml_UnitName")
				Me.Onml_UnitNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vehicleTypeID", DbType:="Int")>  _
	Public Property ml_vehicleTypeID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_vehicleTypeID
		End Get
		Set
			If (Me._ml_vehicleTypeID.Equals(value) = false) Then
				Me.Onml_vehicleTypeIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_vehicleTypeID = value
				Me.SendPropertyChanged("ml_vehicleTypeID")
				Me.Onml_vehicleTypeIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_VesSecPosAssign")>  _
Partial Public Class ml_VesSecPosAssign
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_vspaID As Integer
	
	Private _ml_vID As System.Nullable(Of Integer)
	
	Private _ml_sID As System.Nullable(Of Integer)
	
	Private _ml_pID As System.Nullable(Of Integer)
	
	Private _ml_Share As System.Nullable(Of Decimal)
	
	Private _ml_StatID As System.Nullable(Of Integer)
	
	Private _ml_Userid As System.Nullable(Of Integer)
	
	Private _dateModified As System.Nullable(Of Date)
	
	Private _ml_groupNum As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_vspaIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_vspaIDChanged()
    End Sub
    Partial Private Sub Onml_vIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_vIDChanged()
    End Sub
    Partial Private Sub Onml_sIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_sIDChanged()
    End Sub
    Partial Private Sub Onml_pIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_pIDChanged()
    End Sub
    Partial Private Sub Onml_ShareChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onml_ShareChanged()
    End Sub
    Partial Private Sub Onml_StatIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_StatIDChanged()
    End Sub
    Partial Private Sub Onml_UseridChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_UseridChanged()
    End Sub
    Partial Private Sub OndateModifiedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndateModifiedChanged()
    End Sub
    Partial Private Sub Onml_groupNumChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_groupNumChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vspaID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_vspaID() As Integer
		Get
			Return Me._ml_vspaID
		End Get
		Set
			If ((Me._ml_vspaID = value)  _
						= false) Then
				Me.Onml_vspaIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_vspaID = value
				Me.SendPropertyChanged("ml_vspaID")
				Me.Onml_vspaIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vID", DbType:="Int")>  _
	Public Property ml_vID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_vID
		End Get
		Set
			If (Me._ml_vID.Equals(value) = false) Then
				Me.Onml_vIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_vID = value
				Me.SendPropertyChanged("ml_vID")
				Me.Onml_vIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_sID", DbType:="Int")>  _
	Public Property ml_sID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_sID
		End Get
		Set
			If (Me._ml_sID.Equals(value) = false) Then
				Me.Onml_sIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_sID = value
				Me.SendPropertyChanged("ml_sID")
				Me.Onml_sIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_pID", DbType:="Int")>  _
	Public Property ml_pID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_pID
		End Get
		Set
			If (Me._ml_pID.Equals(value) = false) Then
				Me.Onml_pIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_pID = value
				Me.SendPropertyChanged("ml_pID")
				Me.Onml_pIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_Share", DbType:="Decimal(10,2)")>  _
	Public Property ml_Share() As System.Nullable(Of Decimal)
		Get
			Return Me._ml_Share
		End Get
		Set
			If (Me._ml_Share.Equals(value) = false) Then
				Me.Onml_ShareChanging(value)
				Me.SendPropertyChanging
				Me._ml_Share = value
				Me.SendPropertyChanged("ml_Share")
				Me.Onml_ShareChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_StatID", DbType:="Int")>  _
	Public Property ml_StatID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_StatID
		End Get
		Set
			If (Me._ml_StatID.Equals(value) = false) Then
				Me.Onml_StatIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_StatID = value
				Me.SendPropertyChanged("ml_StatID")
				Me.Onml_StatIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_Userid", DbType:="Int")>  _
	Public Property ml_Userid() As System.Nullable(Of Integer)
		Get
			Return Me._ml_Userid
		End Get
		Set
			If (Me._ml_Userid.Equals(value) = false) Then
				Me.Onml_UseridChanging(value)
				Me.SendPropertyChanging
				Me._ml_Userid = value
				Me.SendPropertyChanged("ml_Userid")
				Me.Onml_UseridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dateModified", DbType:="DateTime")>  _
	Public Property dateModified() As System.Nullable(Of Date)
		Get
			Return Me._dateModified
		End Get
		Set
			If (Me._dateModified.Equals(value) = false) Then
				Me.OndateModifiedChanging(value)
				Me.SendPropertyChanging
				Me._dateModified = value
				Me.SendPropertyChanged("dateModified")
				Me.OndateModifiedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_groupNum", DbType:="Int")>  _
	Public Property ml_groupNum() As System.Nullable(Of Integer)
		Get
			Return Me._ml_groupNum
		End Get
		Set
			If (Me._ml_groupNum.Equals(value) = false) Then
				Me.Onml_groupNumChanging(value)
				Me.SendPropertyChanging
				Me._ml_groupNum = value
				Me.SendPropertyChanged("ml_groupNum")
				Me.Onml_groupNumChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_VesSection")>  _
Partial Public Class ml_VesSection
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_sID As Integer
	
	Private _ml_Section As String
	
	Private _ml_reusable As System.Nullable(Of Integer)
	
	Private _ml_StatID As System.Nullable(Of Integer)
	
	Private _ml_UserID As System.Nullable(Of Integer)
	
	Private _dateModified As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_sIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_sIDChanged()
    End Sub
    Partial Private Sub Onml_SectionChanging(value As String)
    End Sub
    Partial Private Sub Onml_SectionChanged()
    End Sub
    Partial Private Sub Onml_reusableChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_reusableChanged()
    End Sub
    Partial Private Sub Onml_StatIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_StatIDChanged()
    End Sub
    Partial Private Sub Onml_UserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_UserIDChanged()
    End Sub
    Partial Private Sub OndateModifiedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndateModifiedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_sID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_sID() As Integer
		Get
			Return Me._ml_sID
		End Get
		Set
			If ((Me._ml_sID = value)  _
						= false) Then
				Me.Onml_sIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_sID = value
				Me.SendPropertyChanged("ml_sID")
				Me.Onml_sIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_Section", DbType:="VarChar(50)")>  _
	Public Property ml_Section() As String
		Get
			Return Me._ml_Section
		End Get
		Set
			If (String.Equals(Me._ml_Section, value) = false) Then
				Me.Onml_SectionChanging(value)
				Me.SendPropertyChanging
				Me._ml_Section = value
				Me.SendPropertyChanged("ml_Section")
				Me.Onml_SectionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_reusable", DbType:="Int")>  _
	Public Property ml_reusable() As System.Nullable(Of Integer)
		Get
			Return Me._ml_reusable
		End Get
		Set
			If (Me._ml_reusable.Equals(value) = false) Then
				Me.Onml_reusableChanging(value)
				Me.SendPropertyChanging
				Me._ml_reusable = value
				Me.SendPropertyChanged("ml_reusable")
				Me.Onml_reusableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_StatID", DbType:="Int")>  _
	Public Property ml_StatID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_StatID
		End Get
		Set
			If (Me._ml_StatID.Equals(value) = false) Then
				Me.Onml_StatIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_StatID = value
				Me.SendPropertyChanged("ml_StatID")
				Me.Onml_StatIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UserID", DbType:="Int")>  _
	Public Property ml_UserID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_UserID
		End Get
		Set
			If (Me._ml_UserID.Equals(value) = false) Then
				Me.Onml_UserIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_UserID = value
				Me.SendPropertyChanged("ml_UserID")
				Me.Onml_UserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dateModified", DbType:="DateTime")>  _
	Public Property dateModified() As System.Nullable(Of Date)
		Get
			Return Me._dateModified
		End Get
		Set
			If (Me._dateModified.Equals(value) = false) Then
				Me.OndateModifiedChanging(value)
				Me.SendPropertyChanging
				Me._dateModified = value
				Me.SendPropertyChanged("dateModified")
				Me.OndateModifiedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_Vessel")>  _
Partial Public Class ml_Vessel
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_vID As Integer
	
	Private _ml_vtID As System.Nullable(Of Integer)
	
	Private _vesselName As String
	
	Private _vesselCode As String
	
	Private _ml_CallName As String
	
	Private _ml_vftID As System.Nullable(Of Integer)
	
	Private _ml_CountryID As System.Nullable(Of Integer)
	
	Private _ml_capacity As System.Nullable(Of Decimal)
	
	Private _ml_CountryID_CurrLoc As System.Nullable(Of Integer)
	
	Private _ml_UserID As System.Nullable(Of Integer)
	
	Private _dateModified As System.Nullable(Of Date)
	
	Private _ml_statID As System.Nullable(Of Integer)
	
	Private _ml_voID As System.Nullable(Of Integer)
	
	Private _quota As System.Nullable(Of Decimal)
	
	Private _shoreLeaveDays As System.Nullable(Of Integer)
	
	Private _ml_vfcID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_vIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_vIDChanged()
    End Sub
    Partial Private Sub Onml_vtIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_vtIDChanged()
    End Sub
    Partial Private Sub OnvesselNameChanging(value As String)
    End Sub
    Partial Private Sub OnvesselNameChanged()
    End Sub
    Partial Private Sub OnvesselCodeChanging(value As String)
    End Sub
    Partial Private Sub OnvesselCodeChanged()
    End Sub
    Partial Private Sub Onml_CallNameChanging(value As String)
    End Sub
    Partial Private Sub Onml_CallNameChanged()
    End Sub
    Partial Private Sub Onml_vftIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_vftIDChanged()
    End Sub
    Partial Private Sub Onml_CountryIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_CountryIDChanged()
    End Sub
    Partial Private Sub Onml_capacityChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onml_capacityChanged()
    End Sub
    Partial Private Sub Onml_CountryID_CurrLocChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_CountryID_CurrLocChanged()
    End Sub
    Partial Private Sub Onml_UserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_UserIDChanged()
    End Sub
    Partial Private Sub OndateModifiedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndateModifiedChanged()
    End Sub
    Partial Private Sub Onml_statIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_statIDChanged()
    End Sub
    Partial Private Sub Onml_voIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_voIDChanged()
    End Sub
    Partial Private Sub OnquotaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnquotaChanged()
    End Sub
    Partial Private Sub OnshoreLeaveDaysChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnshoreLeaveDaysChanged()
    End Sub
    Partial Private Sub Onml_vfcIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_vfcIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_vID() As Integer
		Get
			Return Me._ml_vID
		End Get
		Set
			If ((Me._ml_vID = value)  _
						= false) Then
				Me.Onml_vIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_vID = value
				Me.SendPropertyChanged("ml_vID")
				Me.Onml_vIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vtID", DbType:="Int")>  _
	Public Property ml_vtID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_vtID
		End Get
		Set
			If (Me._ml_vtID.Equals(value) = false) Then
				Me.Onml_vtIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_vtID = value
				Me.SendPropertyChanged("ml_vtID")
				Me.Onml_vtIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_vesselName", DbType:="VarChar(100)")>  _
	Public Property vesselName() As String
		Get
			Return Me._vesselName
		End Get
		Set
			If (String.Equals(Me._vesselName, value) = false) Then
				Me.OnvesselNameChanging(value)
				Me.SendPropertyChanging
				Me._vesselName = value
				Me.SendPropertyChanged("vesselName")
				Me.OnvesselNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_vesselCode", DbType:="VarChar(50)")>  _
	Public Property vesselCode() As String
		Get
			Return Me._vesselCode
		End Get
		Set
			If (String.Equals(Me._vesselCode, value) = false) Then
				Me.OnvesselCodeChanging(value)
				Me.SendPropertyChanging
				Me._vesselCode = value
				Me.SendPropertyChanged("vesselCode")
				Me.OnvesselCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_CallName", DbType:="VarChar(50)")>  _
	Public Property ml_CallName() As String
		Get
			Return Me._ml_CallName
		End Get
		Set
			If (String.Equals(Me._ml_CallName, value) = false) Then
				Me.Onml_CallNameChanging(value)
				Me.SendPropertyChanging
				Me._ml_CallName = value
				Me.SendPropertyChanged("ml_CallName")
				Me.Onml_CallNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vftID", DbType:="Int")>  _
	Public Property ml_vftID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_vftID
		End Get
		Set
			If (Me._ml_vftID.Equals(value) = false) Then
				Me.Onml_vftIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_vftID = value
				Me.SendPropertyChanged("ml_vftID")
				Me.Onml_vftIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_CountryID", DbType:="Int")>  _
	Public Property ml_CountryID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_CountryID
		End Get
		Set
			If (Me._ml_CountryID.Equals(value) = false) Then
				Me.Onml_CountryIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_CountryID = value
				Me.SendPropertyChanged("ml_CountryID")
				Me.Onml_CountryIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_capacity", DbType:="Decimal(10,2)")>  _
	Public Property ml_capacity() As System.Nullable(Of Decimal)
		Get
			Return Me._ml_capacity
		End Get
		Set
			If (Me._ml_capacity.Equals(value) = false) Then
				Me.Onml_capacityChanging(value)
				Me.SendPropertyChanging
				Me._ml_capacity = value
				Me.SendPropertyChanged("ml_capacity")
				Me.Onml_capacityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_CountryID_CurrLoc", DbType:="Int")>  _
	Public Property ml_CountryID_CurrLoc() As System.Nullable(Of Integer)
		Get
			Return Me._ml_CountryID_CurrLoc
		End Get
		Set
			If (Me._ml_CountryID_CurrLoc.Equals(value) = false) Then
				Me.Onml_CountryID_CurrLocChanging(value)
				Me.SendPropertyChanging
				Me._ml_CountryID_CurrLoc = value
				Me.SendPropertyChanged("ml_CountryID_CurrLoc")
				Me.Onml_CountryID_CurrLocChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UserID", DbType:="Int")>  _
	Public Property ml_UserID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_UserID
		End Get
		Set
			If (Me._ml_UserID.Equals(value) = false) Then
				Me.Onml_UserIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_UserID = value
				Me.SendPropertyChanged("ml_UserID")
				Me.Onml_UserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dateModified", DbType:="DateTime")>  _
	Public Property dateModified() As System.Nullable(Of Date)
		Get
			Return Me._dateModified
		End Get
		Set
			If (Me._dateModified.Equals(value) = false) Then
				Me.OndateModifiedChanging(value)
				Me.SendPropertyChanging
				Me._dateModified = value
				Me.SendPropertyChanged("dateModified")
				Me.OndateModifiedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_statID", DbType:="Int")>  _
	Public Property ml_statID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_statID
		End Get
		Set
			If (Me._ml_statID.Equals(value) = false) Then
				Me.Onml_statIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_statID = value
				Me.SendPropertyChanged("ml_statID")
				Me.Onml_statIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_voID", DbType:="Int")>  _
	Public Property ml_voID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_voID
		End Get
		Set
			If (Me._ml_voID.Equals(value) = false) Then
				Me.Onml_voIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_voID = value
				Me.SendPropertyChanged("ml_voID")
				Me.Onml_voIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quota", DbType:="Decimal(10,2)")>  _
	Public Property quota() As System.Nullable(Of Decimal)
		Get
			Return Me._quota
		End Get
		Set
			If (Me._quota.Equals(value) = false) Then
				Me.OnquotaChanging(value)
				Me.SendPropertyChanging
				Me._quota = value
				Me.SendPropertyChanged("quota")
				Me.OnquotaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_shoreLeaveDays", DbType:="Int")>  _
	Public Property shoreLeaveDays() As System.Nullable(Of Integer)
		Get
			Return Me._shoreLeaveDays
		End Get
		Set
			If (Me._shoreLeaveDays.Equals(value) = false) Then
				Me.OnshoreLeaveDaysChanging(value)
				Me.SendPropertyChanging
				Me._shoreLeaveDays = value
				Me.SendPropertyChanged("shoreLeaveDays")
				Me.OnshoreLeaveDaysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vfcID", DbType:="Int")>  _
	Public Property ml_vfcID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_vfcID
		End Get
		Set
			If (Me._ml_vfcID.Equals(value) = false) Then
				Me.Onml_vfcIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_vfcID = value
				Me.SendPropertyChanged("ml_vfcID")
				Me.Onml_vfcIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_VesselOwnership")>  _
Partial Public Class ml_VesselOwnership
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_voID As Integer
	
	Private _ml_vID As System.Nullable(Of Integer)
	
	Private _ml_cID As System.Nullable(Of Integer)
	
	Private _ml_UserID As System.Nullable(Of Integer)
	
	Private _dateModified As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_voIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_voIDChanged()
    End Sub
    Partial Private Sub Onml_vIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_vIDChanged()
    End Sub
    Partial Private Sub Onml_cIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_cIDChanged()
    End Sub
    Partial Private Sub Onml_UserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_UserIDChanged()
    End Sub
    Partial Private Sub OndateModifiedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndateModifiedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_voID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_voID() As Integer
		Get
			Return Me._ml_voID
		End Get
		Set
			If ((Me._ml_voID = value)  _
						= false) Then
				Me.Onml_voIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_voID = value
				Me.SendPropertyChanged("ml_voID")
				Me.Onml_voIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vID", DbType:="Int")>  _
	Public Property ml_vID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_vID
		End Get
		Set
			If (Me._ml_vID.Equals(value) = false) Then
				Me.Onml_vIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_vID = value
				Me.SendPropertyChanged("ml_vID")
				Me.Onml_vIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_cID", DbType:="Int")>  _
	Public Property ml_cID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_cID
		End Get
		Set
			If (Me._ml_cID.Equals(value) = false) Then
				Me.Onml_cIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_cID = value
				Me.SendPropertyChanged("ml_cID")
				Me.Onml_cIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UserID", DbType:="Int")>  _
	Public Property ml_UserID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_UserID
		End Get
		Set
			If (Me._ml_UserID.Equals(value) = false) Then
				Me.Onml_UserIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_UserID = value
				Me.SendPropertyChanged("ml_UserID")
				Me.Onml_UserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dateModified", DbType:="DateTime")>  _
	Public Property dateModified() As System.Nullable(Of Date)
		Get
			Return Me._dateModified
		End Get
		Set
			If (Me._dateModified.Equals(value) = false) Then
				Me.OndateModifiedChanging(value)
				Me.SendPropertyChanging
				Me._dateModified = value
				Me.SendPropertyChanged("dateModified")
				Me.OndateModifiedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ml_VesselType")>  _
Partial Public Class ml_VesselType
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ml_vtID As Integer
	
	Private _ml_vesType As String
	
	Private _ml_StatID As System.Nullable(Of Integer)
	
	Private _ml_UserID As System.Nullable(Of Integer)
	
	Private _dateModified As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onml_vtIDChanging(value As Integer)
    End Sub
    Partial Private Sub Onml_vtIDChanged()
    End Sub
    Partial Private Sub Onml_vesTypeChanging(value As String)
    End Sub
    Partial Private Sub Onml_vesTypeChanged()
    End Sub
    Partial Private Sub Onml_StatIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_StatIDChanged()
    End Sub
    Partial Private Sub Onml_UserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_UserIDChanged()
    End Sub
    Partial Private Sub OndateModifiedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndateModifiedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vtID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ml_vtID() As Integer
		Get
			Return Me._ml_vtID
		End Get
		Set
			If ((Me._ml_vtID = value)  _
						= false) Then
				Me.Onml_vtIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_vtID = value
				Me.SendPropertyChanged("ml_vtID")
				Me.Onml_vtIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vesType", DbType:="VarChar(20)")>  _
	Public Property ml_vesType() As String
		Get
			Return Me._ml_vesType
		End Get
		Set
			If (String.Equals(Me._ml_vesType, value) = false) Then
				Me.Onml_vesTypeChanging(value)
				Me.SendPropertyChanging
				Me._ml_vesType = value
				Me.SendPropertyChanged("ml_vesType")
				Me.Onml_vesTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_StatID", DbType:="Int")>  _
	Public Property ml_StatID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_StatID
		End Get
		Set
			If (Me._ml_StatID.Equals(value) = false) Then
				Me.Onml_StatIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_StatID = value
				Me.SendPropertyChanged("ml_StatID")
				Me.Onml_StatIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_UserID", DbType:="Int")>  _
	Public Property ml_UserID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_UserID
		End Get
		Set
			If (Me._ml_UserID.Equals(value) = false) Then
				Me.Onml_UserIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_UserID = value
				Me.SendPropertyChanged("ml_UserID")
				Me.Onml_UserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dateModified", DbType:="DateTime")>  _
	Public Property dateModified() As System.Nullable(Of Date)
		Get
			Return Me._dateModified
		End Get
		Set
			If (Me._dateModified.Equals(value) = false) Then
				Me.OndateModifiedChanging(value)
				Me.SendPropertyChanging
				Me._dateModified = value
				Me.SendPropertyChanged("dateModified")
				Me.OndateModifiedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.subDep")>  _
Partial Public Class subDep
	
	Private _sdep_ID As Integer
	
	Private _subDep As String
	
	Private _v_ID As System.Nullable(Of Integer)
	
	Private _vc_ID As System.Nullable(Of Integer)
	
	Private _c_ID As System.Nullable(Of Integer)
	
	Private _vt_ID As System.Nullable(Of Integer)
	
	Private _ms_ID As System.Nullable(Of Integer)
	
	Private _VSAID As String
	
	Private _VESSEL As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sdep_ID", DbType:="Int NOT NULL")>  _
	Public Property sdep_ID() As Integer
		Get
			Return Me._sdep_ID
		End Get
		Set
			If ((Me._sdep_ID = value)  _
						= false) Then
				Me._sdep_ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_subDep", DbType:="VarChar(100)")>  _
	Public Property subDep() As String
		Get
			Return Me._subDep
		End Get
		Set
			If (String.Equals(Me._subDep, value) = false) Then
				Me._subDep = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_v_ID", DbType:="Int")>  _
	Public Property v_ID() As System.Nullable(Of Integer)
		Get
			Return Me._v_ID
		End Get
		Set
			If (Me._v_ID.Equals(value) = false) Then
				Me._v_ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_vc_ID", DbType:="Int")>  _
	Public Property vc_ID() As System.Nullable(Of Integer)
		Get
			Return Me._vc_ID
		End Get
		Set
			If (Me._vc_ID.Equals(value) = false) Then
				Me._vc_ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_c_ID", DbType:="Int")>  _
	Public Property c_ID() As System.Nullable(Of Integer)
		Get
			Return Me._c_ID
		End Get
		Set
			If (Me._c_ID.Equals(value) = false) Then
				Me._c_ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_vt_ID", DbType:="Int")>  _
	Public Property vt_ID() As System.Nullable(Of Integer)
		Get
			Return Me._vt_ID
		End Get
		Set
			If (Me._vt_ID.Equals(value) = false) Then
				Me._vt_ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ms_ID", DbType:="Int")>  _
	Public Property ms_ID() As System.Nullable(Of Integer)
		Get
			Return Me._ms_ID
		End Get
		Set
			If (Me._ms_ID.Equals(value) = false) Then
				Me._ms_ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VSAID", DbType:="VarChar(50)")>  _
	Public Property VSAID() As String
		Get
			Return Me._VSAID
		End Get
		Set
			If (String.Equals(Me._VSAID, value) = false) Then
				Me._VSAID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VESSEL", DbType:="VarChar(50)")>  _
	Public Property VESSEL() As String
		Get
			Return Me._VESSEL
		End Get
		Set
			If (String.Equals(Me._VESSEL, value) = false) Then
				Me._VESSEL = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.supplier")>  _
Partial Public Class supplier
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _s_ID As Integer
	
	Private _cntry_ID As System.Nullable(Of Integer)
	
	Private _cur_ID As System.Nullable(Of Integer)
	
	Private _scat_ID As System.Nullable(Of Integer)
	
	Private _t_ID As System.Nullable(Of Integer)
	
	Private _tx_ID As System.Nullable(Of Integer)
	
	Private _supplierName As String
	
	Private _ms_ID As System.Nullable(Of Integer)
	
	Private _contactPerson As String
	
	Private _address As String
	
	Private _telNo As String
	
	Private _mobNo As String
	
	Private _faxNo As String
	
	Private _emailAdd As String
	
	Private _product As String
	
	Private _winv As System.Nullable(Of Integer)
	
	Private _ml_SupID As System.Nullable(Of Integer)
	
	Private _ml_Supplier As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Ons_IDChanging(value As Integer)
    End Sub
    Partial Private Sub Ons_IDChanged()
    End Sub
    Partial Private Sub Oncntry_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncntry_IDChanged()
    End Sub
    Partial Private Sub Oncur_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncur_IDChanged()
    End Sub
    Partial Private Sub Onscat_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onscat_IDChanged()
    End Sub
    Partial Private Sub Ont_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ont_IDChanged()
    End Sub
    Partial Private Sub Ontx_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ontx_IDChanged()
    End Sub
    Partial Private Sub OnsupplierNameChanging(value As String)
    End Sub
    Partial Private Sub OnsupplierNameChanged()
    End Sub
    Partial Private Sub Onms_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onms_IDChanged()
    End Sub
    Partial Private Sub OncontactPersonChanging(value As String)
    End Sub
    Partial Private Sub OncontactPersonChanged()
    End Sub
    Partial Private Sub OnaddressChanging(value As String)
    End Sub
    Partial Private Sub OnaddressChanged()
    End Sub
    Partial Private Sub OntelNoChanging(value As String)
    End Sub
    Partial Private Sub OntelNoChanged()
    End Sub
    Partial Private Sub OnmobNoChanging(value As String)
    End Sub
    Partial Private Sub OnmobNoChanged()
    End Sub
    Partial Private Sub OnfaxNoChanging(value As String)
    End Sub
    Partial Private Sub OnfaxNoChanged()
    End Sub
    Partial Private Sub OnemailAddChanging(value As String)
    End Sub
    Partial Private Sub OnemailAddChanged()
    End Sub
    Partial Private Sub OnproductChanging(value As String)
    End Sub
    Partial Private Sub OnproductChanged()
    End Sub
    Partial Private Sub OnwinvChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnwinvChanged()
    End Sub
    Partial Private Sub Onml_SupIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onml_SupIDChanged()
    End Sub
    Partial Private Sub Onml_SupplierChanging(value As String)
    End Sub
    Partial Private Sub Onml_SupplierChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_s_ID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property s_ID() As Integer
		Get
			Return Me._s_ID
		End Get
		Set
			If ((Me._s_ID = value)  _
						= false) Then
				Me.Ons_IDChanging(value)
				Me.SendPropertyChanging
				Me._s_ID = value
				Me.SendPropertyChanged("s_ID")
				Me.Ons_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cntry_ID", DbType:="Int")>  _
	Public Property cntry_ID() As System.Nullable(Of Integer)
		Get
			Return Me._cntry_ID
		End Get
		Set
			If (Me._cntry_ID.Equals(value) = false) Then
				Me.Oncntry_IDChanging(value)
				Me.SendPropertyChanging
				Me._cntry_ID = value
				Me.SendPropertyChanged("cntry_ID")
				Me.Oncntry_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cur_ID", DbType:="Int")>  _
	Public Property cur_ID() As System.Nullable(Of Integer)
		Get
			Return Me._cur_ID
		End Get
		Set
			If (Me._cur_ID.Equals(value) = false) Then
				Me.Oncur_IDChanging(value)
				Me.SendPropertyChanging
				Me._cur_ID = value
				Me.SendPropertyChanged("cur_ID")
				Me.Oncur_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_scat_ID", DbType:="Int")>  _
	Public Property scat_ID() As System.Nullable(Of Integer)
		Get
			Return Me._scat_ID
		End Get
		Set
			If (Me._scat_ID.Equals(value) = false) Then
				Me.Onscat_IDChanging(value)
				Me.SendPropertyChanging
				Me._scat_ID = value
				Me.SendPropertyChanged("scat_ID")
				Me.Onscat_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_t_ID", DbType:="Int")>  _
	Public Property t_ID() As System.Nullable(Of Integer)
		Get
			Return Me._t_ID
		End Get
		Set
			If (Me._t_ID.Equals(value) = false) Then
				Me.Ont_IDChanging(value)
				Me.SendPropertyChanging
				Me._t_ID = value
				Me.SendPropertyChanged("t_ID")
				Me.Ont_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tx_ID", DbType:="Int")>  _
	Public Property tx_ID() As System.Nullable(Of Integer)
		Get
			Return Me._tx_ID
		End Get
		Set
			If (Me._tx_ID.Equals(value) = false) Then
				Me.Ontx_IDChanging(value)
				Me.SendPropertyChanging
				Me._tx_ID = value
				Me.SendPropertyChanged("tx_ID")
				Me.Ontx_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_supplierName", DbType:="VarChar(100)")>  _
	Public Property supplierName() As String
		Get
			Return Me._supplierName
		End Get
		Set
			If (String.Equals(Me._supplierName, value) = false) Then
				Me.OnsupplierNameChanging(value)
				Me.SendPropertyChanging
				Me._supplierName = value
				Me.SendPropertyChanged("supplierName")
				Me.OnsupplierNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ms_ID", DbType:="Int")>  _
	Public Property ms_ID() As System.Nullable(Of Integer)
		Get
			Return Me._ms_ID
		End Get
		Set
			If (Me._ms_ID.Equals(value) = false) Then
				Me.Onms_IDChanging(value)
				Me.SendPropertyChanging
				Me._ms_ID = value
				Me.SendPropertyChanged("ms_ID")
				Me.Onms_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_contactPerson", DbType:="VarChar(100)")>  _
	Public Property contactPerson() As String
		Get
			Return Me._contactPerson
		End Get
		Set
			If (String.Equals(Me._contactPerson, value) = false) Then
				Me.OncontactPersonChanging(value)
				Me.SendPropertyChanging
				Me._contactPerson = value
				Me.SendPropertyChanged("contactPerson")
				Me.OncontactPersonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_address", DbType:="VarChar(300)")>  _
	Public Property address() As String
		Get
			Return Me._address
		End Get
		Set
			If (String.Equals(Me._address, value) = false) Then
				Me.OnaddressChanging(value)
				Me.SendPropertyChanging
				Me._address = value
				Me.SendPropertyChanged("address")
				Me.OnaddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_telNo", DbType:="VarChar(100)")>  _
	Public Property telNo() As String
		Get
			Return Me._telNo
		End Get
		Set
			If (String.Equals(Me._telNo, value) = false) Then
				Me.OntelNoChanging(value)
				Me.SendPropertyChanging
				Me._telNo = value
				Me.SendPropertyChanged("telNo")
				Me.OntelNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mobNo", DbType:="VarChar(100)")>  _
	Public Property mobNo() As String
		Get
			Return Me._mobNo
		End Get
		Set
			If (String.Equals(Me._mobNo, value) = false) Then
				Me.OnmobNoChanging(value)
				Me.SendPropertyChanging
				Me._mobNo = value
				Me.SendPropertyChanged("mobNo")
				Me.OnmobNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_faxNo", DbType:="VarChar(100)")>  _
	Public Property faxNo() As String
		Get
			Return Me._faxNo
		End Get
		Set
			If (String.Equals(Me._faxNo, value) = false) Then
				Me.OnfaxNoChanging(value)
				Me.SendPropertyChanging
				Me._faxNo = value
				Me.SendPropertyChanged("faxNo")
				Me.OnfaxNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_emailAdd", DbType:="VarChar(100)")>  _
	Public Property emailAdd() As String
		Get
			Return Me._emailAdd
		End Get
		Set
			If (String.Equals(Me._emailAdd, value) = false) Then
				Me.OnemailAddChanging(value)
				Me.SendPropertyChanging
				Me._emailAdd = value
				Me.SendPropertyChanged("emailAdd")
				Me.OnemailAddChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_product", DbType:="VarChar(500)")>  _
	Public Property product() As String
		Get
			Return Me._product
		End Get
		Set
			If (String.Equals(Me._product, value) = false) Then
				Me.OnproductChanging(value)
				Me.SendPropertyChanging
				Me._product = value
				Me.SendPropertyChanged("product")
				Me.OnproductChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_winv", DbType:="Int")>  _
	Public Property winv() As System.Nullable(Of Integer)
		Get
			Return Me._winv
		End Get
		Set
			If (Me._winv.Equals(value) = false) Then
				Me.OnwinvChanging(value)
				Me.SendPropertyChanging
				Me._winv = value
				Me.SendPropertyChanged("winv")
				Me.OnwinvChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_SupID", DbType:="Int")>  _
	Public Property ml_SupID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_SupID
		End Get
		Set
			If (Me._ml_SupID.Equals(value) = false) Then
				Me.Onml_SupIDChanging(value)
				Me.SendPropertyChanging
				Me._ml_SupID = value
				Me.SendPropertyChanged("ml_SupID")
				Me.Onml_SupIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_Supplier", DbType:="VarChar(100)")>  _
	Public Property ml_Supplier() As String
		Get
			Return Me._ml_Supplier
		End Get
		Set
			If (String.Equals(Me._ml_Supplier, value) = false) Then
				Me.Onml_SupplierChanging(value)
				Me.SendPropertyChanging
				Me._ml_Supplier = value
				Me.SendPropertyChanged("ml_Supplier")
				Me.Onml_SupplierChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HRSVessel")>  _
Partial Public Class HRSVessel
	
	Private _ml_masterVID As System.Nullable(Of Integer)
	
	Private _ml_masterVessel As String
	
	Private _ml_vID As Integer
	
	Private _vesselName As String
	
	Private _ml_vtID As System.Nullable(Of Integer)
	
	Private _ml_vesType As String
	
	Private _ml_vftID As System.Nullable(Of Integer)
	
	Private _ml_fvType As String
	
	Private _ml_CountryID As System.Nullable(Of Integer)
	
	Private _ml_Country As String
	
	Private _ml_CID As System.Nullable(Of Integer)
	
	Private _ml_Company As String
	
	Private _ml_statID As System.Nullable(Of Integer)
	
	Private _ml_Status As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_masterVID", DbType:="Int")>  _
	Public Property ml_masterVID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_masterVID
		End Get
		Set
			If (Me._ml_masterVID.Equals(value) = false) Then
				Me._ml_masterVID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_masterVessel", DbType:="VarChar(100)")>  _
	Public Property ml_masterVessel() As String
		Get
			Return Me._ml_masterVessel
		End Get
		Set
			If (String.Equals(Me._ml_masterVessel, value) = false) Then
				Me._ml_masterVessel = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vID", DbType:="Int NOT NULL")>  _
	Public Property ml_vID() As Integer
		Get
			Return Me._ml_vID
		End Get
		Set
			If ((Me._ml_vID = value)  _
						= false) Then
				Me._ml_vID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_vesselName", DbType:="VarChar(100)")>  _
	Public Property vesselName() As String
		Get
			Return Me._vesselName
		End Get
		Set
			If (String.Equals(Me._vesselName, value) = false) Then
				Me._vesselName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vtID", DbType:="Int")>  _
	Public Property ml_vtID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_vtID
		End Get
		Set
			If (Me._ml_vtID.Equals(value) = false) Then
				Me._ml_vtID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vesType", DbType:="VarChar(20)")>  _
	Public Property ml_vesType() As String
		Get
			Return Me._ml_vesType
		End Get
		Set
			If (String.Equals(Me._ml_vesType, value) = false) Then
				Me._ml_vesType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vftID", DbType:="Int")>  _
	Public Property ml_vftID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_vftID
		End Get
		Set
			If (Me._ml_vftID.Equals(value) = false) Then
				Me._ml_vftID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_fvType", DbType:="VarChar(20)")>  _
	Public Property ml_fvType() As String
		Get
			Return Me._ml_fvType
		End Get
		Set
			If (String.Equals(Me._ml_fvType, value) = false) Then
				Me._ml_fvType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_CountryID", DbType:="Int")>  _
	Public Property ml_CountryID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_CountryID
		End Get
		Set
			If (Me._ml_CountryID.Equals(value) = false) Then
				Me._ml_CountryID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_Country", DbType:="VarChar(50)")>  _
	Public Property ml_Country() As String
		Get
			Return Me._ml_Country
		End Get
		Set
			If (String.Equals(Me._ml_Country, value) = false) Then
				Me._ml_Country = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_CID", DbType:="Int")>  _
	Public Property ml_CID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_CID
		End Get
		Set
			If (Me._ml_CID.Equals(value) = false) Then
				Me._ml_CID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_Company", DbType:="VarChar(100)")>  _
	Public Property ml_Company() As String
		Get
			Return Me._ml_Company
		End Get
		Set
			If (String.Equals(Me._ml_Company, value) = false) Then
				Me._ml_Company = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_statID", DbType:="Int")>  _
	Public Property ml_statID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_statID
		End Get
		Set
			If (Me._ml_statID.Equals(value) = false) Then
				Me._ml_statID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_Status", DbType:="VarChar(10)")>  _
	Public Property ml_Status() As String
		Get
			Return Me._ml_Status
		End Get
		Set
			If (String.Equals(Me._ml_Status, value) = false) Then
				Me._ml_Status = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vVesselOwnage")>  _
Partial Public Class vVesselOwnage
	
	Private _ml_vid As Integer
	
	Private _vesselName As String
	
	Private _ml_CID As System.Nullable(Of Integer)
	
	Private _ml_Company As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vid", DbType:="Int NOT NULL")>  _
	Public Property ml_vid() As Integer
		Get
			Return Me._ml_vid
		End Get
		Set
			If ((Me._ml_vid = value)  _
						= false) Then
				Me._ml_vid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_vesselName", DbType:="VarChar(100)")>  _
	Public Property vesselName() As String
		Get
			Return Me._vesselName
		End Get
		Set
			If (String.Equals(Me._vesselName, value) = false) Then
				Me._vesselName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_CID", DbType:="Int")>  _
	Public Property ml_CID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_CID
		End Get
		Set
			If (Me._ml_CID.Equals(value) = false) Then
				Me._ml_CID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_Company", DbType:="VarChar(100)")>  _
	Public Property ml_Company() As String
		Get
			Return Me._ml_Company
		End Get
		Set
			If (String.Equals(Me._ml_Company, value) = false) Then
				Me._ml_Company = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vMl_Supplier")>  _
Partial Public Class vMl_Supplier
	
	Private _ml_SupID As Integer
	
	Private _ml_countryID As System.Nullable(Of Integer)
	
	Private _ml_CityID As System.Nullable(Of Integer)
	
	Private _ml_currencyID As System.Nullable(Of Integer)
	
	Private _ml_supCatID As System.Nullable(Of Integer)
	
	Private _ml_termID As System.Nullable(Of Integer)
	
	Private _ml_taxID As System.Nullable(Of Integer)
	
	Private _ml_Supplier As String
	
	Private _ml_ContactPerson As String
	
	Private _ml_Country As String
	
	Private _ml_currCode As String
	
	Private _ml_supplierAddress As String
	
	Private _ml_TelNum As String
	
	Private _ml_supCat As String
	
	Private _ml_terms As String
	
	Private _ml_taxName As String
	
	Private _withInv As System.Nullable(Of Boolean)
	
	Private _ml_statID As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_SupID", DbType:="Int NOT NULL")>  _
	Public Property ml_SupID() As Integer
		Get
			Return Me._ml_SupID
		End Get
		Set
			If ((Me._ml_SupID = value)  _
						= false) Then
				Me._ml_SupID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_countryID", DbType:="Int")>  _
	Public Property ml_countryID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_countryID
		End Get
		Set
			If (Me._ml_countryID.Equals(value) = false) Then
				Me._ml_countryID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_CityID", DbType:="Int")>  _
	Public Property ml_CityID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_CityID
		End Get
		Set
			If (Me._ml_CityID.Equals(value) = false) Then
				Me._ml_CityID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_currencyID", DbType:="Int")>  _
	Public Property ml_currencyID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_currencyID
		End Get
		Set
			If (Me._ml_currencyID.Equals(value) = false) Then
				Me._ml_currencyID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_supCatID", DbType:="Int")>  _
	Public Property ml_supCatID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_supCatID
		End Get
		Set
			If (Me._ml_supCatID.Equals(value) = false) Then
				Me._ml_supCatID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_termID", DbType:="Int")>  _
	Public Property ml_termID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_termID
		End Get
		Set
			If (Me._ml_termID.Equals(value) = false) Then
				Me._ml_termID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_taxID", DbType:="Int")>  _
	Public Property ml_taxID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_taxID
		End Get
		Set
			If (Me._ml_taxID.Equals(value) = false) Then
				Me._ml_taxID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_Supplier", DbType:="VarChar(100)")>  _
	Public Property ml_Supplier() As String
		Get
			Return Me._ml_Supplier
		End Get
		Set
			If (String.Equals(Me._ml_Supplier, value) = false) Then
				Me._ml_Supplier = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_ContactPerson", DbType:="VarChar(50)")>  _
	Public Property ml_ContactPerson() As String
		Get
			Return Me._ml_ContactPerson
		End Get
		Set
			If (String.Equals(Me._ml_ContactPerson, value) = false) Then
				Me._ml_ContactPerson = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_Country", DbType:="VarChar(50)")>  _
	Public Property ml_Country() As String
		Get
			Return Me._ml_Country
		End Get
		Set
			If (String.Equals(Me._ml_Country, value) = false) Then
				Me._ml_Country = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_currCode", DbType:="VarChar(10)")>  _
	Public Property ml_currCode() As String
		Get
			Return Me._ml_currCode
		End Get
		Set
			If (String.Equals(Me._ml_currCode, value) = false) Then
				Me._ml_currCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_supplierAddress", DbType:="VarChar(202)")>  _
	Public Property ml_supplierAddress() As String
		Get
			Return Me._ml_supplierAddress
		End Get
		Set
			If (String.Equals(Me._ml_supplierAddress, value) = false) Then
				Me._ml_supplierAddress = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_TelNum", DbType:="VarChar(20)")>  _
	Public Property ml_TelNum() As String
		Get
			Return Me._ml_TelNum
		End Get
		Set
			If (String.Equals(Me._ml_TelNum, value) = false) Then
				Me._ml_TelNum = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_supCat", DbType:="VarChar(50)")>  _
	Public Property ml_supCat() As String
		Get
			Return Me._ml_supCat
		End Get
		Set
			If (String.Equals(Me._ml_supCat, value) = false) Then
				Me._ml_supCat = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_terms", DbType:="VarChar(50)")>  _
	Public Property ml_terms() As String
		Get
			Return Me._ml_terms
		End Get
		Set
			If (String.Equals(Me._ml_terms, value) = false) Then
				Me._ml_terms = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_taxName", DbType:="VarChar(50)")>  _
	Public Property ml_taxName() As String
		Get
			Return Me._ml_taxName
		End Get
		Set
			If (String.Equals(Me._ml_taxName, value) = false) Then
				Me._ml_taxName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_withInv", DbType:="Bit")>  _
	Public Property withInv() As System.Nullable(Of Boolean)
		Get
			Return Me._withInv
		End Get
		Set
			If (Me._withInv.Equals(value) = false) Then
				Me._withInv = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_statID", DbType:="Int")>  _
	Public Property ml_statID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_statID
		End Get
		Set
			If (Me._ml_statID.Equals(value) = false) Then
				Me._ml_statID = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vML_SupplierLocation")>  _
Partial Public Class vML_SupplierLocation
	
	Private _locationID As System.Nullable(Of Integer)
	
	Private _location As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_locationID", DbType:="Int")>  _
	Public Property locationID() As System.Nullable(Of Integer)
		Get
			Return Me._locationID
		End Get
		Set
			If (Me._locationID.Equals(value) = false) Then
				Me._locationID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_location", DbType:="VarChar(50)")>  _
	Public Property location() As String
		Get
			Return Me._location
		End Get
		Set
			If (String.Equals(Me._location, value) = false) Then
				Me._location = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vML_VesselClass")>  _
Partial Public Class vML_VesselClass
	
	Private _ml_masterVID As System.Nullable(Of Integer)
	
	Private _ml_masterVessel As String
	
	Private _ml_vID As Integer
	
	Private _vesselName As String
	
	Private _ml_vtID As System.Nullable(Of Integer)
	
	Private _ml_vesType As String
	
	Private _ml_vftID As System.Nullable(Of Integer)
	
	Private _ml_fvType As String
	
	Private _ml_CountryID As System.Nullable(Of Integer)
	
	Private _ml_Country As String
	
	Private _ml_CID As System.Nullable(Of Integer)
	
	Private _ml_Company As String
	
	Private _ml_statID As System.Nullable(Of Integer)
	
	Private _ml_status As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_masterVID", DbType:="Int")>  _
	Public Property ml_masterVID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_masterVID
		End Get
		Set
			If (Me._ml_masterVID.Equals(value) = false) Then
				Me._ml_masterVID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_masterVessel", DbType:="VarChar(100)")>  _
	Public Property ml_masterVessel() As String
		Get
			Return Me._ml_masterVessel
		End Get
		Set
			If (String.Equals(Me._ml_masterVessel, value) = false) Then
				Me._ml_masterVessel = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vID", DbType:="Int NOT NULL")>  _
	Public Property ml_vID() As Integer
		Get
			Return Me._ml_vID
		End Get
		Set
			If ((Me._ml_vID = value)  _
						= false) Then
				Me._ml_vID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_vesselName", DbType:="VarChar(100)")>  _
	Public Property vesselName() As String
		Get
			Return Me._vesselName
		End Get
		Set
			If (String.Equals(Me._vesselName, value) = false) Then
				Me._vesselName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vtID", DbType:="Int")>  _
	Public Property ml_vtID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_vtID
		End Get
		Set
			If (Me._ml_vtID.Equals(value) = false) Then
				Me._ml_vtID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vesType", DbType:="VarChar(20)")>  _
	Public Property ml_vesType() As String
		Get
			Return Me._ml_vesType
		End Get
		Set
			If (String.Equals(Me._ml_vesType, value) = false) Then
				Me._ml_vesType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vftID", DbType:="Int")>  _
	Public Property ml_vftID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_vftID
		End Get
		Set
			If (Me._ml_vftID.Equals(value) = false) Then
				Me._ml_vftID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_fvType", DbType:="VarChar(20)")>  _
	Public Property ml_fvType() As String
		Get
			Return Me._ml_fvType
		End Get
		Set
			If (String.Equals(Me._ml_fvType, value) = false) Then
				Me._ml_fvType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_CountryID", DbType:="Int")>  _
	Public Property ml_CountryID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_CountryID
		End Get
		Set
			If (Me._ml_CountryID.Equals(value) = false) Then
				Me._ml_CountryID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_Country", DbType:="VarChar(50)")>  _
	Public Property ml_Country() As String
		Get
			Return Me._ml_Country
		End Get
		Set
			If (String.Equals(Me._ml_Country, value) = false) Then
				Me._ml_Country = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_CID", DbType:="Int")>  _
	Public Property ml_CID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_CID
		End Get
		Set
			If (Me._ml_CID.Equals(value) = false) Then
				Me._ml_CID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_Company", DbType:="VarChar(100)")>  _
	Public Property ml_Company() As String
		Get
			Return Me._ml_Company
		End Get
		Set
			If (String.Equals(Me._ml_Company, value) = false) Then
				Me._ml_Company = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_statID", DbType:="Int")>  _
	Public Property ml_statID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_statID
		End Get
		Set
			If (Me._ml_statID.Equals(value) = false) Then
				Me._ml_statID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_status", DbType:="VarChar(10)")>  _
	Public Property ml_status() As String
		Get
			Return Me._ml_status
		End Get
		Set
			If (String.Equals(Me._ml_status, value) = false) Then
				Me._ml_status = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vMl_VesselClassification")>  _
Partial Public Class vMl_VesselClassification
	
	Private _ml_CID As System.Nullable(Of Integer)
	
	Private _ml_Company As String
	
	Private _ml_masterVID As System.Nullable(Of Integer)
	
	Private _ml_masterVessel As String
	
	Private _ml_sID As System.Nullable(Of Integer)
	
	Private _ml_Section As String
	
	Private _ml_vID As Integer
	
	Private _vesselName As String
	
	Private _ml_vtID As System.Nullable(Of Integer)
	
	Private _ml_vesType As String
	
	Private _ml_vftID As System.Nullable(Of Integer)
	
	Private _ml_fvType As String
	
	Private _ml_vfcID As System.Nullable(Of Integer)
	
	Private _ml_vfClass As String
	
	Private _ml_CountryID As System.Nullable(Of Integer)
	
	Private _ml_Country As String
	
	Private _ml_statID As System.Nullable(Of Integer)
	
	Private _ml_status As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_CID", DbType:="Int")>  _
	Public Property ml_CID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_CID
		End Get
		Set
			If (Me._ml_CID.Equals(value) = false) Then
				Me._ml_CID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_Company", DbType:="VarChar(100)")>  _
	Public Property ml_Company() As String
		Get
			Return Me._ml_Company
		End Get
		Set
			If (String.Equals(Me._ml_Company, value) = false) Then
				Me._ml_Company = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_masterVID", DbType:="Int")>  _
	Public Property ml_masterVID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_masterVID
		End Get
		Set
			If (Me._ml_masterVID.Equals(value) = false) Then
				Me._ml_masterVID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_masterVessel", DbType:="VarChar(100)")>  _
	Public Property ml_masterVessel() As String
		Get
			Return Me._ml_masterVessel
		End Get
		Set
			If (String.Equals(Me._ml_masterVessel, value) = false) Then
				Me._ml_masterVessel = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_sID", DbType:="Int")>  _
	Public Property ml_sID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_sID
		End Get
		Set
			If (Me._ml_sID.Equals(value) = false) Then
				Me._ml_sID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_Section", DbType:="VarChar(50)")>  _
	Public Property ml_Section() As String
		Get
			Return Me._ml_Section
		End Get
		Set
			If (String.Equals(Me._ml_Section, value) = false) Then
				Me._ml_Section = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vID", DbType:="Int NOT NULL")>  _
	Public Property ml_vID() As Integer
		Get
			Return Me._ml_vID
		End Get
		Set
			If ((Me._ml_vID = value)  _
						= false) Then
				Me._ml_vID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_vesselName", DbType:="VarChar(100)")>  _
	Public Property vesselName() As String
		Get
			Return Me._vesselName
		End Get
		Set
			If (String.Equals(Me._vesselName, value) = false) Then
				Me._vesselName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vtID", DbType:="Int")>  _
	Public Property ml_vtID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_vtID
		End Get
		Set
			If (Me._ml_vtID.Equals(value) = false) Then
				Me._ml_vtID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vesType", DbType:="VarChar(20)")>  _
	Public Property ml_vesType() As String
		Get
			Return Me._ml_vesType
		End Get
		Set
			If (String.Equals(Me._ml_vesType, value) = false) Then
				Me._ml_vesType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vftID", DbType:="Int")>  _
	Public Property ml_vftID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_vftID
		End Get
		Set
			If (Me._ml_vftID.Equals(value) = false) Then
				Me._ml_vftID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_fvType", DbType:="VarChar(20)")>  _
	Public Property ml_fvType() As String
		Get
			Return Me._ml_fvType
		End Get
		Set
			If (String.Equals(Me._ml_fvType, value) = false) Then
				Me._ml_fvType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vfcID", DbType:="Int")>  _
	Public Property ml_vfcID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_vfcID
		End Get
		Set
			If (Me._ml_vfcID.Equals(value) = false) Then
				Me._ml_vfcID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vfClass", DbType:="VarChar(50)")>  _
	Public Property ml_vfClass() As String
		Get
			Return Me._ml_vfClass
		End Get
		Set
			If (String.Equals(Me._ml_vfClass, value) = false) Then
				Me._ml_vfClass = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_CountryID", DbType:="Int")>  _
	Public Property ml_CountryID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_CountryID
		End Get
		Set
			If (Me._ml_CountryID.Equals(value) = false) Then
				Me._ml_CountryID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_Country", DbType:="VarChar(50)")>  _
	Public Property ml_Country() As String
		Get
			Return Me._ml_Country
		End Get
		Set
			If (String.Equals(Me._ml_Country, value) = false) Then
				Me._ml_Country = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_statID", DbType:="Int")>  _
	Public Property ml_statID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_statID
		End Get
		Set
			If (Me._ml_statID.Equals(value) = false) Then
				Me._ml_statID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_status", DbType:="VarChar(10)")>  _
	Public Property ml_status() As String
		Get
			Return Me._ml_status
		End Get
		Set
			If (String.Equals(Me._ml_status, value) = false) Then
				Me._ml_status = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vML_VesselCompanyHistory")>  _
Partial Public Class vML_VesselCompanyHistory
	
	Private _ml_vID As Integer
	
	Private _VesselName As String
	
	Private _ml_CID As Integer
	
	Private _ml_Company As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vID", DbType:="Int NOT NULL")>  _
	Public Property ml_vID() As Integer
		Get
			Return Me._ml_vID
		End Get
		Set
			If ((Me._ml_vID = value)  _
						= false) Then
				Me._ml_vID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VesselName", DbType:="VarChar(100)")>  _
	Public Property VesselName() As String
		Get
			Return Me._VesselName
		End Get
		Set
			If (String.Equals(Me._VesselName, value) = false) Then
				Me._VesselName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_CID", DbType:="Int NOT NULL")>  _
	Public Property ml_CID() As Integer
		Get
			Return Me._ml_CID
		End Get
		Set
			If ((Me._ml_CID = value)  _
						= false) Then
				Me._ml_CID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_Company", DbType:="VarChar(100)")>  _
	Public Property ml_Company() As String
		Get
			Return Me._ml_Company
		End Get
		Set
			If (String.Equals(Me._ml_Company, value) = false) Then
				Me._ml_Company = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vMl_VesselList")>  _
Partial Public Class vMl_VesselList
	
	Private _ml_vID As System.Nullable(Of Integer)
	
	Private _vesselName As String
	
	Private _ml_vtID As System.Nullable(Of Integer)
	
	Private _ml_vftID As System.Nullable(Of Integer)
	
	Private _ml_fvType As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vID", DbType:="Int")>  _
	Public Property ml_vID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_vID
		End Get
		Set
			If (Me._ml_vID.Equals(value) = false) Then
				Me._ml_vID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_vesselName", DbType:="VarChar(100)")>  _
	Public Property vesselName() As String
		Get
			Return Me._vesselName
		End Get
		Set
			If (String.Equals(Me._vesselName, value) = false) Then
				Me._vesselName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vtID", DbType:="Int")>  _
	Public Property ml_vtID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_vtID
		End Get
		Set
			If (Me._ml_vtID.Equals(value) = false) Then
				Me._ml_vtID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_vftID", DbType:="Int")>  _
	Public Property ml_vftID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_vftID
		End Get
		Set
			If (Me._ml_vftID.Equals(value) = false) Then
				Me._ml_vftID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_fvType", DbType:="VarChar(20)")>  _
	Public Property ml_fvType() As String
		Get
			Return Me._ml_fvType
		End Get
		Set
			If (String.Equals(Me._ml_fvType, value) = false) Then
				Me._ml_fvType = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vPositionGroupNum")>  _
Partial Public Class vPositionGroupNum
	
	Private _ml_groupNum As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_groupNum", DbType:="Int")>  _
	Public Property ml_groupNum() As System.Nullable(Of Integer)
		Get
			Return Me._ml_groupNum
		End Get
		Set
			If (Me._ml_groupNum.Equals(value) = false) Then
				Me._ml_groupNum = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vSecNotDefault")>  _
Partial Public Class vSecNotDefault
	
	Private _ml_sID As Integer
	
	Private _ml_Section As String
	
	Private _ml_StatID As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_sID", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property ml_sID() As Integer
		Get
			Return Me._ml_sID
		End Get
		Set
			If ((Me._ml_sID = value)  _
						= false) Then
				Me._ml_sID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_Section", DbType:="VarChar(50)")>  _
	Public Property ml_Section() As String
		Get
			Return Me._ml_Section
		End Get
		Set
			If (String.Equals(Me._ml_Section, value) = false) Then
				Me._ml_Section = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_StatID", DbType:="Int")>  _
	Public Property ml_StatID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_StatID
		End Get
		Set
			If (Me._ml_StatID.Equals(value) = false) Then
				Me._ml_StatID = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vSecUnassigned")>  _
Partial Public Class vSecUnassigned
	
	Private _ml_sID As Integer
	
	Private _ml_Section As String
	
	Private _ml_StatID As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_sID", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property ml_sID() As Integer
		Get
			Return Me._ml_sID
		End Get
		Set
			If ((Me._ml_sID = value)  _
						= false) Then
				Me._ml_sID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_Section", DbType:="VarChar(50)")>  _
	Public Property ml_Section() As String
		Get
			Return Me._ml_Section
		End Get
		Set
			If (String.Equals(Me._ml_Section, value) = false) Then
				Me._ml_Section = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_StatID", DbType:="Int")>  _
	Public Property ml_StatID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_StatID
		End Get
		Set
			If (Me._ml_StatID.Equals(value) = false) Then
				Me._ml_StatID = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vSupplierSummary")>  _
Partial Public Class vSupplierSummary
	
	Private _ml_SupID As Integer
	
	Private _ml_Supplier As String
	
	Private _ml_termID As System.Nullable(Of Integer)
	
	Private _terms As String
	
	Private _ml_taxID As System.Nullable(Of Integer)
	
	Private _taxName As String
	
	Private _ml_currencyID As System.Nullable(Of Integer)
	
	Private _ml_currCode As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_SupID", DbType:="Int NOT NULL")>  _
	Public Property ml_SupID() As Integer
		Get
			Return Me._ml_SupID
		End Get
		Set
			If ((Me._ml_SupID = value)  _
						= false) Then
				Me._ml_SupID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_Supplier", DbType:="VarChar(100)")>  _
	Public Property ml_Supplier() As String
		Get
			Return Me._ml_Supplier
		End Get
		Set
			If (String.Equals(Me._ml_Supplier, value) = false) Then
				Me._ml_Supplier = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_termID", DbType:="Int")>  _
	Public Property ml_termID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_termID
		End Get
		Set
			If (Me._ml_termID.Equals(value) = false) Then
				Me._ml_termID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_terms", DbType:="VarChar(50)")>  _
	Public Property terms() As String
		Get
			Return Me._terms
		End Get
		Set
			If (String.Equals(Me._terms, value) = false) Then
				Me._terms = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_taxID", DbType:="Int")>  _
	Public Property ml_taxID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_taxID
		End Get
		Set
			If (Me._ml_taxID.Equals(value) = false) Then
				Me._ml_taxID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_taxName", DbType:="VarChar(50)")>  _
	Public Property taxName() As String
		Get
			Return Me._taxName
		End Get
		Set
			If (String.Equals(Me._taxName, value) = false) Then
				Me._taxName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_currencyID", DbType:="Int")>  _
	Public Property ml_currencyID() As System.Nullable(Of Integer)
		Get
			Return Me._ml_currencyID
		End Get
		Set
			If (Me._ml_currencyID.Equals(value) = false) Then
				Me._ml_currencyID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ml_currCode", DbType:="VarChar(10)")>  _
	Public Property ml_currCode() As String
		Get
			Return Me._ml_currCode
		End Get
		Set
			If (String.Equals(Me._ml_currCode, value) = false) Then
				Me._ml_currCode = value
			End If
		End Set
	End Property
End Class
